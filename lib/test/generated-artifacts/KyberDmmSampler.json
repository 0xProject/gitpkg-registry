{
    "schemaVersion": "2.0.0",
    "contractName": "KyberDmmSampler",
    "compilerOutput": {
        "abi": [
            {
                "inputs": [
                    {
                        "internalType": "address",
                        "name": "router",
                        "type": "address"
                    },
                    {
                        "internalType": "address[]",
                        "name": "path",
                        "type": "address[]"
                    }
                ],
                "name": "sampleBuysFromKyberDmmGlobal",
                "outputs": [
                    {
                        "internalType": "address[]",
                        "name": "pools",
                        "type": "address[]"
                    },
                    {
                        "internalType": "uint256[]",
                        "name": "takerTokenAmounts",
                        "type": "uint256[]"
                    }
                ],
                "stateMutability": "view",
                "type": "function"
            },
            {
                "inputs": [
                    {
                        "internalType": "address",
                        "name": "router",
                        "type": "address"
                    },
                    {
                        "internalType": "address[]",
                        "name": "path",
                        "type": "address[]"
                    }
                ],
                "name": "sampleSellsFromKyberDmmGlobal",
                "outputs": [
                    {
                        "internalType": "address[]",
                        "name": "pools",
                        "type": "address[]"
                    },
                    {
                        "internalType": "uint256[]",
                        "name": "makerTokenAmounts",
                        "type": "uint256[]"
                    }
                ],
                "stateMutability": "view",
                "type": "function"
            },
            {
                "inputs": [
                    {
                        "internalType": "uint256[]",
                        "name": "sampleValues",
                        "type": "uint256[]"
                    }
                ],
                "name": "setSampleValues",
                "outputs": [],
                "stateMutability": "nonpayable",
                "type": "function"
            }
        ],
        "devdoc": {
            "kind": "dev",
            "methods": {
                "sampleBuysFromKyberDmmGlobal(address,address[])": {
                    "details": "Sample buy quotes from KyberDmm.",
                    "params": {
                        "path": "Token route. Should be takerToken -> makerToken.",
                        "router": "Router to look up tokens and amounts"
                    },
                    "returns": {
                        "pools": "The pool addresses involved in the multi path trade",
                        "takerTokenAmounts": "Taker amounts sold at each maker token         amount."
                    }
                },
                "sampleSellsFromKyberDmmGlobal(address,address[])": {
                    "details": "Sample sell quotes from KyberDmm.",
                    "params": {
                        "path": "Token route. Should be takerToken -> makerToken",
                        "router": "Router to look up tokens and amounts"
                    },
                    "returns": {
                        "makerTokenAmounts": "Maker amounts bought at each taker token         amount.",
                        "pools": "The pool addresses involved in the multi path trade"
                    }
                }
            },
            "stateVariables": {
                "KYBER_DMM_CALL_GAS": {
                    "details": "Gas limit for KyberDmm calls."
                }
            },
            "version": 1
        },
        "evm": {
            "bytecode": {
                "linkReferences": {},
                "object": "0x6000608081905260a0604081905261001891908161002b565b5034801561002557600080fd5b5061008b565b828054828255906000526020600020908101928215610066579160200282015b8281111561006657825182559160200191906001019061004b565b50610072929150610076565b5090565b5b808211156100725760008155600101610077565b610c118061009a6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80633dd941a414610046578063b9184dd114610070578063cf56b39714610085575b600080fd5b610059610054366004610829565b610098565b604051610067929190610af1565b60405180910390f35b61008361007e366004610974565b610101565b005b610059610093366004610829565b610118565b6060806100f6848460008054806020026020016040519081016040528092919081815260200182805480156100ec57602002820191906000526020600020905b8154815260200190600101908083116100d8575b5050505050610176565b909590945092505050565b805161011490600090602084019061079b565b5050565b6060806100f68484600080548060200260200160405190810160405280929190818152602001828054801561016c57602002820191906000526020600020905b815481526020019060010190808311610158575b505050505061031d565b805160609081908067ffffffffffffffff8111801561019457600080fd5b506040519080825280602002602001820160405280156101be578160200160208202803683370190505b5091506101cb86866104aa565b92508251600014156101dd5750610315565b60005b8181101561031257866001600160a01b031663a8312b1d620249f087848151811061020757fe5b6020026020010151878a6040518563ffffffff1660e01b815260040161022f93929190610b47565b60006040518083038187803b15801561024757600080fd5b5086fa9350505050801561027d57506040513d6000823e601f3d908101601f1916820160405261027a91908101906109f8565b60015b6102b7573d8080156102ab576040519150601f19603f3d011682016040523d82523d6000602084013e6102b0565b606091505b5050610312565b806001885103815181106102c757fe5b60200260200101518483815181106102db57fe5b6020026020010181815250508382815181106102f357fe5b6020026020010151600014156103095750610312565b506001016101e0565b50505b935093915050565b805160609081908067ffffffffffffffff8111801561033b57600080fd5b50604051908082528060200260200182016040528015610365578160200160208202803683370190505b50915061037286866104aa565b92508251600014156103845750610315565b60005b8181101561031257866001600160a01b0316639e269b68620249f08784815181106103ae57fe5b6020026020010151878a6040518563ffffffff1660e01b81526004016103d693929190610b47565b60006040518083038187803b1580156103ee57600080fd5b5086fa9350505050801561042457506040513d6000823e601f3d908101601f1916820160405261042191908101906109f8565b60015b610452573d8080156102ab576040519150601f19603f3d011682016040523d82523d6000602084013e6102b0565b8060008151811061045f57fe5b602002602001015184838151811061047357fe5b60200260200101818152505083828151811061048b57fe5b6020026020010151600014156104a15750610312565b50600101610387565b60606000836001600160a01b031663c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b1580156104e757600080fd5b505afa1580156104fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051f9190610806565b9050600183510367ffffffffffffffff8111801561053c57600080fd5b50604051908082528060200260200182016040528015610566578160200160208202803683370190505b50915060005b8251811015610792576060826001600160a01b0316635b1dc86f620249f087858151811061059657fe5b60200260200101518886600101815181106105ad57fe5b60200260200101516040518463ffffffff1660e01b81526004016105d2929190610ad7565b60006040518083038187803b1580156105ea57600080fd5b5086fa9350505050801561062057506040513d6000823e601f3d908101601f1916820160405261061d91908101906108db565b60015b61068e573d80801561064e576040519150601f19603f3d011682016040523d82523d6000602084013e610653565b606091505b506000805b50604051908082528060200260200182016040528015610682578160200160208202803683370190505b50945050505050610795565b805161069c57600080610658565b6000805b82518110156107865760008382815181106106b757fe5b60200260200101516001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156106f757600080fd5b505afa15801561070b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072f9190610a7c565b90508281111561077d5780925083828151811061074857fe5b602002602001015188878151811061075c57fe5b60200260200101906001600160a01b031690816001600160a01b0316815250505b506001016106a0565b5050505060010161056c565b50505b92915050565b8280548282559060005260206000209081019282156107d6579160200282015b828111156107d65782518255916020019190600101906107bb565b506107e29291506107e6565b5090565b5b808211156107e257600081556001016107e7565b803561079581610bc3565b600060208284031215610817578081fd5b815161082281610bc3565b9392505050565b6000806040838503121561083b578081fd5b823561084681610bc3565b915060208381013567ffffffffffffffff811115610862578283fd5b8401601f81018613610872578283fd5b803561088561088082610ba3565b610b7c565b81815283810190838501858402850186018a10156108a1578687fd5b8694505b838510156108cb576108b78a826107fb565b8352600194909401939185019185016108a5565b5080955050505050509250929050565b600060208083850312156108ed578182fd5b825167ffffffffffffffff811115610903578283fd5b8301601f81018513610913578283fd5b805161092161088082610ba3565b818152838101908385018584028501860189101561093d578687fd5b8694505b8385101561096857805161095481610bc3565b835260019490940193918501918501610941565b50979650505050505050565b60006020808385031215610986578182fd5b823567ffffffffffffffff81111561099c578283fd5b8301601f810185136109ac578283fd5b80356109ba61088082610ba3565b81815283810190838501858402850186018910156109d6578687fd5b8694505b838510156109685780358352600194909401939185019185016109da565b60006020808385031215610a0a578182fd5b825167ffffffffffffffff811115610a20578283fd5b8301601f81018513610a30578283fd5b8051610a3e61088082610ba3565b8181528381019083850185840285018601891015610a5a578687fd5b8694505b83851015610968578051835260019490940193918501918501610a5e565b600060208284031215610a8d578081fd5b5051919050565b6000815180845260208085019450808401835b83811015610acc5781516001600160a01b031687529582019590820190600101610aa7565b509495945050505050565b6001600160a01b0392831681529116602082015260400190565b600060408252610b046040830185610a94565b828103602084810191909152845180835285820192820190845b81811015610b3a57845183529383019391830191600101610b1e565b5090979650505050505050565b600084825260606020830152610b606060830185610a94565b8281036040840152610b728185610a94565b9695505050505050565b60405181810167ffffffffffffffff81118282101715610b9b57600080fd5b604052919050565b600067ffffffffffffffff821115610bb9578081fd5b5060209081020190565b6001600160a01b0381168114610bd857600080fd5b5056fea2646970667358221220245126e2d7bed3547f1cb96979140cd1df524f757ae156744c9c878ffa197c7d64736f6c634300060c0033",
                "opcodes": "PUSH1 0x0 PUSH1 0x80 DUP2 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x18 SWAP2 SWAP1 DUP2 PUSH2 0x2B JUMP JUMPDEST POP CALLVALUE DUP1 ISZERO PUSH2 0x25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8B JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x66 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x66 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x4B JUMP JUMPDEST POP PUSH2 0x72 SWAP3 SWAP2 POP PUSH2 0x76 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x72 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x77 JUMP JUMPDEST PUSH2 0xC11 DUP1 PUSH2 0x9A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3DD941A4 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xB9184DD1 EQ PUSH2 0x70 JUMPI DUP1 PUSH4 0xCF56B397 EQ PUSH2 0x85 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0x54 CALLDATASIZE PUSH1 0x4 PUSH2 0x829 JUMP JUMPDEST PUSH2 0x98 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x67 SWAP3 SWAP2 SWAP1 PUSH2 0xAF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x83 PUSH2 0x7E CALLDATASIZE PUSH1 0x4 PUSH2 0x974 JUMP JUMPDEST PUSH2 0x101 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x59 PUSH2 0x93 CALLDATASIZE PUSH1 0x4 PUSH2 0x829 JUMP JUMPDEST PUSH2 0x118 JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH2 0xF6 DUP5 DUP5 PUSH1 0x0 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xEC JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xD8 JUMPI JUMPDEST POP POP POP POP POP PUSH2 0x176 JUMP JUMPDEST SWAP1 SWAP6 SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH2 0x114 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x79B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH2 0xF6 DUP5 DUP5 PUSH1 0x0 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x16C JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x158 JUMPI JUMPDEST POP POP POP POP POP PUSH2 0x31D JUMP JUMPDEST DUP1 MLOAD PUSH1 0x60 SWAP1 DUP2 SWAP1 DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x194 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1BE JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP2 POP PUSH2 0x1CB DUP7 DUP7 PUSH2 0x4AA JUMP JUMPDEST SWAP3 POP DUP3 MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x1DD JUMPI POP PUSH2 0x315 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x312 JUMPI DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA8312B1D PUSH3 0x249F0 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x207 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 DUP11 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xB47 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x247 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP7 STATICCALL SWAP4 POP POP POP POP DUP1 ISZERO PUSH2 0x27D JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x27A SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x9F8 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2B7 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x2AB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2B0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP PUSH2 0x312 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP9 MLOAD SUB DUP2 MLOAD DUP2 LT PUSH2 0x2C7 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2DB JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2F3 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x309 JUMPI POP PUSH2 0x312 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x1E0 JUMP JUMPDEST POP POP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x60 SWAP1 DUP2 SWAP1 DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x33B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x365 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP2 POP PUSH2 0x372 DUP7 DUP7 PUSH2 0x4AA JUMP JUMPDEST SWAP3 POP DUP3 MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x384 JUMPI POP PUSH2 0x315 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x312 JUMPI DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9E269B68 PUSH3 0x249F0 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x3AE JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 DUP11 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xB47 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP7 STATICCALL SWAP4 POP POP POP POP DUP1 ISZERO PUSH2 0x424 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x421 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x9F8 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x452 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x2AB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2B0 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x45F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x473 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x48B JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x4A1 JUMPI POP PUSH2 0x312 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x387 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC45A0155 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4FB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x51F SWAP2 SWAP1 PUSH2 0x806 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP4 MLOAD SUB PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x53C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x566 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP2 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x792 JUMPI PUSH1 0x60 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5B1DC86F PUSH3 0x249F0 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x596 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP9 DUP7 PUSH1 0x1 ADD DUP2 MLOAD DUP2 LT PUSH2 0x5AD JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D2 SWAP3 SWAP2 SWAP1 PUSH2 0xAD7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP7 STATICCALL SWAP4 POP POP POP POP DUP1 ISZERO PUSH2 0x620 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x61D SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x8DB JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x68E JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x64E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x653 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP1 JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x682 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP5 POP POP POP POP POP PUSH2 0x795 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x69C JUMPI PUSH1 0x0 DUP1 PUSH2 0x658 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x786 JUMPI PUSH1 0x0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x6B7 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x70B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x72F SWAP2 SWAP1 PUSH2 0xA7C JUMP JUMPDEST SWAP1 POP DUP3 DUP2 GT ISZERO PUSH2 0x77D JUMPI DUP1 SWAP3 POP DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x748 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP9 DUP8 DUP2 MLOAD DUP2 LT PUSH2 0x75C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x6A0 JUMP JUMPDEST POP POP POP POP PUSH1 0x1 ADD PUSH2 0x56C JUMP JUMPDEST POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x7D6 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x7D6 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x7BB JUMP JUMPDEST POP PUSH2 0x7E2 SWAP3 SWAP2 POP PUSH2 0x7E6 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x7E2 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x7E7 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x795 DUP2 PUSH2 0xBC3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x817 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x822 DUP2 PUSH2 0xBC3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x83B JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x846 DUP2 PUSH2 0xBC3 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 DUP2 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x862 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP5 ADD PUSH1 0x1F DUP2 ADD DUP7 SGT PUSH2 0x872 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x885 PUSH2 0x880 DUP3 PUSH2 0xBA3 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST DUP2 DUP2 MSTORE DUP4 DUP2 ADD SWAP1 DUP4 DUP6 ADD DUP6 DUP5 MUL DUP6 ADD DUP7 ADD DUP11 LT ISZERO PUSH2 0x8A1 JUMPI DUP7 DUP8 REVERT JUMPDEST DUP7 SWAP5 POP JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0x8CB JUMPI PUSH2 0x8B7 DUP11 DUP3 PUSH2 0x7FB JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP5 SWAP1 SWAP5 ADD SWAP4 SWAP2 DUP6 ADD SWAP2 DUP6 ADD PUSH2 0x8A5 JUMP JUMPDEST POP DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8ED JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x903 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x913 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x921 PUSH2 0x880 DUP3 PUSH2 0xBA3 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP4 DUP2 ADD SWAP1 DUP4 DUP6 ADD DUP6 DUP5 MUL DUP6 ADD DUP7 ADD DUP10 LT ISZERO PUSH2 0x93D JUMPI DUP7 DUP8 REVERT JUMPDEST DUP7 SWAP5 POP JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0x968 JUMPI DUP1 MLOAD PUSH2 0x954 DUP2 PUSH2 0xBC3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP5 SWAP1 SWAP5 ADD SWAP4 SWAP2 DUP6 ADD SWAP2 DUP6 ADD PUSH2 0x941 JUMP JUMPDEST POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x986 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x99C JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x9AC JUMPI DUP3 DUP4 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x9BA PUSH2 0x880 DUP3 PUSH2 0xBA3 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP4 DUP2 ADD SWAP1 DUP4 DUP6 ADD DUP6 DUP5 MUL DUP6 ADD DUP7 ADD DUP10 LT ISZERO PUSH2 0x9D6 JUMPI DUP7 DUP8 REVERT JUMPDEST DUP7 SWAP5 POP JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0x968 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE PUSH1 0x1 SWAP5 SWAP1 SWAP5 ADD SWAP4 SWAP2 DUP6 ADD SWAP2 DUP6 ADD PUSH2 0x9DA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA0A JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA20 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0xA30 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP1 MLOAD PUSH2 0xA3E PUSH2 0x880 DUP3 PUSH2 0xBA3 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP4 DUP2 ADD SWAP1 DUP4 DUP6 ADD DUP6 DUP5 MUL DUP6 ADD DUP7 ADD DUP10 LT ISZERO PUSH2 0xA5A JUMPI DUP7 DUP8 REVERT JUMPDEST DUP7 SWAP5 POP JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0x968 JUMPI DUP1 MLOAD DUP4 MSTORE PUSH1 0x1 SWAP5 SWAP1 SWAP5 ADD SWAP4 SWAP2 DUP6 ADD SWAP2 DUP6 ADD PUSH2 0xA5E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA8D JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xACC JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xAA7 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 MSTORE PUSH2 0xB04 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xA94 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP5 MLOAD DUP1 DUP4 MSTORE DUP6 DUP3 ADD SWAP3 DUP3 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB3A JUMPI DUP5 MLOAD DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xB1E JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 DUP3 MSTORE PUSH1 0x60 PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0xB60 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0xA94 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0xB72 DUP2 DUP6 PUSH2 0xA94 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xB9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xBB9 JUMPI DUP1 DUP2 REVERT JUMPDEST POP PUSH1 0x20 SWAP1 DUP2 MUL ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xBD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x24 MLOAD 0x26 0xE2 0xD7 0xBE 0xD3 SLOAD PUSH32 0x1CB96979140CD1DF524F757AE156744C9C878FFA197C7D64736F6C634300060C STOP CALLER ",
                "sourceMap": "811:1:22:-:0;1416:5940:11;797:16:22;;;;1416:5940:11;797:16:22;;;762:51;;811:1;;762:51;:::i;:::-;;1416:5940:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1416:5940:11;;;-1:-1:-1;1416:5940:11;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
                "immutableReferences": {},
                "linkReferences": {},
                "object": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c80633dd941a414610046578063b9184dd114610070578063cf56b39714610085575b600080fd5b610059610054366004610829565b610098565b604051610067929190610af1565b60405180910390f35b61008361007e366004610974565b610101565b005b610059610093366004610829565b610118565b6060806100f6848460008054806020026020016040519081016040528092919081815260200182805480156100ec57602002820191906000526020600020905b8154815260200190600101908083116100d8575b5050505050610176565b909590945092505050565b805161011490600090602084019061079b565b5050565b6060806100f68484600080548060200260200160405190810160405280929190818152602001828054801561016c57602002820191906000526020600020905b815481526020019060010190808311610158575b505050505061031d565b805160609081908067ffffffffffffffff8111801561019457600080fd5b506040519080825280602002602001820160405280156101be578160200160208202803683370190505b5091506101cb86866104aa565b92508251600014156101dd5750610315565b60005b8181101561031257866001600160a01b031663a8312b1d620249f087848151811061020757fe5b6020026020010151878a6040518563ffffffff1660e01b815260040161022f93929190610b47565b60006040518083038187803b15801561024757600080fd5b5086fa9350505050801561027d57506040513d6000823e601f3d908101601f1916820160405261027a91908101906109f8565b60015b6102b7573d8080156102ab576040519150601f19603f3d011682016040523d82523d6000602084013e6102b0565b606091505b5050610312565b806001885103815181106102c757fe5b60200260200101518483815181106102db57fe5b6020026020010181815250508382815181106102f357fe5b6020026020010151600014156103095750610312565b506001016101e0565b50505b935093915050565b805160609081908067ffffffffffffffff8111801561033b57600080fd5b50604051908082528060200260200182016040528015610365578160200160208202803683370190505b50915061037286866104aa565b92508251600014156103845750610315565b60005b8181101561031257866001600160a01b0316639e269b68620249f08784815181106103ae57fe5b6020026020010151878a6040518563ffffffff1660e01b81526004016103d693929190610b47565b60006040518083038187803b1580156103ee57600080fd5b5086fa9350505050801561042457506040513d6000823e601f3d908101601f1916820160405261042191908101906109f8565b60015b610452573d8080156102ab576040519150601f19603f3d011682016040523d82523d6000602084013e6102b0565b8060008151811061045f57fe5b602002602001015184838151811061047357fe5b60200260200101818152505083828151811061048b57fe5b6020026020010151600014156104a15750610312565b50600101610387565b60606000836001600160a01b031663c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b1580156104e757600080fd5b505afa1580156104fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051f9190610806565b9050600183510367ffffffffffffffff8111801561053c57600080fd5b50604051908082528060200260200182016040528015610566578160200160208202803683370190505b50915060005b8251811015610792576060826001600160a01b0316635b1dc86f620249f087858151811061059657fe5b60200260200101518886600101815181106105ad57fe5b60200260200101516040518463ffffffff1660e01b81526004016105d2929190610ad7565b60006040518083038187803b1580156105ea57600080fd5b5086fa9350505050801561062057506040513d6000823e601f3d908101601f1916820160405261061d91908101906108db565b60015b61068e573d80801561064e576040519150601f19603f3d011682016040523d82523d6000602084013e610653565b606091505b506000805b50604051908082528060200260200182016040528015610682578160200160208202803683370190505b50945050505050610795565b805161069c57600080610658565b6000805b82518110156107865760008382815181106106b757fe5b60200260200101516001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156106f757600080fd5b505afa15801561070b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061072f9190610a7c565b90508281111561077d5780925083828151811061074857fe5b602002602001015188878151811061075c57fe5b60200260200101906001600160a01b031690816001600160a01b0316815250505b506001016106a0565b5050505060010161056c565b50505b92915050565b8280548282559060005260206000209081019282156107d6579160200282015b828111156107d65782518255916020019190600101906107bb565b506107e29291506107e6565b5090565b5b808211156107e257600081556001016107e7565b803561079581610bc3565b600060208284031215610817578081fd5b815161082281610bc3565b9392505050565b6000806040838503121561083b578081fd5b823561084681610bc3565b915060208381013567ffffffffffffffff811115610862578283fd5b8401601f81018613610872578283fd5b803561088561088082610ba3565b610b7c565b81815283810190838501858402850186018a10156108a1578687fd5b8694505b838510156108cb576108b78a826107fb565b8352600194909401939185019185016108a5565b5080955050505050509250929050565b600060208083850312156108ed578182fd5b825167ffffffffffffffff811115610903578283fd5b8301601f81018513610913578283fd5b805161092161088082610ba3565b818152838101908385018584028501860189101561093d578687fd5b8694505b8385101561096857805161095481610bc3565b835260019490940193918501918501610941565b50979650505050505050565b60006020808385031215610986578182fd5b823567ffffffffffffffff81111561099c578283fd5b8301601f810185136109ac578283fd5b80356109ba61088082610ba3565b81815283810190838501858402850186018910156109d6578687fd5b8694505b838510156109685780358352600194909401939185019185016109da565b60006020808385031215610a0a578182fd5b825167ffffffffffffffff811115610a20578283fd5b8301601f81018513610a30578283fd5b8051610a3e61088082610ba3565b8181528381019083850185840285018601891015610a5a578687fd5b8694505b83851015610968578051835260019490940193918501918501610a5e565b600060208284031215610a8d578081fd5b5051919050565b6000815180845260208085019450808401835b83811015610acc5781516001600160a01b031687529582019590820190600101610aa7565b509495945050505050565b6001600160a01b0392831681529116602082015260400190565b600060408252610b046040830185610a94565b828103602084810191909152845180835285820192820190845b81811015610b3a57845183529383019391830191600101610b1e565b5090979650505050505050565b600084825260606020830152610b606060830185610a94565b8281036040840152610b728185610a94565b9695505050505050565b60405181810167ffffffffffffffff81118282101715610b9b57600080fd5b604052919050565b600067ffffffffffffffff821115610bb9578081fd5b5060209081020190565b6001600160a01b0381168114610bd857600080fd5b5056fea2646970667358221220245126e2d7bed3547f1cb96979140cd1df524f757ae156744c9c878ffa197c7d64736f6c634300060c0033",
                "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3DD941A4 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xB9184DD1 EQ PUSH2 0x70 JUMPI DUP1 PUSH4 0xCF56B397 EQ PUSH2 0x85 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0x54 CALLDATASIZE PUSH1 0x4 PUSH2 0x829 JUMP JUMPDEST PUSH2 0x98 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x67 SWAP3 SWAP2 SWAP1 PUSH2 0xAF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x83 PUSH2 0x7E CALLDATASIZE PUSH1 0x4 PUSH2 0x974 JUMP JUMPDEST PUSH2 0x101 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x59 PUSH2 0x93 CALLDATASIZE PUSH1 0x4 PUSH2 0x829 JUMP JUMPDEST PUSH2 0x118 JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH2 0xF6 DUP5 DUP5 PUSH1 0x0 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xEC JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xD8 JUMPI JUMPDEST POP POP POP POP POP PUSH2 0x176 JUMP JUMPDEST SWAP1 SWAP6 SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH2 0x114 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x79B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH2 0xF6 DUP5 DUP5 PUSH1 0x0 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x16C JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x158 JUMPI JUMPDEST POP POP POP POP POP PUSH2 0x31D JUMP JUMPDEST DUP1 MLOAD PUSH1 0x60 SWAP1 DUP2 SWAP1 DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x194 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1BE JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP2 POP PUSH2 0x1CB DUP7 DUP7 PUSH2 0x4AA JUMP JUMPDEST SWAP3 POP DUP3 MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x1DD JUMPI POP PUSH2 0x315 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x312 JUMPI DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA8312B1D PUSH3 0x249F0 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x207 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 DUP11 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xB47 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x247 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP7 STATICCALL SWAP4 POP POP POP POP DUP1 ISZERO PUSH2 0x27D JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x27A SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x9F8 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2B7 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x2AB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2B0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP PUSH2 0x312 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP9 MLOAD SUB DUP2 MLOAD DUP2 LT PUSH2 0x2C7 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2DB JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2F3 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x309 JUMPI POP PUSH2 0x312 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x1E0 JUMP JUMPDEST POP POP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x60 SWAP1 DUP2 SWAP1 DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x33B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x365 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP2 POP PUSH2 0x372 DUP7 DUP7 PUSH2 0x4AA JUMP JUMPDEST SWAP3 POP DUP3 MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x384 JUMPI POP PUSH2 0x315 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x312 JUMPI DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9E269B68 PUSH3 0x249F0 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x3AE JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 DUP11 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xB47 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP7 STATICCALL SWAP4 POP POP POP POP DUP1 ISZERO PUSH2 0x424 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x421 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x9F8 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x452 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x2AB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2B0 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x45F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x473 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x48B JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x4A1 JUMPI POP PUSH2 0x312 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x387 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC45A0155 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4FB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x51F SWAP2 SWAP1 PUSH2 0x806 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP4 MLOAD SUB PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x53C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x566 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP2 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x792 JUMPI PUSH1 0x60 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5B1DC86F PUSH3 0x249F0 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x596 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP9 DUP7 PUSH1 0x1 ADD DUP2 MLOAD DUP2 LT PUSH2 0x5AD JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D2 SWAP3 SWAP2 SWAP1 PUSH2 0xAD7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP7 STATICCALL SWAP4 POP POP POP POP DUP1 ISZERO PUSH2 0x620 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x61D SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x8DB JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x68E JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x64E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x653 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP1 JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x682 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP5 POP POP POP POP POP PUSH2 0x795 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x69C JUMPI PUSH1 0x0 DUP1 PUSH2 0x658 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x786 JUMPI PUSH1 0x0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x6B7 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x70B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x72F SWAP2 SWAP1 PUSH2 0xA7C JUMP JUMPDEST SWAP1 POP DUP3 DUP2 GT ISZERO PUSH2 0x77D JUMPI DUP1 SWAP3 POP DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x748 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP9 DUP8 DUP2 MLOAD DUP2 LT PUSH2 0x75C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x6A0 JUMP JUMPDEST POP POP POP POP PUSH1 0x1 ADD PUSH2 0x56C JUMP JUMPDEST POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x7D6 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x7D6 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x7BB JUMP JUMPDEST POP PUSH2 0x7E2 SWAP3 SWAP2 POP PUSH2 0x7E6 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x7E2 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x7E7 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x795 DUP2 PUSH2 0xBC3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x817 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x822 DUP2 PUSH2 0xBC3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x83B JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x846 DUP2 PUSH2 0xBC3 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 DUP2 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x862 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP5 ADD PUSH1 0x1F DUP2 ADD DUP7 SGT PUSH2 0x872 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x885 PUSH2 0x880 DUP3 PUSH2 0xBA3 JUMP JUMPDEST PUSH2 0xB7C JUMP JUMPDEST DUP2 DUP2 MSTORE DUP4 DUP2 ADD SWAP1 DUP4 DUP6 ADD DUP6 DUP5 MUL DUP6 ADD DUP7 ADD DUP11 LT ISZERO PUSH2 0x8A1 JUMPI DUP7 DUP8 REVERT JUMPDEST DUP7 SWAP5 POP JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0x8CB JUMPI PUSH2 0x8B7 DUP11 DUP3 PUSH2 0x7FB JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP5 SWAP1 SWAP5 ADD SWAP4 SWAP2 DUP6 ADD SWAP2 DUP6 ADD PUSH2 0x8A5 JUMP JUMPDEST POP DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8ED JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x903 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x913 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x921 PUSH2 0x880 DUP3 PUSH2 0xBA3 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP4 DUP2 ADD SWAP1 DUP4 DUP6 ADD DUP6 DUP5 MUL DUP6 ADD DUP7 ADD DUP10 LT ISZERO PUSH2 0x93D JUMPI DUP7 DUP8 REVERT JUMPDEST DUP7 SWAP5 POP JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0x968 JUMPI DUP1 MLOAD PUSH2 0x954 DUP2 PUSH2 0xBC3 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP5 SWAP1 SWAP5 ADD SWAP4 SWAP2 DUP6 ADD SWAP2 DUP6 ADD PUSH2 0x941 JUMP JUMPDEST POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x986 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x99C JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x9AC JUMPI DUP3 DUP4 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x9BA PUSH2 0x880 DUP3 PUSH2 0xBA3 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP4 DUP2 ADD SWAP1 DUP4 DUP6 ADD DUP6 DUP5 MUL DUP6 ADD DUP7 ADD DUP10 LT ISZERO PUSH2 0x9D6 JUMPI DUP7 DUP8 REVERT JUMPDEST DUP7 SWAP5 POP JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0x968 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE PUSH1 0x1 SWAP5 SWAP1 SWAP5 ADD SWAP4 SWAP2 DUP6 ADD SWAP2 DUP6 ADD PUSH2 0x9DA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA0A JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA20 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0xA30 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP1 MLOAD PUSH2 0xA3E PUSH2 0x880 DUP3 PUSH2 0xBA3 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP4 DUP2 ADD SWAP1 DUP4 DUP6 ADD DUP6 DUP5 MUL DUP6 ADD DUP7 ADD DUP10 LT ISZERO PUSH2 0xA5A JUMPI DUP7 DUP8 REVERT JUMPDEST DUP7 SWAP5 POP JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0x968 JUMPI DUP1 MLOAD DUP4 MSTORE PUSH1 0x1 SWAP5 SWAP1 SWAP5 ADD SWAP4 SWAP2 DUP6 ADD SWAP2 DUP6 ADD PUSH2 0xA5E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA8D JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xACC JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xAA7 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 MSTORE PUSH2 0xB04 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xA94 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP5 MLOAD DUP1 DUP4 MSTORE DUP6 DUP3 ADD SWAP3 DUP3 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB3A JUMPI DUP5 MLOAD DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xB1E JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 DUP3 MSTORE PUSH1 0x60 PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0xB60 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0xA94 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0xB72 DUP2 DUP6 PUSH2 0xA94 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xB9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xBB9 JUMPI DUP1 DUP2 REVERT JUMPDEST POP PUSH1 0x20 SWAP1 DUP2 MUL ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xBD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x24 MLOAD 0x26 0xE2 0xD7 0xBE 0xD3 SLOAD PUSH32 0x1CB96979140CD1DF524F757AE156744C9C878FFA197C7D64736F6C634300060C STOP CALLER ",
                "sourceMap": "1416:5940:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1922:354;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;820:120:22;;;;;;:::i;:::-;;:::i;:::-;;4211:352:11;;;;;;:::i;:::-;;:::i;1922:354::-;2067:22;2091:34;2170:99;2208:6;2228:4;2246:13;2170:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:24;:99::i;:::-;2141:128;;;;-1:-1:-1;1922:354:11;-1:-1:-1;;;1922:354:11:o;820:120:22:-;905:28;;;;:13;;:28;;;;;:::i;:::-;;820:120;:::o;4211:352:11:-;4355:22;4379:34;4458:98;4495:6;4515:4;4533:13;4458:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:23;:98::i;2702:1158::-;2984:24;;2889:22;;;;2984:24;3038:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3038:25:11;;3018:45;;3081:31;3099:6;3107:4;3081:17;:31::i;:::-;3073:39;;3126:5;:12;3142:1;3126:17;3122:81;;;3159:33;;;3122:81;3217:9;3212:642;3236:10;3232:1;:14;3212:642;;;3303:6;-1:-1:-1;;;;;3287:37:11;;1555:5;3392:17;3410:1;3392:20;;;;;;;;;;;;;;3414:5;3421:4;3287:139;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3287:139:11;;;;;;;;;;;;:::i;:::-;;;3267:577;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3824:5;;;3267:577;3531:7;3553:1;3539:4;:11;:15;3531:24;;;;;;;;;;;;;;3508:17;3526:1;3508:20;;;;;;;;;;;;;:47;;;;;3631:17;3649:1;3631:20;;;;;;;;;;;;;;3655:1;3631:25;3627:77;;;3680:5;;;3627:77;3443:275;3248:3;;3212:642;;;;2702:1158;;;;;;;;:::o;4987:1141::-;5267:24;;5172:22;;;;5267:24;5321:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5321:25:11;;5301:45;;5364:31;5382:6;5390:4;5364:17;:31::i;:::-;5356:39;;5409:5;:12;5425:1;5409:17;5405:81;;;5442:33;;;5405:81;5500:9;5495:627;5519:10;5515:1;:14;5495:627;;;5586:6;-1:-1:-1;;;;;5570:36:11;;1555:5;5674:17;5692:1;5674:20;;;;;;;;;;;;;;5696:5;5703:4;5570:138;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5570:138:11;;;;;;;;;;;;:::i;:::-;;;5550:562;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5813:7;5821:1;5813:10;;;;;;;;;;;;;;5790:17;5808:1;5790:20;;;;;;;;;;;;;:33;;;;;5899:17;5917:1;5899:20;;;;;;;;;;;;;;5923:1;5899:25;5895:77;;;5948:5;;;5895:77;5725:261;5531:3;;5495:627;;6134:1220;6268:22;6306:24;6366:6;-1:-1:-1;;;;;6350:31:11;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6306:78;;6430:1;6416:4;:11;:15;6402:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6402:30:11;;6394:38;;6447:9;6442:906;6466:5;:12;6462:1;:16;6442:906;;;6533:25;6592:7;-1:-1:-1;;;;;6592:16:11;;1555:5;6676:4;6681:1;6676:7;;;;;;;;;;;;;;6685:4;6690:1;6694;6690:5;6685:11;;;;;;;;;;;;;;6592:105;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6592:105:11;;;;;;;;;;;;:::i;:::-;;;6572:766;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7321:1:11;;7307:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7307:16:11;;7300:23;;;;;;;;6572:766;6784:15;;6780:90;;6849:1;;6835:16;;6780:90;6888:17;6932:9;6927:319;6951:8;:15;6947:1;:19;6927:319;;;6995:19;7031:8;7040:1;7031:11;;;;;;;;;;;;;;-1:-1:-1;;;;;7017:38:11;;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6995:62;;7097:9;7083:11;:23;7079:149;;;7146:11;7134:23;;7194:8;7203:1;7194:11;;;;;;;;;;;;;;7183:5;7189:1;7183:8;;;;;;;;;;;;;:22;-1:-1:-1;;;;;7183:22:11;;;-1:-1:-1;;;;;7183:22:11;;;;;7079:149;-1:-1:-1;6968:3:11;;6927:319;;;;6714:546;;-1:-1:-1;6480:3:11;;6442:906;;;;6134:1220;;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;5:130;72:20;;97:33;72:20;97:33;:::i;3523:263::-;;3638:2;3626:9;3617:7;3613:23;3609:32;3606:2;;;-1:-1;;3644:12;3606:2;226:6;220:13;238:33;265:5;238:33;:::i;:::-;3696:74;3600:186;-1:-1;;;3600:186::o;3793:502::-;;;3939:2;3927:9;3918:7;3914:23;3910:32;3907:2;;;-1:-1;;3945:12;3907:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;3997:63;-1:-1;4125:2;4110:18;;;4097:32;4149:18;4138:30;;4135:2;;;-1:-1;;4171:12;4135:2;4247:22;;411:4;399:17;;395:27;-1:-1;385:2;;-1:-1;;426:12;385:2;473:6;460:20;495:80;510:64;567:6;510:64;:::i;:::-;495:80;:::i;:::-;603:21;;;660:14;;;;635:17;;;749;;;740:27;;;;737:36;-1:-1;734:2;;;-1:-1;;776:12;734:2;-1:-1;802:10;;796:206;821:6;818:1;815:13;796:206;;;901:37;934:3;922:10;901:37;:::i;:::-;889:50;;843:1;836:9;;;;;953:14;;;;981;;796:206;;;800:14;4191:88;;;;;;;;3901:394;;;;;:::o;4302:392::-;;4442:2;;4430:9;4421:7;4417:23;4413:32;4410:2;;;-1:-1;;4448:12;4410:2;4499:17;4493:24;4537:18;4529:6;4526:30;4523:2;;;-1:-1;;4559:12;4523:2;4646:22;;1155:4;1143:17;;1139:27;-1:-1;1129:2;;-1:-1;;1170:12;1129:2;1210:6;1204:13;1232:80;1247:64;1304:6;1247:64;:::i;1232:80::-;1340:21;;;1397:14;;;;1372:17;;;1486;;;1477:27;;;;1474:36;-1:-1;1471:2;;;-1:-1;;1513:12;1471:2;-1:-1;1539:10;;1533:217;1558:6;1555:1;1552:13;1533:217;;;226:6;220:13;238:33;265:5;238:33;:::i;:::-;1626:61;;1580:1;1573:9;;;;;1701:14;;;;1729;;1533:217;;;-1:-1;4579:99;4404:290;-1:-1;;;;;;;4404:290::o;4701:377::-;;4830:2;;4818:9;4809:7;4805:23;4801:32;4798:2;;;-1:-1;;4836:12;4798:2;4894:17;4881:31;4932:18;4924:6;4921:30;4918:2;;;-1:-1;;4954:12;4918:2;5030:22;;1892:4;1880:17;;1876:27;-1:-1;1866:2;;-1:-1;;1907:12;1866:2;1954:6;1941:20;1976:80;1991:64;2048:6;1991:64;:::i;1976:80::-;2084:21;;;2141:14;;;;2116:17;;;2230;;;2221:27;;;;2218:36;-1:-1;2215:2;;;-1:-1;;2257:12;2215:2;-1:-1;2283:10;;2277:206;2302:6;2299:1;2296:13;2277:206;;;3312:20;;2370:50;;2324:1;2317:9;;;;;2434:14;;;;2462;;2277:206;;5085:392;;5225:2;;5213:9;5204:7;5200:23;5196:32;5193:2;;;-1:-1;;5231:12;5193:2;5282:17;5276:24;5320:18;5312:6;5309:30;5306:2;;;-1:-1;;5342:12;5306:2;5429:22;;2636:4;2624:17;;2620:27;-1:-1;2610:2;;-1:-1;;2651:12;2610:2;2691:6;2685:13;2713:80;2728:64;2785:6;2728:64;:::i;2713:80::-;2821:21;;;2878:14;;;;2853:17;;;2967;;;2958:27;;;;2955:36;-1:-1;2952:2;;;-1:-1;;2994:12;2952:2;-1:-1;3020:10;;3014:217;3039:6;3036:1;3033:13;3014:217;;;3460:13;;3107:61;;3061:1;3054:9;;;;;3182:14;;;;3210;;3014:217;;5484:263;;5599:2;5587:9;5578:7;5574:23;5570:32;5567:2;;;-1:-1;;5605:12;5567:2;-1:-1;3460:13;;5561:186;-1:-1;5561:186::o;6379:690::-;;6572:5;11063:12;11609:6;11604:3;11597:19;11646:4;;11641:3;11637:14;6584:93;;11646:4;6748:5;10759:14;-1:-1;6787:260;6812:6;6809:1;6806:13;6787:260;;;6873:13;;-1:-1;;;;;12012:54;6179:37;;5908:14;;;;11337;;;;4149:18;6827:9;6787:260;;;-1:-1;7053:10;;6503:566;-1:-1;;;;;6503:566::o;8036:333::-;-1:-1;;;;;12012:54;;;6179:37;;12012:54;;8355:2;8340:18;;6179:37;8191:2;8176:18;;8162:207::o;8376:629::-;;8631:2;8652:17;8645:47;8706:108;8631:2;8620:9;8616:18;8800:6;8706:108;:::i;:::-;8852:20;;;8847:2;8832:18;;;8825:48;;;;11063:12;;11597:19;;;10759:14;;;;11637;;;-1:-1;7516:260;7541:6;7538:1;7535:13;7516:260;;;7602:13;;7867:37;;11337:14;;;;6090;;;;7563:1;7556:9;7516:260;;;-1:-1;8879:116;;8602:403;-1:-1;;;;;;;8602:403::o;9012:740::-;;7897:5;7874:3;7867:37;9295:2;9413;9402:9;9398:18;9391:48;9453:108;9295:2;9284:9;9280:18;9547:6;9453:108;:::i;:::-;9609:9;9603:4;9599:20;9594:2;9583:9;9579:18;9572:48;9634:108;9737:4;9728:6;9634:108;:::i;:::-;9626:116;9266:486;-1:-1;;;;;;9266:486::o;9759:256::-;9821:2;9815:9;9847:17;;;9922:18;9907:34;;9943:22;;;9904:62;9901:2;;;9979:1;;9969:12;9901:2;9821;9988:22;9799:216;;-1:-1;9799:216::o;10022:304::-;;10181:18;10173:6;10170:30;10167:2;;;-1:-1;;10203:12;10167:2;-1:-1;10248:4;10236:17;;;10301:15;;10104:222::o;12157:117::-;-1:-1;;;;;12012:54;;12216:35;;12206:2;;12265:1;;12255:12;12206:2;12200:74;:::o"
            }
        }
    },
    "sourceTreeHashHex": "0xfead5b64c8203fa17c132916d11cecdc5ba5e4d9b7dfe8979436737578d456da",
    "sources": {
        "./KyberDmmSampler.sol": {
            "id": 11,
            "content": "// SPDX-License-Identifier: Apache-2.0\n/*\n\n  Copyright 2020 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.6;\npragma experimental ABIEncoderV2;\n\nimport \"./SamplerBase.sol\";\n\ninterface IKyberDmmPool {\n\n    function totalSupply()\n        external\n        view\n        returns (uint256);\n}\n\ninterface IKyberDmmFactory {\n\n    function getPools(address token0, address token1)\n        external\n        view\n        returns (address[] memory _tokenPools);\n}\n\ninterface IKyberDmmRouter {\n\n    function factory() external view returns (address);\n\n    function getAmountsOut(uint256 amountIn, address[] calldata pools, address[] calldata path)\n        external\n        view\n        returns (uint256[] memory amounts);\n\n    function getAmountsIn(uint256 amountOut, address[] calldata pools, address[] calldata path)\n        external\n        view\n        returns (uint256[] memory amounts);\n}\n\n\n\ncontract KyberDmmSampler is\n    SamplerBase\n{\n    /// @dev Gas limit for KyberDmm calls.\n    uint256 constant private KYBER_DMM_CALL_GAS = 150e3; // 150k\n\n    /// @dev Sample sell quotes from KyberDmm.\n    /// @param router Router to look up tokens and amounts\n    /// @param path Token route. Should be takerToken -> makerToken\n    /// @return pools The pool addresses involved in the multi path trade\n    /// @return makerTokenAmounts Maker amounts bought at each taker token\n    ///         amount.\n    function sampleSellsFromKyberDmmGlobal(\n        address router,\n        address[] memory path\n    )\n        public\n        view\n        returns (address[] memory pools, uint256[] memory makerTokenAmounts)\n    {\n        (pools, makerTokenAmounts) = _sampleSellsFromKyberDmm(\n            router,\n            path,\n            SAMPLE_VALUES\n        );\n    }\n    /// @dev Sample sell quotes from KyberDmm.\n    /// @param router Router to look up tokens and amounts\n    /// @param path Token route. Should be takerToken -> makerToken\n    /// @param takerTokenAmounts Taker token sell amount for each sample.\n    /// @return pools The pool addresses involved in the multi path trade\n    /// @return makerTokenAmounts Maker amounts bought at each taker token\n    ///         amount.\n    function _sampleSellsFromKyberDmm(\n        address router,\n        address[] memory path,\n        uint256[] memory takerTokenAmounts\n    )\n        internal \n        view\n        returns (address[] memory pools, uint256[] memory makerTokenAmounts)\n    {\n        uint256 numSamples = takerTokenAmounts.length;\n        makerTokenAmounts = new uint256[](numSamples);\n        pools = _getKyberDmmPools(router, path);\n        if (pools.length == 0) {\n            return (pools, makerTokenAmounts);\n        }\n        for (uint256 i = 0; i < numSamples; i++) {\n            try\n                IKyberDmmRouter(router).getAmountsOut\n                    {gas: KYBER_DMM_CALL_GAS}\n                    (takerTokenAmounts[i], pools, path)\n                returns (uint256[] memory amounts)\n            {\n                makerTokenAmounts[i] = amounts[path.length - 1];\n                // Break early if there are 0 amounts\n                if (makerTokenAmounts[i] == 0) {\n                    break;\n                }\n            } catch (bytes memory) {\n                // Swallow failures, leaving all results as zero.\n                break;\n            }\n        }\n    }\n\n    /// @dev Sample buy quotes from KyberDmm.\n    /// @param router Router to look up tokens and amounts\n    /// @param path Token route. Should be takerToken -> makerToken.\n    /// @return pools The pool addresses involved in the multi path trade\n    /// @return takerTokenAmounts Taker amounts sold at each maker token\n    ///         amount.\n    function sampleBuysFromKyberDmmGlobal(\n        address router,\n        address[] memory path\n    )\n        public\n        view\n        returns (address[] memory pools, uint256[] memory takerTokenAmounts)\n    {\n        (pools, takerTokenAmounts) = _sampleBuysFromKyberDmm(\n            router,\n            path,\n            SAMPLE_VALUES\n        );\n    }\n\n    /// @dev Sample buy quotes from KyberDmm.\n    /// @param router Router to look up tokens and amounts\n    /// @param path Token route. Should be takerToken -> makerToken.\n    /// @param makerTokenAmounts Maker token buy amount for each sample.\n    /// @return pools The pool addresses involved in the multi path trade\n    /// @return takerTokenAmounts Taker amounts sold at each maker token\n    ///         amount.\n    function _sampleBuysFromKyberDmm(\n        address router,\n        address[] memory path,\n        uint256[] memory makerTokenAmounts\n    )\n        internal\n        view\n        returns (address[] memory pools, uint256[] memory takerTokenAmounts)\n    {\n        uint256 numSamples = makerTokenAmounts.length;\n        takerTokenAmounts = new uint256[](numSamples);\n        pools = _getKyberDmmPools(router, path);\n        if (pools.length == 0) {\n            return (pools, takerTokenAmounts);\n        }\n        for (uint256 i = 0; i < numSamples; i++) {\n            try\n                IKyberDmmRouter(router).getAmountsIn\n                    {gas: KYBER_DMM_CALL_GAS}\n                    (makerTokenAmounts[i], pools, path)\n                returns (uint256[] memory amounts)\n            {\n                takerTokenAmounts[i] = amounts[0];\n                // Break early if there are 0 amounts\n                if (takerTokenAmounts[i] == 0) {\n                    break;\n                }\n            } catch (bytes memory) {\n                // Swallow failures, leaving all results as zero.\n                break;\n            }\n        }\n    }\n\n    function _getKyberDmmPools(\n        address router,\n        address[] memory path\n    )\n        private\n        view\n        returns (address[] memory pools)\n    {\n        IKyberDmmFactory factory = IKyberDmmFactory(IKyberDmmRouter(router).factory());\n        pools = new address[](path.length - 1);\n        for (uint256 i = 0; i < pools.length; i++) {\n            // find the best pool\n            address[] memory allPools;\n            try\n                factory.getPools\n                    {gas: KYBER_DMM_CALL_GAS}\n                    (path[i], path[i + 1])\n                returns (address[] memory allPools)\n            {\n                if (allPools.length == 0) {\n                    return new address[](0);\n                }\n\n                uint256 maxSupply = 0;\n                for (uint256 j = 0; j < allPools.length; j++) {\n                    uint256 totalSupply = IKyberDmmPool(allPools[j]).totalSupply();\n                    if (totalSupply > maxSupply) {\n                        maxSupply = totalSupply;\n                        pools[i] = allPools[j];\n                    }\n                }\n            } catch (bytes memory) {\n                return new address[](0);\n            }\n        }\n    }\n}\n"
        },
        "./SamplerBase.sol": {
            "id": 22,
            "content": "// SPDX-License-Identifier: Apache-2.0\n/*\n\n  Copyright 2021 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.6;\npragma experimental ABIEncoderV2;\n\ncontract SamplerBase\n{\n    /// @dev Stored Sample values for each Sampler to pull\n    uint256[] internal SAMPLE_VALUES = new uint256[](0);\n\n    function setSampleValues(uint256[] memory sampleValues)\n        public\n    {\n        SAMPLE_VALUES = sampleValues;\n    }\n\n    modifier resetsSampleValues\n    {\n        uint256[] memory sampleValues = SAMPLE_VALUES;\n        _;\n        SAMPLE_VALUES = sampleValues;\n    }\n}\n"
        }
    },
    "sourceCodes": {
        "./KyberDmmSampler.sol": "// SPDX-License-Identifier: Apache-2.0\n/*\n\n  Copyright 2020 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.6;\npragma experimental ABIEncoderV2;\n\nimport \"./SamplerBase.sol\";\n\ninterface IKyberDmmPool {\n\n    function totalSupply()\n        external\n        view\n        returns (uint256);\n}\n\ninterface IKyberDmmFactory {\n\n    function getPools(address token0, address token1)\n        external\n        view\n        returns (address[] memory _tokenPools);\n}\n\ninterface IKyberDmmRouter {\n\n    function factory() external view returns (address);\n\n    function getAmountsOut(uint256 amountIn, address[] calldata pools, address[] calldata path)\n        external\n        view\n        returns (uint256[] memory amounts);\n\n    function getAmountsIn(uint256 amountOut, address[] calldata pools, address[] calldata path)\n        external\n        view\n        returns (uint256[] memory amounts);\n}\n\n\n\ncontract KyberDmmSampler is\n    SamplerBase\n{\n    /// @dev Gas limit for KyberDmm calls.\n    uint256 constant private KYBER_DMM_CALL_GAS = 150e3; // 150k\n\n    /// @dev Sample sell quotes from KyberDmm.\n    /// @param router Router to look up tokens and amounts\n    /// @param path Token route. Should be takerToken -> makerToken\n    /// @return pools The pool addresses involved in the multi path trade\n    /// @return makerTokenAmounts Maker amounts bought at each taker token\n    ///         amount.\n    function sampleSellsFromKyberDmmGlobal(\n        address router,\n        address[] memory path\n    )\n        public\n        view\n        returns (address[] memory pools, uint256[] memory makerTokenAmounts)\n    {\n        (pools, makerTokenAmounts) = _sampleSellsFromKyberDmm(\n            router,\n            path,\n            SAMPLE_VALUES\n        );\n    }\n    /// @dev Sample sell quotes from KyberDmm.\n    /// @param router Router to look up tokens and amounts\n    /// @param path Token route. Should be takerToken -> makerToken\n    /// @param takerTokenAmounts Taker token sell amount for each sample.\n    /// @return pools The pool addresses involved in the multi path trade\n    /// @return makerTokenAmounts Maker amounts bought at each taker token\n    ///         amount.\n    function _sampleSellsFromKyberDmm(\n        address router,\n        address[] memory path,\n        uint256[] memory takerTokenAmounts\n    )\n        internal \n        view\n        returns (address[] memory pools, uint256[] memory makerTokenAmounts)\n    {\n        uint256 numSamples = takerTokenAmounts.length;\n        makerTokenAmounts = new uint256[](numSamples);\n        pools = _getKyberDmmPools(router, path);\n        if (pools.length == 0) {\n            return (pools, makerTokenAmounts);\n        }\n        for (uint256 i = 0; i < numSamples; i++) {\n            try\n                IKyberDmmRouter(router).getAmountsOut\n                    {gas: KYBER_DMM_CALL_GAS}\n                    (takerTokenAmounts[i], pools, path)\n                returns (uint256[] memory amounts)\n            {\n                makerTokenAmounts[i] = amounts[path.length - 1];\n                // Break early if there are 0 amounts\n                if (makerTokenAmounts[i] == 0) {\n                    break;\n                }\n            } catch (bytes memory) {\n                // Swallow failures, leaving all results as zero.\n                break;\n            }\n        }\n    }\n\n    /// @dev Sample buy quotes from KyberDmm.\n    /// @param router Router to look up tokens and amounts\n    /// @param path Token route. Should be takerToken -> makerToken.\n    /// @return pools The pool addresses involved in the multi path trade\n    /// @return takerTokenAmounts Taker amounts sold at each maker token\n    ///         amount.\n    function sampleBuysFromKyberDmmGlobal(\n        address router,\n        address[] memory path\n    )\n        public\n        view\n        returns (address[] memory pools, uint256[] memory takerTokenAmounts)\n    {\n        (pools, takerTokenAmounts) = _sampleBuysFromKyberDmm(\n            router,\n            path,\n            SAMPLE_VALUES\n        );\n    }\n\n    /// @dev Sample buy quotes from KyberDmm.\n    /// @param router Router to look up tokens and amounts\n    /// @param path Token route. Should be takerToken -> makerToken.\n    /// @param makerTokenAmounts Maker token buy amount for each sample.\n    /// @return pools The pool addresses involved in the multi path trade\n    /// @return takerTokenAmounts Taker amounts sold at each maker token\n    ///         amount.\n    function _sampleBuysFromKyberDmm(\n        address router,\n        address[] memory path,\n        uint256[] memory makerTokenAmounts\n    )\n        internal\n        view\n        returns (address[] memory pools, uint256[] memory takerTokenAmounts)\n    {\n        uint256 numSamples = makerTokenAmounts.length;\n        takerTokenAmounts = new uint256[](numSamples);\n        pools = _getKyberDmmPools(router, path);\n        if (pools.length == 0) {\n            return (pools, takerTokenAmounts);\n        }\n        for (uint256 i = 0; i < numSamples; i++) {\n            try\n                IKyberDmmRouter(router).getAmountsIn\n                    {gas: KYBER_DMM_CALL_GAS}\n                    (makerTokenAmounts[i], pools, path)\n                returns (uint256[] memory amounts)\n            {\n                takerTokenAmounts[i] = amounts[0];\n                // Break early if there are 0 amounts\n                if (takerTokenAmounts[i] == 0) {\n                    break;\n                }\n            } catch (bytes memory) {\n                // Swallow failures, leaving all results as zero.\n                break;\n            }\n        }\n    }\n\n    function _getKyberDmmPools(\n        address router,\n        address[] memory path\n    )\n        private\n        view\n        returns (address[] memory pools)\n    {\n        IKyberDmmFactory factory = IKyberDmmFactory(IKyberDmmRouter(router).factory());\n        pools = new address[](path.length - 1);\n        for (uint256 i = 0; i < pools.length; i++) {\n            // find the best pool\n            address[] memory allPools;\n            try\n                factory.getPools\n                    {gas: KYBER_DMM_CALL_GAS}\n                    (path[i], path[i + 1])\n                returns (address[] memory allPools)\n            {\n                if (allPools.length == 0) {\n                    return new address[](0);\n                }\n\n                uint256 maxSupply = 0;\n                for (uint256 j = 0; j < allPools.length; j++) {\n                    uint256 totalSupply = IKyberDmmPool(allPools[j]).totalSupply();\n                    if (totalSupply > maxSupply) {\n                        maxSupply = totalSupply;\n                        pools[i] = allPools[j];\n                    }\n                }\n            } catch (bytes memory) {\n                return new address[](0);\n            }\n        }\n    }\n}\n",
        "./SamplerBase.sol": "// SPDX-License-Identifier: Apache-2.0\n/*\n\n  Copyright 2021 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.6;\npragma experimental ABIEncoderV2;\n\ncontract SamplerBase\n{\n    /// @dev Stored Sample values for each Sampler to pull\n    uint256[] internal SAMPLE_VALUES = new uint256[](0);\n\n    function setSampleValues(uint256[] memory sampleValues)\n        public\n    {\n        SAMPLE_VALUES = sampleValues;\n    }\n\n    modifier resetsSampleValues\n    {\n        uint256[] memory sampleValues = SAMPLE_VALUES;\n        _;\n        SAMPLE_VALUES = sampleValues;\n    }\n}\n"
    },
    "compiler": {
        "name": "solc",
        "version": "0.6.12+commit.27d51765",
        "settings": {
            "remappings": [],
            "optimizer": {
                "enabled": true,
                "runs": 200,
                "details": {
                    "yul": true,
                    "deduplicate": true
                }
            },
            "outputSelection": {
                "*": {
                    "*": [
                        "abi",
                        "devdoc",
                        "evm.bytecode.object",
                        "evm.bytecode.sourceMap",
                        "evm.deployedBytecode.object",
                        "evm.deployedBytecode.sourceMap"
                    ]
                }
            },
            "evmVersion": "istanbul"
        }
    },
    "chains": {}
}

{
    "schemaVersion": "2.0.0",
    "contractName": "KyberDmmSampler",
    "compilerOutput": {
        "abi": [
            {
                "inputs": [
                    {
                        "internalType": "address",
                        "name": "router",
                        "type": "address"
                    },
                    {
                        "internalType": "address[]",
                        "name": "path",
                        "type": "address[]"
                    },
                    {
                        "internalType": "uint256[]",
                        "name": "makerTokenAmounts",
                        "type": "uint256[]"
                    }
                ],
                "name": "sampleBuysFromKyberDmm",
                "outputs": [
                    {
                        "internalType": "address[]",
                        "name": "pools",
                        "type": "address[]"
                    },
                    {
                        "internalType": "uint256[]",
                        "name": "takerTokenAmounts",
                        "type": "uint256[]"
                    }
                ],
                "stateMutability": "view",
                "type": "function"
            },
            {
                "inputs": [
                    {
                        "internalType": "address",
                        "name": "router",
                        "type": "address"
                    },
                    {
                        "internalType": "address[]",
                        "name": "path",
                        "type": "address[]"
                    },
                    {
                        "internalType": "uint256[]",
                        "name": "takerTokenAmounts",
                        "type": "uint256[]"
                    }
                ],
                "name": "sampleSellsFromKyberDmm",
                "outputs": [
                    {
                        "internalType": "address[]",
                        "name": "pools",
                        "type": "address[]"
                    },
                    {
                        "internalType": "uint256[]",
                        "name": "makerTokenAmounts",
                        "type": "uint256[]"
                    }
                ],
                "stateMutability": "view",
                "type": "function"
            }
        ],
        "devdoc": {
            "kind": "dev",
            "methods": {
                "sampleBuysFromKyberDmm(address,address[],uint256[])": {
                    "details": "Sample buy quotes from KyberDmm.",
                    "params": {
                        "makerTokenAmounts": "Maker token buy amount for each sample.",
                        "path": "Token route. Should be takerToken -> makerToken.",
                        "router": "Router to look up tokens and amounts"
                    },
                    "returns": {
                        "pools": "The pool addresses involved in the multi path trade",
                        "takerTokenAmounts": "Taker amounts sold at each maker token         amount."
                    }
                },
                "sampleSellsFromKyberDmm(address,address[],uint256[])": {
                    "details": "Sample sell quotes from KyberDmm.",
                    "params": {
                        "path": "Token route. Should be takerToken -> makerToken",
                        "router": "Router to look up tokens and amounts",
                        "takerTokenAmounts": "Taker token sell amount for each sample."
                    },
                    "returns": {
                        "makerTokenAmounts": "Maker amounts bought at each taker token         amount.",
                        "pools": "The pool addresses involved in the multi path trade"
                    }
                }
            },
            "stateVariables": {
                "KYBER_DMM_CALL_GAS": {
                    "details": "Gas limit for KyberDmm calls."
                }
            },
            "version": 1
        },
        "evm": {
            "bytecode": {
                "linkReferences": {},
                "object": "0x608060405234801561001057600080fd5b50610beb806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80630496d5dc1461003b578063494569db14610065575b600080fd5b61004e6100493660046108be565b610078565b60405161005c929190610ac4565b60405180910390f35b61004e6100733660046108be565b61021f565b805160609081908067ffffffffffffffff8111801561009657600080fd5b506040519080825280602002602001820160405280156100c0578160200160208202803683370190505b5091506100cd86866103ac565b92508251600014156100df5750610217565b60005b8181101561021457866001600160a01b031663a8312b1d620249f087848151811061010957fe5b6020026020010151878a6040518563ffffffff1660e01b815260040161013193929190610ae9565b60006040518083038187803b15801561014957600080fd5b5086fa9350505050801561017f57506040513d6000823e601f3d908101601f1916820160405261017c9190810190610970565b60015b6101b9573d8080156101ad576040519150601f19603f3d011682016040523d82523d6000602084013e6101b2565b606091505b5050610214565b806001885103815181106101c957fe5b60200260200101518483815181106101dd57fe5b6020026020010181815250508382815181106101f557fe5b60200260200101516000141561020b5750610214565b506001016100e2565b50505b935093915050565b805160609081908067ffffffffffffffff8111801561023d57600080fd5b50604051908082528060200260200182016040528015610267578160200160208202803683370190505b50915061027486866103ac565b92508251600014156102865750610217565b60005b8181101561021457866001600160a01b0316639e269b68620249f08784815181106102b057fe5b6020026020010151878a6040518563ffffffff1660e01b81526004016102d893929190610ae9565b60006040518083038187803b1580156102f057600080fd5b5086fa9350505050801561032657506040513d6000823e601f3d908101601f191682016040526103239190810190610970565b60015b610354573d8080156101ad576040519150601f19603f3d011682016040523d82523d6000602084013e6101b2565b8060008151811061036157fe5b602002602001015184838151811061037557fe5b60200260200101818152505083828151811061038d57fe5b6020026020010151600014156103a35750610214565b50600101610289565b60606000836001600160a01b031663c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b1580156103e957600080fd5b505afa1580156103fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104219190610898565b9050600183510367ffffffffffffffff8111801561043e57600080fd5b50604051908082528060200260200182016040528015610468578160200160208202803683370190505b50915060005b8251811015610694576060826001600160a01b0316635b1dc86f620249f087858151811061049857fe5b60200260200101518886600101815181106104af57fe5b60200260200101516040518463ffffffff1660e01b81526004016104d4929190610aa2565b60006040518083038187803b1580156104ec57600080fd5b5086fa9350505050801561052257506040513d6000823e601f3d908101601f1916820160405261051f919081019061093b565b60015b610590573d808015610550576040519150601f19603f3d011682016040523d82523d6000602084013e610555565b606091505b506000805b50604051908082528060200260200182016040528015610584578160200160208202803683370190505b50945050505050610697565b805161059e5760008061055a565b6000805b82518110156106885760008382815181106105b957fe5b60200260200101516001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156105f957600080fd5b505afa15801561060d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063191906109a5565b90508281111561067f5780925083828151811061064a57fe5b602002602001015188878151811061065e57fe5b60200260200101906001600160a01b031690816001600160a01b0316815250505b506001016105a2565b5050505060010161046e565b50505b92915050565b803561069781610b95565b805161069781610b95565b600082601f8301126106c457600080fd5b81356106d76106d282610b4d565b610b26565b915081818352602084019350602081019050838560208402820111156106fc57600080fd5b60005b838110156107285781610712888261069d565b84525060209283019291909101906001016106ff565b5050505092915050565b600082601f83011261074357600080fd5b81516107516106d282610b4d565b9150818183526020840193506020810190508385602084028201111561077657600080fd5b60005b83811015610728578161078c88826106a8565b8452506020928301929190910190600101610779565b600082601f8301126107b357600080fd5b81356107c16106d282610b4d565b915081818352602084019350602081019050838560208402820111156107e657600080fd5b60005b8381101561072857816107fc8882610882565b84525060209283019291909101906001016107e9565b600082601f83011261082357600080fd5b81516108316106d282610b4d565b9150818183526020840193506020810190508385602084028201111561085657600080fd5b60005b83811015610728578161086c888261088d565b8452506020928301929190910190600101610859565b803561069781610bac565b805161069781610bac565b6000602082840312156108aa57600080fd5b60006108b684846106a8565b949350505050565b6000806000606084860312156108d357600080fd5b60006108df868661069d565b935050602084013567ffffffffffffffff8111156108fc57600080fd5b610908868287016106b3565b925050604084013567ffffffffffffffff81111561092557600080fd5b610931868287016107a2565b9150509250925092565b60006020828403121561094d57600080fd5b815167ffffffffffffffff81111561096457600080fd5b6108b684828501610732565b60006020828403121561098257600080fd5b815167ffffffffffffffff81111561099957600080fd5b6108b684828501610812565b6000602082840312156109b757600080fd5b60006108b6848461088d565b60006109cf83836109e3565b505060200190565b60006109cf8383610a99565b6109ec81610b81565b82525050565b60006109fd82610b74565b610a078185610b78565b9350610a1283610b6e565b8060005b83811015610a40578151610a2a88826109c3565b9750610a3583610b6e565b925050600101610a16565b509495945050505050565b6000610a5682610b74565b610a608185610b78565b9350610a6b83610b6e565b8060005b83811015610a40578151610a8388826109d7565b9750610a8e83610b6e565b925050600101610a6f565b6109ec81610b92565b60408101610ab082856109e3565b610abd60208301846109e3565b9392505050565b60408082528101610ad581856109f2565b905081810360208301526108b68184610a4b565b60608101610af78286610a99565b8181036020830152610b0981856109f2565b90508181036040830152610b1d81846109f2565b95945050505050565b60405181810167ffffffffffffffff81118282101715610b4557600080fd5b604052919050565b600067ffffffffffffffff821115610b6457600080fd5b5060209081020190565b60200190565b5190565b90815260200190565b60006001600160a01b038216610697565b90565b610b9e81610b81565b8114610ba957600080fd5b50565b610b9e81610b9256fea2646970667358221220748835b105f5903faf4c3c9d7f8067d36b9334ded96982e38a3057ca2c4ccc6c64736f6c634300060c0033",
                "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBEB DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x496D5DC EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x494569DB EQ PUSH2 0x65 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0x8BE JUMP JUMPDEST PUSH2 0x78 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C SWAP3 SWAP2 SWAP1 PUSH2 0xAC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH2 0x73 CALLDATASIZE PUSH1 0x4 PUSH2 0x8BE JUMP JUMPDEST PUSH2 0x21F JUMP JUMPDEST DUP1 MLOAD PUSH1 0x60 SWAP1 DUP2 SWAP1 DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xC0 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP2 POP PUSH2 0xCD DUP7 DUP7 PUSH2 0x3AC JUMP JUMPDEST SWAP3 POP DUP3 MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0xDF JUMPI POP PUSH2 0x217 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x214 JUMPI DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA8312B1D PUSH3 0x249F0 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x109 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 DUP11 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x131 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xAE9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x149 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP7 STATICCALL SWAP4 POP POP POP POP DUP1 ISZERO PUSH2 0x17F JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x17C SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x970 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1B9 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x1AD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1B2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP PUSH2 0x214 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP9 MLOAD SUB DUP2 MLOAD DUP2 LT PUSH2 0x1C9 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1DD JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1F5 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x20B JUMPI POP PUSH2 0x214 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0xE2 JUMP JUMPDEST POP POP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x60 SWAP1 DUP2 SWAP1 DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x23D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x267 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP2 POP PUSH2 0x274 DUP7 DUP7 PUSH2 0x3AC JUMP JUMPDEST SWAP3 POP DUP3 MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x286 JUMPI POP PUSH2 0x217 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x214 JUMPI DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9E269B68 PUSH3 0x249F0 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x2B0 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 DUP11 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xAE9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP7 STATICCALL SWAP4 POP POP POP POP DUP1 ISZERO PUSH2 0x326 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x323 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x970 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x354 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x1AD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1B2 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x361 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x375 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x38D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x3A3 JUMPI POP PUSH2 0x214 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x289 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC45A0155 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3FD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x421 SWAP2 SWAP1 PUSH2 0x898 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP4 MLOAD SUB PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x43E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x468 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP2 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x694 JUMPI PUSH1 0x60 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5B1DC86F PUSH3 0x249F0 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x498 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP9 DUP7 PUSH1 0x1 ADD DUP2 MLOAD DUP2 LT PUSH2 0x4AF JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP3 SWAP2 SWAP1 PUSH2 0xAA2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP7 STATICCALL SWAP4 POP POP POP POP DUP1 ISZERO PUSH2 0x522 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x51F SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x93B JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x590 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x550 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x555 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP1 JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x584 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP5 POP POP POP POP POP PUSH2 0x697 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x59E JUMPI PUSH1 0x0 DUP1 PUSH2 0x55A JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x688 JUMPI PUSH1 0x0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5B9 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x60D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x631 SWAP2 SWAP1 PUSH2 0x9A5 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 GT ISZERO PUSH2 0x67F JUMPI DUP1 SWAP3 POP DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x64A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP9 DUP8 DUP2 MLOAD DUP2 LT PUSH2 0x65E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x5A2 JUMP JUMPDEST POP POP POP POP PUSH1 0x1 ADD PUSH2 0x46E JUMP JUMPDEST POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x697 DUP2 PUSH2 0xB95 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x697 DUP2 PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x6C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x6D7 PUSH2 0x6D2 DUP3 PUSH2 0xB4D JUMP JUMPDEST PUSH2 0xB26 JUMP JUMPDEST SWAP2 POP DUP2 DUP2 DUP4 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP2 ADD SWAP1 POP DUP4 DUP6 PUSH1 0x20 DUP5 MUL DUP3 ADD GT ISZERO PUSH2 0x6FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x728 JUMPI DUP2 PUSH2 0x712 DUP9 DUP3 PUSH2 0x69D JUMP JUMPDEST DUP5 MSTORE POP PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x6FF JUMP JUMPDEST POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x743 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x751 PUSH2 0x6D2 DUP3 PUSH2 0xB4D JUMP JUMPDEST SWAP2 POP DUP2 DUP2 DUP4 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP2 ADD SWAP1 POP DUP4 DUP6 PUSH1 0x20 DUP5 MUL DUP3 ADD GT ISZERO PUSH2 0x776 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x728 JUMPI DUP2 PUSH2 0x78C DUP9 DUP3 PUSH2 0x6A8 JUMP JUMPDEST DUP5 MSTORE POP PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x779 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x7B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x7C1 PUSH2 0x6D2 DUP3 PUSH2 0xB4D JUMP JUMPDEST SWAP2 POP DUP2 DUP2 DUP4 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP2 ADD SWAP1 POP DUP4 DUP6 PUSH1 0x20 DUP5 MUL DUP3 ADD GT ISZERO PUSH2 0x7E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x728 JUMPI DUP2 PUSH2 0x7FC DUP9 DUP3 PUSH2 0x882 JUMP JUMPDEST DUP5 MSTORE POP PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x7E9 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x823 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x831 PUSH2 0x6D2 DUP3 PUSH2 0xB4D JUMP JUMPDEST SWAP2 POP DUP2 DUP2 DUP4 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP2 ADD SWAP1 POP DUP4 DUP6 PUSH1 0x20 DUP5 MUL DUP3 ADD GT ISZERO PUSH2 0x856 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x728 JUMPI DUP2 PUSH2 0x86C DUP9 DUP3 PUSH2 0x88D JUMP JUMPDEST DUP5 MSTORE POP PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x859 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x697 DUP2 PUSH2 0xBAC JUMP JUMPDEST DUP1 MLOAD PUSH2 0x697 DUP2 PUSH2 0xBAC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8B6 DUP5 DUP5 PUSH2 0x6A8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x8D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8DF DUP7 DUP7 PUSH2 0x69D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x8FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x908 DUP7 DUP3 DUP8 ADD PUSH2 0x6B3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x925 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x931 DUP7 DUP3 DUP8 ADD PUSH2 0x7A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x94D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x964 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8B6 DUP5 DUP3 DUP6 ADD PUSH2 0x732 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x982 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x999 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8B6 DUP5 DUP3 DUP6 ADD PUSH2 0x812 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8B6 DUP5 DUP5 PUSH2 0x88D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9CF DUP4 DUP4 PUSH2 0x9E3 JUMP JUMPDEST POP POP PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9CF DUP4 DUP4 PUSH2 0xA99 JUMP JUMPDEST PUSH2 0x9EC DUP2 PUSH2 0xB81 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9FD DUP3 PUSH2 0xB74 JUMP JUMPDEST PUSH2 0xA07 DUP2 DUP6 PUSH2 0xB78 JUMP JUMPDEST SWAP4 POP PUSH2 0xA12 DUP4 PUSH2 0xB6E JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA40 JUMPI DUP2 MLOAD PUSH2 0xA2A DUP9 DUP3 PUSH2 0x9C3 JUMP JUMPDEST SWAP8 POP PUSH2 0xA35 DUP4 PUSH2 0xB6E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 ADD PUSH2 0xA16 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA56 DUP3 PUSH2 0xB74 JUMP JUMPDEST PUSH2 0xA60 DUP2 DUP6 PUSH2 0xB78 JUMP JUMPDEST SWAP4 POP PUSH2 0xA6B DUP4 PUSH2 0xB6E JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA40 JUMPI DUP2 MLOAD PUSH2 0xA83 DUP9 DUP3 PUSH2 0x9D7 JUMP JUMPDEST SWAP8 POP PUSH2 0xA8E DUP4 PUSH2 0xB6E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 ADD PUSH2 0xA6F JUMP JUMPDEST PUSH2 0x9EC DUP2 PUSH2 0xB92 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0xAB0 DUP3 DUP6 PUSH2 0x9E3 JUMP JUMPDEST PUSH2 0xABD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x9E3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0xAD5 DUP2 DUP6 PUSH2 0x9F2 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x8B6 DUP2 DUP5 PUSH2 0xA4B JUMP JUMPDEST PUSH1 0x60 DUP2 ADD PUSH2 0xAF7 DUP3 DUP7 PUSH2 0xA99 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0xB09 DUP2 DUP6 PUSH2 0x9F2 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0xB1D DUP2 DUP5 PUSH2 0x9F2 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xB45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xB64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 SWAP1 DUP2 MUL ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x697 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB9E DUP2 PUSH2 0xB81 JUMP JUMPDEST DUP2 EQ PUSH2 0xBA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xB9E DUP2 PUSH2 0xB92 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0x8835B105F5903FAF4C3C9D7F8067D36B9334DED969 DUP3 0xE3 DUP11 ADDRESS JUMPI 0xCA 0x2C 0x4C 0xCC PUSH13 0x64736F6C634300060C00330000 ",
                "sourceMap": "1387:4505:11:-:0;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
                "immutableReferences": {},
                "linkReferences": {},
                "object": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c80630496d5dc1461003b578063494569db14610065575b600080fd5b61004e6100493660046108be565b610078565b60405161005c929190610ac4565b60405180910390f35b61004e6100733660046108be565b61021f565b805160609081908067ffffffffffffffff8111801561009657600080fd5b506040519080825280602002602001820160405280156100c0578160200160208202803683370190505b5091506100cd86866103ac565b92508251600014156100df5750610217565b60005b8181101561021457866001600160a01b031663a8312b1d620249f087848151811061010957fe5b6020026020010151878a6040518563ffffffff1660e01b815260040161013193929190610ae9565b60006040518083038187803b15801561014957600080fd5b5086fa9350505050801561017f57506040513d6000823e601f3d908101601f1916820160405261017c9190810190610970565b60015b6101b9573d8080156101ad576040519150601f19603f3d011682016040523d82523d6000602084013e6101b2565b606091505b5050610214565b806001885103815181106101c957fe5b60200260200101518483815181106101dd57fe5b6020026020010181815250508382815181106101f557fe5b60200260200101516000141561020b5750610214565b506001016100e2565b50505b935093915050565b805160609081908067ffffffffffffffff8111801561023d57600080fd5b50604051908082528060200260200182016040528015610267578160200160208202803683370190505b50915061027486866103ac565b92508251600014156102865750610217565b60005b8181101561021457866001600160a01b0316639e269b68620249f08784815181106102b057fe5b6020026020010151878a6040518563ffffffff1660e01b81526004016102d893929190610ae9565b60006040518083038187803b1580156102f057600080fd5b5086fa9350505050801561032657506040513d6000823e601f3d908101601f191682016040526103239190810190610970565b60015b610354573d8080156101ad576040519150601f19603f3d011682016040523d82523d6000602084013e6101b2565b8060008151811061036157fe5b602002602001015184838151811061037557fe5b60200260200101818152505083828151811061038d57fe5b6020026020010151600014156103a35750610214565b50600101610289565b60606000836001600160a01b031663c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b1580156103e957600080fd5b505afa1580156103fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104219190610898565b9050600183510367ffffffffffffffff8111801561043e57600080fd5b50604051908082528060200260200182016040528015610468578160200160208202803683370190505b50915060005b8251811015610694576060826001600160a01b0316635b1dc86f620249f087858151811061049857fe5b60200260200101518886600101815181106104af57fe5b60200260200101516040518463ffffffff1660e01b81526004016104d4929190610aa2565b60006040518083038187803b1580156104ec57600080fd5b5086fa9350505050801561052257506040513d6000823e601f3d908101601f1916820160405261051f919081019061093b565b60015b610590573d808015610550576040519150601f19603f3d011682016040523d82523d6000602084013e610555565b606091505b506000805b50604051908082528060200260200182016040528015610584578160200160208202803683370190505b50945050505050610697565b805161059e5760008061055a565b6000805b82518110156106885760008382815181106105b957fe5b60200260200101516001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156105f957600080fd5b505afa15801561060d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063191906109a5565b90508281111561067f5780925083828151811061064a57fe5b602002602001015188878151811061065e57fe5b60200260200101906001600160a01b031690816001600160a01b0316815250505b506001016105a2565b5050505060010161046e565b50505b92915050565b803561069781610b95565b805161069781610b95565b600082601f8301126106c457600080fd5b81356106d76106d282610b4d565b610b26565b915081818352602084019350602081019050838560208402820111156106fc57600080fd5b60005b838110156107285781610712888261069d565b84525060209283019291909101906001016106ff565b5050505092915050565b600082601f83011261074357600080fd5b81516107516106d282610b4d565b9150818183526020840193506020810190508385602084028201111561077657600080fd5b60005b83811015610728578161078c88826106a8565b8452506020928301929190910190600101610779565b600082601f8301126107b357600080fd5b81356107c16106d282610b4d565b915081818352602084019350602081019050838560208402820111156107e657600080fd5b60005b8381101561072857816107fc8882610882565b84525060209283019291909101906001016107e9565b600082601f83011261082357600080fd5b81516108316106d282610b4d565b9150818183526020840193506020810190508385602084028201111561085657600080fd5b60005b83811015610728578161086c888261088d565b8452506020928301929190910190600101610859565b803561069781610bac565b805161069781610bac565b6000602082840312156108aa57600080fd5b60006108b684846106a8565b949350505050565b6000806000606084860312156108d357600080fd5b60006108df868661069d565b935050602084013567ffffffffffffffff8111156108fc57600080fd5b610908868287016106b3565b925050604084013567ffffffffffffffff81111561092557600080fd5b610931868287016107a2565b9150509250925092565b60006020828403121561094d57600080fd5b815167ffffffffffffffff81111561096457600080fd5b6108b684828501610732565b60006020828403121561098257600080fd5b815167ffffffffffffffff81111561099957600080fd5b6108b684828501610812565b6000602082840312156109b757600080fd5b60006108b6848461088d565b60006109cf83836109e3565b505060200190565b60006109cf8383610a99565b6109ec81610b81565b82525050565b60006109fd82610b74565b610a078185610b78565b9350610a1283610b6e565b8060005b83811015610a40578151610a2a88826109c3565b9750610a3583610b6e565b925050600101610a16565b509495945050505050565b6000610a5682610b74565b610a608185610b78565b9350610a6b83610b6e565b8060005b83811015610a40578151610a8388826109d7565b9750610a8e83610b6e565b925050600101610a6f565b6109ec81610b92565b60408101610ab082856109e3565b610abd60208301846109e3565b9392505050565b60408082528101610ad581856109f2565b905081810360208301526108b68184610a4b565b60608101610af78286610a99565b8181036020830152610b0981856109f2565b90508181036040830152610b1d81846109f2565b95945050505050565b60405181810167ffffffffffffffff81118282101715610b4557600080fd5b604052919050565b600067ffffffffffffffff821115610b6457600080fd5b5060209081020190565b60200190565b5190565b90815260200190565b60006001600160a01b038216610697565b90565b610b9e81610b81565b8114610ba957600080fd5b50565b610b9e81610b9256fea2646970667358221220748835b105f5903faf4c3c9d7f8067d36b9334ded96982e38a3057ca2c4ccc6c64736f6c634300060c0033",
                "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x496D5DC EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x494569DB EQ PUSH2 0x65 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0x8BE JUMP JUMPDEST PUSH2 0x78 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C SWAP3 SWAP2 SWAP1 PUSH2 0xAC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH2 0x73 CALLDATASIZE PUSH1 0x4 PUSH2 0x8BE JUMP JUMPDEST PUSH2 0x21F JUMP JUMPDEST DUP1 MLOAD PUSH1 0x60 SWAP1 DUP2 SWAP1 DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xC0 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP2 POP PUSH2 0xCD DUP7 DUP7 PUSH2 0x3AC JUMP JUMPDEST SWAP3 POP DUP3 MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0xDF JUMPI POP PUSH2 0x217 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x214 JUMPI DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA8312B1D PUSH3 0x249F0 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x109 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 DUP11 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x131 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xAE9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x149 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP7 STATICCALL SWAP4 POP POP POP POP DUP1 ISZERO PUSH2 0x17F JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x17C SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x970 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1B9 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x1AD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1B2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP PUSH2 0x214 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP9 MLOAD SUB DUP2 MLOAD DUP2 LT PUSH2 0x1C9 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1DD JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1F5 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x20B JUMPI POP PUSH2 0x214 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0xE2 JUMP JUMPDEST POP POP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x60 SWAP1 DUP2 SWAP1 DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x23D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x267 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP2 POP PUSH2 0x274 DUP7 DUP7 PUSH2 0x3AC JUMP JUMPDEST SWAP3 POP DUP3 MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x286 JUMPI POP PUSH2 0x217 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x214 JUMPI DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9E269B68 PUSH3 0x249F0 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x2B0 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 DUP11 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xAE9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP7 STATICCALL SWAP4 POP POP POP POP DUP1 ISZERO PUSH2 0x326 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x323 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x970 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x354 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x1AD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1B2 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x361 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x375 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x38D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x3A3 JUMPI POP PUSH2 0x214 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x289 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC45A0155 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3FD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x421 SWAP2 SWAP1 PUSH2 0x898 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP4 MLOAD SUB PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x43E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x468 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP2 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x694 JUMPI PUSH1 0x60 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5B1DC86F PUSH3 0x249F0 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x498 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP9 DUP7 PUSH1 0x1 ADD DUP2 MLOAD DUP2 LT PUSH2 0x4AF JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D4 SWAP3 SWAP2 SWAP1 PUSH2 0xAA2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP7 STATICCALL SWAP4 POP POP POP POP DUP1 ISZERO PUSH2 0x522 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x51F SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x93B JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x590 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x550 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x555 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP1 JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x584 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP5 POP POP POP POP POP PUSH2 0x697 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x59E JUMPI PUSH1 0x0 DUP1 PUSH2 0x55A JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x688 JUMPI PUSH1 0x0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5B9 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x60D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x631 SWAP2 SWAP1 PUSH2 0x9A5 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 GT ISZERO PUSH2 0x67F JUMPI DUP1 SWAP3 POP DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x64A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP9 DUP8 DUP2 MLOAD DUP2 LT PUSH2 0x65E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x5A2 JUMP JUMPDEST POP POP POP POP PUSH1 0x1 ADD PUSH2 0x46E JUMP JUMPDEST POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x697 DUP2 PUSH2 0xB95 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x697 DUP2 PUSH2 0xB95 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x6C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x6D7 PUSH2 0x6D2 DUP3 PUSH2 0xB4D JUMP JUMPDEST PUSH2 0xB26 JUMP JUMPDEST SWAP2 POP DUP2 DUP2 DUP4 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP2 ADD SWAP1 POP DUP4 DUP6 PUSH1 0x20 DUP5 MUL DUP3 ADD GT ISZERO PUSH2 0x6FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x728 JUMPI DUP2 PUSH2 0x712 DUP9 DUP3 PUSH2 0x69D JUMP JUMPDEST DUP5 MSTORE POP PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x6FF JUMP JUMPDEST POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x743 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x751 PUSH2 0x6D2 DUP3 PUSH2 0xB4D JUMP JUMPDEST SWAP2 POP DUP2 DUP2 DUP4 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP2 ADD SWAP1 POP DUP4 DUP6 PUSH1 0x20 DUP5 MUL DUP3 ADD GT ISZERO PUSH2 0x776 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x728 JUMPI DUP2 PUSH2 0x78C DUP9 DUP3 PUSH2 0x6A8 JUMP JUMPDEST DUP5 MSTORE POP PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x779 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x7B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x7C1 PUSH2 0x6D2 DUP3 PUSH2 0xB4D JUMP JUMPDEST SWAP2 POP DUP2 DUP2 DUP4 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP2 ADD SWAP1 POP DUP4 DUP6 PUSH1 0x20 DUP5 MUL DUP3 ADD GT ISZERO PUSH2 0x7E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x728 JUMPI DUP2 PUSH2 0x7FC DUP9 DUP3 PUSH2 0x882 JUMP JUMPDEST DUP5 MSTORE POP PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x7E9 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x823 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x831 PUSH2 0x6D2 DUP3 PUSH2 0xB4D JUMP JUMPDEST SWAP2 POP DUP2 DUP2 DUP4 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP2 ADD SWAP1 POP DUP4 DUP6 PUSH1 0x20 DUP5 MUL DUP3 ADD GT ISZERO PUSH2 0x856 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x728 JUMPI DUP2 PUSH2 0x86C DUP9 DUP3 PUSH2 0x88D JUMP JUMPDEST DUP5 MSTORE POP PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x859 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x697 DUP2 PUSH2 0xBAC JUMP JUMPDEST DUP1 MLOAD PUSH2 0x697 DUP2 PUSH2 0xBAC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8B6 DUP5 DUP5 PUSH2 0x6A8 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x8D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8DF DUP7 DUP7 PUSH2 0x69D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x8FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x908 DUP7 DUP3 DUP8 ADD PUSH2 0x6B3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x925 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x931 DUP7 DUP3 DUP8 ADD PUSH2 0x7A2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x94D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x964 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8B6 DUP5 DUP3 DUP6 ADD PUSH2 0x732 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x982 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x999 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8B6 DUP5 DUP3 DUP6 ADD PUSH2 0x812 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8B6 DUP5 DUP5 PUSH2 0x88D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9CF DUP4 DUP4 PUSH2 0x9E3 JUMP JUMPDEST POP POP PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9CF DUP4 DUP4 PUSH2 0xA99 JUMP JUMPDEST PUSH2 0x9EC DUP2 PUSH2 0xB81 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9FD DUP3 PUSH2 0xB74 JUMP JUMPDEST PUSH2 0xA07 DUP2 DUP6 PUSH2 0xB78 JUMP JUMPDEST SWAP4 POP PUSH2 0xA12 DUP4 PUSH2 0xB6E JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA40 JUMPI DUP2 MLOAD PUSH2 0xA2A DUP9 DUP3 PUSH2 0x9C3 JUMP JUMPDEST SWAP8 POP PUSH2 0xA35 DUP4 PUSH2 0xB6E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 ADD PUSH2 0xA16 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA56 DUP3 PUSH2 0xB74 JUMP JUMPDEST PUSH2 0xA60 DUP2 DUP6 PUSH2 0xB78 JUMP JUMPDEST SWAP4 POP PUSH2 0xA6B DUP4 PUSH2 0xB6E JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA40 JUMPI DUP2 MLOAD PUSH2 0xA83 DUP9 DUP3 PUSH2 0x9D7 JUMP JUMPDEST SWAP8 POP PUSH2 0xA8E DUP4 PUSH2 0xB6E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 ADD PUSH2 0xA6F JUMP JUMPDEST PUSH2 0x9EC DUP2 PUSH2 0xB92 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0xAB0 DUP3 DUP6 PUSH2 0x9E3 JUMP JUMPDEST PUSH2 0xABD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x9E3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0xAD5 DUP2 DUP6 PUSH2 0x9F2 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x8B6 DUP2 DUP5 PUSH2 0xA4B JUMP JUMPDEST PUSH1 0x60 DUP2 ADD PUSH2 0xAF7 DUP3 DUP7 PUSH2 0xA99 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0xB09 DUP2 DUP6 PUSH2 0x9F2 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0xB1D DUP2 DUP5 PUSH2 0x9F2 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xB45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xB64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 SWAP1 DUP2 MUL ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x697 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xB9E DUP2 PUSH2 0xB81 JUMP JUMPDEST DUP2 EQ PUSH2 0xBA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xB9E DUP2 PUSH2 0xB92 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0x8835B105F5903FAF4C3C9D7F8067D36B9334DED969 DUP3 0xE3 DUP11 ADDRESS JUMPI 0xCA 0x2C 0x4C 0xCC PUSH13 0x64736F6C634300060C00330000 ",
                "sourceMap": "1387:4505:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1948:1154;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;3526:1138;;;;;;:::i;:::-;;:::i;1948:1154::-;2226:24;;2131:22;;;;2226:24;2280:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2280:25:11;;2260:45;;2323:31;2341:6;2349:4;2323:17;:31::i;:::-;2315:39;;2368:5;:12;2384:1;2368:17;2364:81;;;2401:33;;;2364:81;2459:9;2454:642;2478:10;2474:1;:14;2454:642;;;2545:6;-1:-1:-1;;;;;2529:37:11;;1507:5;2634:17;2652:1;2634:20;;;;;;;;;;;;;;2656:5;2663:4;2529:139;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2529:139:11;;;;;;;;;;;;:::i;:::-;;;2509:577;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3066:5;;;2509:577;2773:7;2795:1;2781:4;:11;:15;2773:24;;;;;;;;;;;;;;2750:17;2768:1;2750:20;;;;;;;;;;;;;:47;;;;;2873:17;2891:1;2873:20;;;;;;;;;;;;;;2897:1;2873:25;2869:77;;;2922:5;;;2869:77;2685:275;2490:3;;2454:642;;;;1948:1154;;;;;;;;:::o;3526:1138::-;3803:24;;3708:22;;;;3803:24;3857:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3857:25:11;;3837:45;;3900:31;3918:6;3926:4;3900:17;:31::i;:::-;3892:39;;3945:5;:12;3961:1;3945:17;3941:81;;;3978:33;;;3941:81;4036:9;4031:627;4055:10;4051:1;:14;4031:627;;;4122:6;-1:-1:-1;;;;;4106:36:11;;1507:5;4210:17;4228:1;4210:20;;;;;;;;;;;;;;4232:5;4239:4;4106:138;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4106:138:11;;;;;;;;;;;;:::i;:::-;;;4086:562;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4349:7;4357:1;4349:10;;;;;;;;;;;;;;4326:17;4344:1;4326:20;;;;;;;;;;;;;:33;;;;;4435:17;4453:1;4435:20;;;;;;;;;;;;;;4459:1;4435:25;4431:77;;;4484:5;;;4431:77;4261:261;4067:3;;4031:627;;4670:1220;4804:22;4842:24;4902:6;-1:-1:-1;;;;;4886:31:11;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4842:78;;4966:1;4952:4;:11;:15;4938:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4938:30:11;;4930:38;;4983:9;4978:906;5002:5;:12;4998:1;:16;4978:906;;;5069:25;5128:7;-1:-1:-1;;;;;5128:16:11;;1507:5;5212:4;5217:1;5212:7;;;;;;;;;;;;;;5221:4;5226:1;5230;5226:5;5221:11;;;;;;;;;;;;;;5128:105;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5128:105:11;;;;;;;;;;;;:::i;:::-;;;5108:766;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5857:1:11;;5843:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5843:16:11;;5836:23;;;;;;;;5108:766;5320:15;;5316:90;;5385:1;;5371:16;;5316:90;5424:17;5468:9;5463:319;5487:8;:15;5483:1;:19;5463:319;;;5531:19;5567:8;5576:1;5567:11;;;;;;;;;;;;;;-1:-1:-1;;;;;5553:38:11;;:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5531:62;;5633:9;5619:11;:23;5615:149;;;5682:11;5670:23;;5730:8;5739:1;5730:11;;;;;;;;;;;;;;5719:5;5725:1;5719:8;;;;;;;;;;;;;:22;-1:-1:-1;;;;;5719:22:11;;;-1:-1:-1;;;;;5719:22:11;;;;;5615:149;-1:-1:-1;5504:3:11;;5463:319;;;;5250:546;;-1:-1:-1;5016:3:11;;4978:906;;;;4670:1220;;;;;;:::o;5:130:-1:-;72:20;;97:33;72:20;97:33;:::i;142:134::-;220:13;;238:33;220:13;238:33;:::i;301:707::-;;418:3;411:4;403:6;399:17;395:27;385:2;;436:1;433;426:12;385:2;473:6;460:20;495:80;510:64;567:6;510:64;:::i;:::-;495:80;:::i;:::-;486:89;;592:5;617:6;610:5;603:21;647:4;639:6;635:17;625:27;;669:4;664:3;660:14;653:21;;722:6;769:3;761:4;753:6;749:17;744:3;740:27;737:36;734:2;;;786:1;783;776:12;734:2;811:1;796:206;821:6;818:1;815:13;796:206;;;879:3;901:37;934:3;922:10;901:37;:::i;:::-;889:50;;-1:-1;962:4;953:14;;;;981;;;;;843:1;836:9;796:206;;;800:14;378:630;;;;;;;:::o;1034:722::-;;1162:3;1155:4;1147:6;1143:17;1139:27;1129:2;;1180:1;1177;1170:12;1129:2;1210:6;1204:13;1232:80;1247:64;1304:6;1247:64;:::i;1232:80::-;1223:89;;1329:5;1354:6;1347:5;1340:21;1384:4;1376:6;1372:17;1362:27;;1406:4;1401:3;1397:14;1390:21;;1459:6;1506:3;1498:4;1490:6;1486:17;1481:3;1477:27;1474:36;1471:2;;;1523:1;1520;1513:12;1471:2;1548:1;1533:217;1558:6;1555:1;1552:13;1533:217;;;1616:3;1638:48;1682:3;1670:10;1638:48;:::i;:::-;1626:61;;-1:-1;1710:4;1701:14;;;;1729;;;;;1580:1;1573:9;1533:217;;1782:707;;1899:3;1892:4;1884:6;1880:17;1876:27;1866:2;;1917:1;1914;1907:12;1866:2;1954:6;1941:20;1976:80;1991:64;2048:6;1991:64;:::i;1976:80::-;1967:89;;2073:5;2098:6;2091:5;2084:21;2128:4;2120:6;2116:17;2106:27;;2150:4;2145:3;2141:14;2134:21;;2203:6;2250:3;2242:4;2234:6;2230:17;2225:3;2221:27;2218:36;2215:2;;;2267:1;2264;2257:12;2215:2;2292:1;2277:206;2302:6;2299:1;2296:13;2277:206;;;2360:3;2382:37;2415:3;2403:10;2382:37;:::i;:::-;2370:50;;-1:-1;2443:4;2434:14;;;;2462;;;;;2324:1;2317:9;2277:206;;2515:722;;2643:3;2636:4;2628:6;2624:17;2620:27;2610:2;;2661:1;2658;2651:12;2610:2;2691:6;2685:13;2713:80;2728:64;2785:6;2728:64;:::i;2713:80::-;2704:89;;2810:5;2835:6;2828:5;2821:21;2865:4;2857:6;2853:17;2843:27;;2887:4;2882:3;2878:14;2871:21;;2940:6;2987:3;2979:4;2971:6;2967:17;2962:3;2958:27;2955:36;2952:2;;;3004:1;3001;2994:12;2952:2;3029:1;3014:217;3039:6;3036:1;3033:13;3014:217;;;3097:3;3119:48;3163:3;3151:10;3119:48;:::i;:::-;3107:61;;-1:-1;3191:4;3182:14;;;;3210;;;;;3061:1;3054:9;3014:217;;3245:130;3312:20;;3337:33;3312:20;3337:33;:::i;3382:134::-;3460:13;;3478:33;3460:13;3478:33;:::i;3523:263::-;;3638:2;3626:9;3617:7;3613:23;3609:32;3606:2;;;3654:1;3651;3644:12;3606:2;3689:1;3706:64;3762:7;3742:9;3706:64;:::i;:::-;3696:74;3600:186;-1:-1;;;;3600:186::o;3793:763::-;;;;3981:2;3969:9;3960:7;3956:23;3952:32;3949:2;;;3997:1;3994;3987:12;3949:2;4032:1;4049:53;4094:7;4074:9;4049:53;:::i;:::-;4039:63;;4011:97;4167:2;4156:9;4152:18;4139:32;4191:18;4183:6;4180:30;4177:2;;;4223:1;4220;4213:12;4177:2;4243:78;4313:7;4304:6;4293:9;4289:22;4243:78;:::i;:::-;4233:88;;4118:209;4386:2;4375:9;4371:18;4358:32;4410:18;4402:6;4399:30;4396:2;;;4442:1;4439;4432:12;4396:2;4462:78;4532:7;4523:6;4512:9;4508:22;4462:78;:::i;:::-;4452:88;;4337:209;3943:613;;;;;:::o;4563:392::-;;4703:2;4691:9;4682:7;4678:23;4674:32;4671:2;;;4719:1;4716;4709:12;4671:2;4754:24;;4798:18;4787:30;;4784:2;;;4830:1;4827;4820:12;4784:2;4850:89;4931:7;4922:6;4911:9;4907:22;4850:89;:::i;4962:392::-;;5102:2;5090:9;5081:7;5077:23;5073:32;5070:2;;;5118:1;5115;5108:12;5070:2;5153:24;;5197:18;5186:30;;5183:2;;;5229:1;5226;5219:12;5183:2;5249:89;5330:7;5321:6;5310:9;5306:22;5249:89;:::i;5361:263::-;;5476:2;5464:9;5455:7;5451:23;5447:32;5444:2;;;5492:1;5489;5482:12;5444:2;5527:1;5544:64;5600:7;5580:9;5544:64;:::i;5632:173::-;;5719:46;5761:3;5753:6;5719:46;:::i;:::-;-1:-1;;5794:4;5785:14;;5712:93::o;5814:173::-;;5901:46;5943:3;5935:6;5901:46;:::i;5995:103::-;6068:24;6086:5;6068:24;:::i;:::-;6063:3;6056:37;6050:48;;:::o;6256:690::-;;6401:54;6449:5;6401:54;:::i;:::-;6468:86;6547:6;6542:3;6468:86;:::i;:::-;6461:93;;6575:56;6625:5;6575:56;:::i;:::-;6651:7;6679:1;6664:260;6689:6;6686:1;6683:13;6664:260;;;6756:6;6750:13;6777:63;6836:3;6821:13;6777:63;:::i;:::-;6770:70;;6857:60;6910:6;6857:60;:::i;:::-;6847:70;-1:-1;;6711:1;6704:9;6664:260;;;-1:-1;6937:3;;6380:566;-1:-1;;;;;6380:566::o;6985:690::-;;7130:54;7178:5;7130:54;:::i;:::-;7197:86;7276:6;7271:3;7197:86;:::i;:::-;7190:93;;7304:56;7354:5;7304:56;:::i;:::-;7380:7;7408:1;7393:260;7418:6;7415:1;7412:13;7393:260;;;7485:6;7479:13;7506:63;7565:3;7550:13;7506:63;:::i;:::-;7499:70;;7586:60;7639:6;7586:60;:::i;:::-;7576:70;-1:-1;;7440:1;7433:9;7393:260;;7683:103;7756:24;7774:5;7756:24;:::i;7913:333::-;8068:2;8053:18;;8082:71;8057:9;8126:6;8082:71;:::i;:::-;8164:72;8232:2;8221:9;8217:18;8208:6;8164:72;:::i;:::-;8039:207;;;;;:::o;8253:629::-;8508:2;8522:47;;;8493:18;;8583:108;8493:18;8677:6;8583:108;:::i;:::-;8575:116;;8739:9;8733:4;8729:20;8724:2;8713:9;8709:18;8702:48;8764:108;8867:4;8858:6;8764:108;:::i;8889:740::-;9172:2;9157:18;;9186:71;9161:9;9230:6;9186:71;:::i;:::-;9305:9;9299:4;9295:20;9290:2;9279:9;9275:18;9268:48;9330:108;9433:4;9424:6;9330:108;:::i;:::-;9322:116;;9486:9;9480:4;9476:20;9471:2;9460:9;9456:18;9449:48;9511:108;9614:4;9605:6;9511:108;:::i;:::-;9503:116;9143:486;-1:-1;;;;;9143:486::o;9636:256::-;9698:2;9692:9;9724:17;;;9799:18;9784:34;;9820:22;;;9781:62;9778:2;;;9856:1;9853;9846:12;9778:2;9872;9865:22;9676:216;;-1:-1;9676:216::o;9899:304::-;;10058:18;10050:6;10047:30;10044:2;;;10090:1;10087;10080:12;10044:2;-1:-1;10125:4;10113:17;;;10178:15;;9981:222::o;10521:151::-;10645:4;10636:14;;10593:79::o;10837:137::-;10940:12;;10911:63::o;11356:178::-;11474:19;;;11523:4;11514:14;;11467:67::o;11729:91::-;;-1:-1;;;;;11889:54;;11791:24;11872:76::o;11955:72::-;12017:5;12000:27::o;12034:117::-;12103:24;12121:5;12103:24;:::i;:::-;12096:5;12093:35;12083:2;;12142:1;12139;12132:12;12083:2;12077:74;:::o;12158:117::-;12227:24;12245:5;12227:24;:::i"
            }
        }
    },
    "sourceTreeHashHex": "0xb7b06db6ad069ce9cfe78f2a92770f8eb6cffc663c1f6e9162e90209beeb06a4",
    "sources": {
        "./KyberDmmSampler.sol": {
            "id": 11,
            "content": "// SPDX-License-Identifier: Apache-2.0\n/*\n\n  Copyright 2020 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.6;\npragma experimental ABIEncoderV2;\n\ninterface IKyberDmmPool {\n\n    function totalSupply()\n        external\n        view\n        returns (uint256);\n}\n\ninterface IKyberDmmFactory {\n\n    function getPools(address token0, address token1)\n        external\n        view\n        returns (address[] memory _tokenPools);\n}\n\ninterface IKyberDmmRouter {\n\n    function factory() external view returns (address);\n\n    function getAmountsOut(uint256 amountIn, address[] calldata pools, address[] calldata path)\n        external\n        view\n        returns (uint256[] memory amounts);\n\n    function getAmountsIn(uint256 amountOut, address[] calldata pools, address[] calldata path)\n        external\n        view\n        returns (uint256[] memory amounts);\n}\n\n\n\ncontract KyberDmmSampler\n{\n    /// @dev Gas limit for KyberDmm calls.\n    uint256 constant private KYBER_DMM_CALL_GAS = 150e3; // 150k\n\n    /// @dev Sample sell quotes from KyberDmm.\n    /// @param router Router to look up tokens and amounts\n    /// @param path Token route. Should be takerToken -> makerToken\n    /// @param takerTokenAmounts Taker token sell amount for each sample.\n    /// @return pools The pool addresses involved in the multi path trade\n    /// @return makerTokenAmounts Maker amounts bought at each taker token\n    ///         amount.\n    function sampleSellsFromKyberDmm(\n        address router,\n        address[] memory path,\n        uint256[] memory takerTokenAmounts\n    )\n        public\n        view\n        returns (address[] memory pools, uint256[] memory makerTokenAmounts)\n    {\n        uint256 numSamples = takerTokenAmounts.length;\n        makerTokenAmounts = new uint256[](numSamples);\n        pools = _getKyberDmmPools(router, path);\n        if (pools.length == 0) {\n            return (pools, makerTokenAmounts);\n        }\n        for (uint256 i = 0; i < numSamples; i++) {\n            try\n                IKyberDmmRouter(router).getAmountsOut\n                    {gas: KYBER_DMM_CALL_GAS}\n                    (takerTokenAmounts[i], pools, path)\n                returns (uint256[] memory amounts)\n            {\n                makerTokenAmounts[i] = amounts[path.length - 1];\n                // Break early if there are 0 amounts\n                if (makerTokenAmounts[i] == 0) {\n                    break;\n                }\n            } catch (bytes memory) {\n                // Swallow failures, leaving all results as zero.\n                break;\n            }\n        }\n    }\n\n    /// @dev Sample buy quotes from KyberDmm.\n    /// @param router Router to look up tokens and amounts\n    /// @param path Token route. Should be takerToken -> makerToken.\n    /// @param makerTokenAmounts Maker token buy amount for each sample.\n    /// @return pools The pool addresses involved in the multi path trade\n    /// @return takerTokenAmounts Taker amounts sold at each maker token\n    ///         amount.\n    function sampleBuysFromKyberDmm(\n        address router,\n        address[] memory path,\n        uint256[] memory makerTokenAmounts\n    )\n        public\n        view\n        returns (address[] memory pools, uint256[] memory takerTokenAmounts)\n    {\n        uint256 numSamples = makerTokenAmounts.length;\n        takerTokenAmounts = new uint256[](numSamples);\n        pools = _getKyberDmmPools(router, path);\n        if (pools.length == 0) {\n            return (pools, takerTokenAmounts);\n        }\n        for (uint256 i = 0; i < numSamples; i++) {\n            try\n                IKyberDmmRouter(router).getAmountsIn\n                    {gas: KYBER_DMM_CALL_GAS}\n                    (makerTokenAmounts[i], pools, path)\n                returns (uint256[] memory amounts)\n            {\n                takerTokenAmounts[i] = amounts[0];\n                // Break early if there are 0 amounts\n                if (takerTokenAmounts[i] == 0) {\n                    break;\n                }\n            } catch (bytes memory) {\n                // Swallow failures, leaving all results as zero.\n                break;\n            }\n        }\n    }\n\n    function _getKyberDmmPools(\n        address router,\n        address[] memory path\n    )\n        private\n        view\n        returns (address[] memory pools)\n    {\n        IKyberDmmFactory factory = IKyberDmmFactory(IKyberDmmRouter(router).factory());\n        pools = new address[](path.length - 1);\n        for (uint256 i = 0; i < pools.length; i++) {\n            // find the best pool\n            address[] memory allPools;\n            try\n                factory.getPools\n                    {gas: KYBER_DMM_CALL_GAS}\n                    (path[i], path[i + 1])\n                returns (address[] memory allPools)\n            {\n                if (allPools.length == 0) {\n                    return new address[](0);\n                }\n\n                uint256 maxSupply = 0;\n                for (uint256 j = 0; j < allPools.length; j++) {\n                    uint256 totalSupply = IKyberDmmPool(allPools[j]).totalSupply();\n                    if (totalSupply > maxSupply) {\n                        maxSupply = totalSupply;\n                        pools[i] = allPools[j];\n                    }\n                }\n            } catch (bytes memory) {\n                return new address[](0);\n            }\n        }\n    }\n}\n"
        }
    },
    "sourceCodes": {
        "./KyberDmmSampler.sol": "// SPDX-License-Identifier: Apache-2.0\n/*\n\n  Copyright 2020 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.6;\npragma experimental ABIEncoderV2;\n\ninterface IKyberDmmPool {\n\n    function totalSupply()\n        external\n        view\n        returns (uint256);\n}\n\ninterface IKyberDmmFactory {\n\n    function getPools(address token0, address token1)\n        external\n        view\n        returns (address[] memory _tokenPools);\n}\n\ninterface IKyberDmmRouter {\n\n    function factory() external view returns (address);\n\n    function getAmountsOut(uint256 amountIn, address[] calldata pools, address[] calldata path)\n        external\n        view\n        returns (uint256[] memory amounts);\n\n    function getAmountsIn(uint256 amountOut, address[] calldata pools, address[] calldata path)\n        external\n        view\n        returns (uint256[] memory amounts);\n}\n\n\n\ncontract KyberDmmSampler\n{\n    /// @dev Gas limit for KyberDmm calls.\n    uint256 constant private KYBER_DMM_CALL_GAS = 150e3; // 150k\n\n    /// @dev Sample sell quotes from KyberDmm.\n    /// @param router Router to look up tokens and amounts\n    /// @param path Token route. Should be takerToken -> makerToken\n    /// @param takerTokenAmounts Taker token sell amount for each sample.\n    /// @return pools The pool addresses involved in the multi path trade\n    /// @return makerTokenAmounts Maker amounts bought at each taker token\n    ///         amount.\n    function sampleSellsFromKyberDmm(\n        address router,\n        address[] memory path,\n        uint256[] memory takerTokenAmounts\n    )\n        public\n        view\n        returns (address[] memory pools, uint256[] memory makerTokenAmounts)\n    {\n        uint256 numSamples = takerTokenAmounts.length;\n        makerTokenAmounts = new uint256[](numSamples);\n        pools = _getKyberDmmPools(router, path);\n        if (pools.length == 0) {\n            return (pools, makerTokenAmounts);\n        }\n        for (uint256 i = 0; i < numSamples; i++) {\n            try\n                IKyberDmmRouter(router).getAmountsOut\n                    {gas: KYBER_DMM_CALL_GAS}\n                    (takerTokenAmounts[i], pools, path)\n                returns (uint256[] memory amounts)\n            {\n                makerTokenAmounts[i] = amounts[path.length - 1];\n                // Break early if there are 0 amounts\n                if (makerTokenAmounts[i] == 0) {\n                    break;\n                }\n            } catch (bytes memory) {\n                // Swallow failures, leaving all results as zero.\n                break;\n            }\n        }\n    }\n\n    /// @dev Sample buy quotes from KyberDmm.\n    /// @param router Router to look up tokens and amounts\n    /// @param path Token route. Should be takerToken -> makerToken.\n    /// @param makerTokenAmounts Maker token buy amount for each sample.\n    /// @return pools The pool addresses involved in the multi path trade\n    /// @return takerTokenAmounts Taker amounts sold at each maker token\n    ///         amount.\n    function sampleBuysFromKyberDmm(\n        address router,\n        address[] memory path,\n        uint256[] memory makerTokenAmounts\n    )\n        public\n        view\n        returns (address[] memory pools, uint256[] memory takerTokenAmounts)\n    {\n        uint256 numSamples = makerTokenAmounts.length;\n        takerTokenAmounts = new uint256[](numSamples);\n        pools = _getKyberDmmPools(router, path);\n        if (pools.length == 0) {\n            return (pools, takerTokenAmounts);\n        }\n        for (uint256 i = 0; i < numSamples; i++) {\n            try\n                IKyberDmmRouter(router).getAmountsIn\n                    {gas: KYBER_DMM_CALL_GAS}\n                    (makerTokenAmounts[i], pools, path)\n                returns (uint256[] memory amounts)\n            {\n                takerTokenAmounts[i] = amounts[0];\n                // Break early if there are 0 amounts\n                if (takerTokenAmounts[i] == 0) {\n                    break;\n                }\n            } catch (bytes memory) {\n                // Swallow failures, leaving all results as zero.\n                break;\n            }\n        }\n    }\n\n    function _getKyberDmmPools(\n        address router,\n        address[] memory path\n    )\n        private\n        view\n        returns (address[] memory pools)\n    {\n        IKyberDmmFactory factory = IKyberDmmFactory(IKyberDmmRouter(router).factory());\n        pools = new address[](path.length - 1);\n        for (uint256 i = 0; i < pools.length; i++) {\n            // find the best pool\n            address[] memory allPools;\n            try\n                factory.getPools\n                    {gas: KYBER_DMM_CALL_GAS}\n                    (path[i], path[i + 1])\n                returns (address[] memory allPools)\n            {\n                if (allPools.length == 0) {\n                    return new address[](0);\n                }\n\n                uint256 maxSupply = 0;\n                for (uint256 j = 0; j < allPools.length; j++) {\n                    uint256 totalSupply = IKyberDmmPool(allPools[j]).totalSupply();\n                    if (totalSupply > maxSupply) {\n                        maxSupply = totalSupply;\n                        pools[i] = allPools[j];\n                    }\n                }\n            } catch (bytes memory) {\n                return new address[](0);\n            }\n        }\n    }\n}\n"
    },
    "compiler": {
        "name": "solc",
        "version": "0.6.12+commit.27d51765",
        "settings": {
            "remappings": [
                "@0x/contracts-erc20=/Users/kyuc/code/0x/protocol/packages/asset-swapper/node_modules/@0x/contracts-erc20",
                "@0x/contracts-utils=/Users/kyuc/code/0x/protocol/packages/asset-swapper/node_modules/@0x/contracts-utils",
                "@0x/contracts-zero-ex=/Users/kyuc/code/0x/protocol/packages/asset-swapper/node_modules/@0x/contracts-zero-ex"
            ],
            "optimizer": {
                "enabled": true,
                "runs": 200,
                "details": {
                    "yul": false,
                    "deduplicate": true
                }
            },
            "outputSelection": {
                "*": {
                    "*": [
                        "abi",
                        "devdoc",
                        "evm.bytecode.object",
                        "evm.bytecode.sourceMap",
                        "evm.deployedBytecode.object",
                        "evm.deployedBytecode.sourceMap"
                    ]
                }
            },
            "evmVersion": "istanbul"
        }
    },
    "chains": {}
}

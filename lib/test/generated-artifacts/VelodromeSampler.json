{
    "schemaVersion": "2.0.0",
    "contractName": "VelodromeSampler",
    "compilerOutput": {
        "abi": [
            {
                "inputs": [
                    {
                        "internalType": "contract IVelodromeRouter",
                        "name": "router",
                        "type": "address"
                    },
                    {
                        "internalType": "address",
                        "name": "takerToken",
                        "type": "address"
                    },
                    {
                        "internalType": "address",
                        "name": "makerToken",
                        "type": "address"
                    },
                    {
                        "internalType": "uint256[]",
                        "name": "makerTokenAmounts",
                        "type": "uint256[]"
                    }
                ],
                "name": "sampleBuysFromVelodrome",
                "outputs": [
                    {
                        "internalType": "bool",
                        "name": "stable",
                        "type": "bool"
                    },
                    {
                        "internalType": "uint256[]",
                        "name": "takerTokenAmounts",
                        "type": "uint256[]"
                    }
                ],
                "stateMutability": "view",
                "type": "function"
            },
            {
                "inputs": [
                    {
                        "internalType": "contract IVelodromeRouter",
                        "name": "router",
                        "type": "address"
                    },
                    {
                        "internalType": "address",
                        "name": "takerToken",
                        "type": "address"
                    },
                    {
                        "internalType": "address",
                        "name": "makerToken",
                        "type": "address"
                    },
                    {
                        "internalType": "uint256[]",
                        "name": "takerTokenAmounts",
                        "type": "uint256[]"
                    }
                ],
                "name": "sampleSellsFromVelodrome",
                "outputs": [
                    {
                        "internalType": "bool",
                        "name": "stable",
                        "type": "bool"
                    },
                    {
                        "internalType": "uint256[]",
                        "name": "makerTokenAmounts",
                        "type": "uint256[]"
                    }
                ],
                "stateMutability": "view",
                "type": "function"
            }
        ],
        "devdoc": {
            "kind": "dev",
            "methods": {
                "sampleBuysFromVelodrome(address,address,address,uint256[])": {
                    "details": "Sample buy quotes from Velodrome.",
                    "params": {
                        "makerToken": "Address of the maker token (what to buy).",
                        "makerTokenAmounts": "Maker token buy amount for each sample.",
                        "router": "Address of Velodrome router.",
                        "takerToken": "Address of the taker token (what to sell)."
                    },
                    "returns": {
                        "stable": "Whether the pool is a stable pool (vs volatile).",
                        "takerTokenAmounts": "Taker amounts sold at each maker token amount."
                    }
                },
                "sampleSellsFromVelodrome(address,address,address,uint256[])": {
                    "details": "Sample sell quotes from Velodrome",
                    "params": {
                        "makerToken": "Address of the maker token (what to buy).",
                        "router": "Address of Velodrome router.",
                        "takerToken": "Address of the taker token (what to sell).",
                        "takerTokenAmounts": "Taker token sell amount for each sample (sorted in ascending order)."
                    },
                    "returns": {
                        "makerTokenAmounts": "Maker amounts bought at each taker token amount.",
                        "stable": "Whether the pool is a stable pool (vs volatile)."
                    }
                }
            },
            "version": 1
        },
        "evm": {
            "bytecode": {
                "linkReferences": {},
                "object": "0x608060405234801561001057600080fd5b50610d7d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063918c2bbd1461003b578063aa9ea72a14610065575b600080fd5b61004e61004936600461099d565b610078565b60405161005c929190610bfd565b60405180910390f35b61004e61007336600461099d565b610258565b600060606100868486610343565b82518067ffffffffffffffff8111801561009f57600080fd5b506040519080825280602002602001820160405280156100c9578160200160208202803683370190505b5091506100d887878787610382565b60408051600180825281830190925291945060609190816020015b6100fb6107a9565b8152602001906001900390816100f35790505090506040518060600160405280886001600160a01b03168152602001876001600160a01b031681526020018515158152508160008151811061014c57fe5b602002602001018190525060005b8281101561024c57886001600160a01b0316639881fcb487838151811061017d57fe5b6020026020010151846040518363ffffffff1660e01b81526004016101a3929190610c70565b60006040518083038186803b1580156101bb57600080fd5b505afa1580156101cf573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526101f79190810190610960565b60018151811061020357fe5b602002602001015184828151811061021757fe5b60200260200101818152505083818151811061022f57fe5b6020026020010151600014156102445761024c565b60010161015a565b50505094509492505050565b600060606102668486610343565b61027286858786610382565b91506103386040518060600160405280886040518060600160405280896001600160a01b031681526020018a6001600160a01b031681526020018715158152506040516020016102c3929190610c1d565b60405160208183030381529060405281526020018860405180606001604052808a6001600160a01b03168152602001896001600160a01b03168152602001871515815250604051602001610318929190610c1d565b60405160208183030381529060405281526020016104278152508461053d565b905094509492505050565b806001600160a01b0316826001600160a01b0316141561037e5760405162461bcd60e51b815260040161037590610c38565b60405180910390fd5b5050565b80516000906001600160a01b038616635e1e63258460001984018481106103a557fe5b602002602001015187876040518463ffffffff1660e01b81526004016103cd93929190610c48565b604080518083038186803b1580156103e457600080fd5b505afa1580156103f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041c9190610a50565b979650505050505050565b6000806104326107a9565b858060200190518101906104469190610a16565b60408051600180825281830190925292945090925060609190816020015b61046c6107a9565b815260200190600190039081610464579050509050818160008151811061048f57fe5b60209081029190910101526040516326207f2d60e21b81526001600160a01b03841690639881fcb4906104c89088908590600401610c70565b60006040518083038186803b1580156104e057600080fd5b505afa1580156104f4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261051c9190810190610960565b60018151811061052857fe5b602002602001015193505050505b9392505050565b6060815167ffffffffffffffff8111801561055757600080fd5b50604051908082528060200260200182016040528015610581578160200160208202803683370190505b5090508151600014156105935761074b565b60006105c484600001518560200151856000815181106105af57fe5b6020026020010151876040015163ffffffff16565b9050806105d1575061074b565b60006105ee8560200151866000015184886040015163ffffffff16565b9050806105fc57505061074b565b60005b8451811015610747576000805b60058110156106f05761063387848151811061062457fe5b60200260200101518587610751565b94508461063f576106f0565b61064e61271561271087610751565b94508461065a576106f0565b600061067789602001518a60000151888c6040015163ffffffff16565b90508061068457506106f0565b80945087848151811061069357fe5b602002602001015185106106e7578784815181106106ad57fe5b60200260200101516127108986815181106106c457fe5b6020026020010151870302816106d657fe5b049250600583116106e757506106f0565b5060010161060c565b508015806106fe5750600581115b156107095750610747565b61072786838151811061071857fe5b60200260200101518486610751565b85838151811061073357fe5b6020908102919091010152506001016105ff565b5050505b92915050565b600083158061075e575081155b80610767575082155b1561077457506000610536565b8382028285828161078157fe5b0414610791576000915050610536565b836001850382018161079f57fe5b0495945050505050565b604080516060810182526000808252602082018190529181019190915290565b803561074b81610d15565b805161074b81610d15565b600082601f8301126107f057600080fd5b81356108036107fe82610cb7565b610c90565b9150818183526020840193506020810190508385602084028201111561082857600080fd5b60005b83811015610854578161083e888261094a565b845250602092830192919091019060010161082b565b5050505092915050565b600082601f83011261086f57600080fd5b815161087d6107fe82610cb7565b915081818352602084019350602081019050838560208402820111156108a257600080fd5b60005b8381101561085457816108b88882610955565b84525060209283019291909101906001016108a5565b805161074b81610d2c565b803561074b81610d35565b805161074b81610d35565b60006060828403121561090157600080fd5b61090b6060610c90565b9050600061091984846107d4565b825250602061092a848483016107d4565b602083015250604061093e848285016108ce565b60408301525092915050565b803561074b81610d3e565b805161074b81610d3e565b60006020828403121561097257600080fd5b815167ffffffffffffffff81111561098957600080fd5b6109958482850161085e565b949350505050565b600080600080608085870312156109b357600080fd5b60006109bf87876108d9565b94505060206109d0878288016107c9565b93505060406109e1878288016107c9565b925050606085013567ffffffffffffffff8111156109fe57600080fd5b610a0a878288016107df565b91505092959194509250565b60008060808385031215610a2957600080fd5b6000610a3585856108e4565b9250506020610a46858286016108ef565b9150509250929050565b60008060408385031215610a6357600080fd5b6000610a6f8585610955565b9250506020610a46858286016108ce565b6000610a8c8383610bb7565b505060600190565b6000610aa08383610bf4565b505060200190565b610ab181610ceb565b82525050565b6000610ac282610cde565b610acc8185610ce2565b9350610ad783610cd8565b8060005b83811015610b05578151610aef8882610a80565b9750610afa83610cd8565b925050600101610adb565b509495945050505050565b6000610b1b82610cde565b610b258185610ce2565b9350610b3083610cd8565b8060005b83811015610b05578151610b488882610a94565b9750610b5383610cd8565b925050600101610b34565b610ab181610cf6565b610ab181610cfb565b6000610b7d602583610ce2565b7f455243323042726964676553616d706c65722f494e56414c49445f544f4b454e8152642fa820a4a960d91b602082015260400192915050565b80516060830190610bc88482610aa8565b506020820151610bdb6020850182610aa8565b506040820151610bee6040850182610b5e565b50505050565b610ab181610d12565b60408101610c0b8285610b5e565b81810360208301526109958184610b10565b60808101610c2b8285610b67565b6105366020830184610bb7565b6020808252810161074b81610b70565b60608101610c568286610bf4565b610c636020830185610aa8565b6109956040830184610aa8565b60408101610c7e8285610bf4565b81810360208301526109958184610ab7565b60405181810167ffffffffffffffff81118282101715610caf57600080fd5b604052919050565b600067ffffffffffffffff821115610cce57600080fd5b5060209081020190565b60200190565b5190565b90815260200190565b600061074b82610d06565b151590565b600061074b82610ceb565b6001600160a01b031690565b90565b610d1e81610ceb565b8114610d2957600080fd5b50565b610d1e81610cf6565b610d1e81610cfb565b610d1e81610d1256fea2646970667358221220266a29682e86b4fd7a5a5a5d27c55687b3b2d02e67c4f942250379e3bf0ff89764736f6c634300060c0033",
                "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD7D DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x918C2BBD EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xAA9EA72A EQ PUSH2 0x65 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0x99D JUMP JUMPDEST PUSH2 0x78 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C SWAP3 SWAP2 SWAP1 PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH2 0x73 CALLDATASIZE PUSH1 0x4 PUSH2 0x99D JUMP JUMPDEST PUSH2 0x258 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH2 0x86 DUP5 DUP7 PUSH2 0x343 JUMP JUMPDEST DUP3 MLOAD DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xC9 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP2 POP PUSH2 0xD8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x382 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP2 SWAP5 POP PUSH1 0x60 SWAP2 SWAP1 DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xFB PUSH2 0x7A9 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xF3 JUMPI SWAP1 POP POP SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 ISZERO ISZERO DUP2 MSTORE POP DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x14C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x24C JUMPI DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9881FCB4 DUP8 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x17D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A3 SWAP3 SWAP2 SWAP1 PUSH2 0xC70 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1CF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x1F7 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x960 JUMP JUMPDEST PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x203 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x217 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x22F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x244 JUMPI PUSH2 0x24C JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x15A JUMP JUMPDEST POP POP POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH2 0x266 DUP5 DUP7 PUSH2 0x343 JUMP JUMPDEST PUSH2 0x272 DUP7 DUP6 DUP8 DUP7 PUSH2 0x382 JUMP JUMPDEST SWAP2 POP PUSH2 0x338 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP9 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2C3 SWAP3 SWAP2 SWAP1 PUSH2 0xC1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x318 SWAP3 SWAP2 SWAP1 PUSH2 0xC1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x427 DUP2 MSTORE POP DUP5 PUSH2 0x53D JUMP JUMPDEST SWAP1 POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x37E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x375 SWAP1 PUSH2 0xC38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH4 0x5E1E6325 DUP5 PUSH1 0x0 NOT DUP5 ADD DUP5 DUP2 LT PUSH2 0x3A5 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xC48 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3F8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x41C SWAP2 SWAP1 PUSH2 0xA50 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x432 PUSH2 0x7A9 JUMP JUMPDEST DUP6 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x446 SWAP2 SWAP1 PUSH2 0xA16 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP3 SWAP5 POP SWAP1 SWAP3 POP PUSH1 0x60 SWAP2 SWAP1 DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x46C PUSH2 0x7A9 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x464 JUMPI SWAP1 POP POP SWAP1 POP DUP2 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x48F JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x40 MLOAD PUSH4 0x26207F2D PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x9881FCB4 SWAP1 PUSH2 0x4C8 SWAP1 DUP9 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0xC70 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4F4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x51C SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x960 JUMP JUMPDEST PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x528 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP4 POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x557 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x581 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x593 JUMPI PUSH2 0x74B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5C4 DUP5 PUSH1 0x0 ADD MLOAD DUP6 PUSH1 0x20 ADD MLOAD DUP6 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x5AF JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x5D1 JUMPI POP PUSH2 0x74B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5EE DUP6 PUSH1 0x20 ADD MLOAD DUP7 PUSH1 0x0 ADD MLOAD DUP5 DUP9 PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x5FC JUMPI POP POP PUSH2 0x74B JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x747 JUMPI PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x6F0 JUMPI PUSH2 0x633 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x624 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP8 PUSH2 0x751 JUMP JUMPDEST SWAP5 POP DUP5 PUSH2 0x63F JUMPI PUSH2 0x6F0 JUMP JUMPDEST PUSH2 0x64E PUSH2 0x2715 PUSH2 0x2710 DUP8 PUSH2 0x751 JUMP JUMPDEST SWAP5 POP DUP5 PUSH2 0x65A JUMPI PUSH2 0x6F0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x677 DUP10 PUSH1 0x20 ADD MLOAD DUP11 PUSH1 0x0 ADD MLOAD DUP9 DUP13 PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x684 JUMPI POP PUSH2 0x6F0 JUMP JUMPDEST DUP1 SWAP5 POP DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x693 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 LT PUSH2 0x6E7 JUMPI DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x6AD JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2710 DUP10 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x6C4 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 SUB MUL DUP2 PUSH2 0x6D6 JUMPI INVALID JUMPDEST DIV SWAP3 POP PUSH1 0x5 DUP4 GT PUSH2 0x6E7 JUMPI POP PUSH2 0x6F0 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x60C JUMP JUMPDEST POP DUP1 ISZERO DUP1 PUSH2 0x6FE JUMPI POP PUSH1 0x5 DUP2 GT JUMPDEST ISZERO PUSH2 0x709 JUMPI POP PUSH2 0x747 JUMP JUMPDEST PUSH2 0x727 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x718 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP7 PUSH2 0x751 JUMP JUMPDEST DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x733 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE POP PUSH1 0x1 ADD PUSH2 0x5FF JUMP JUMPDEST POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 ISZERO DUP1 PUSH2 0x75E JUMPI POP DUP2 ISZERO JUMPDEST DUP1 PUSH2 0x767 JUMPI POP DUP3 ISZERO JUMPDEST ISZERO PUSH2 0x774 JUMPI POP PUSH1 0x0 PUSH2 0x536 JUMP JUMPDEST DUP4 DUP3 MUL DUP3 DUP6 DUP3 DUP2 PUSH2 0x781 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x791 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x536 JUMP JUMPDEST DUP4 PUSH1 0x1 DUP6 SUB DUP3 ADD DUP2 PUSH2 0x79F JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x74B DUP2 PUSH2 0xD15 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x74B DUP2 PUSH2 0xD15 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x7F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x803 PUSH2 0x7FE DUP3 PUSH2 0xCB7 JUMP JUMPDEST PUSH2 0xC90 JUMP JUMPDEST SWAP2 POP DUP2 DUP2 DUP4 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP2 ADD SWAP1 POP DUP4 DUP6 PUSH1 0x20 DUP5 MUL DUP3 ADD GT ISZERO PUSH2 0x828 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x854 JUMPI DUP2 PUSH2 0x83E DUP9 DUP3 PUSH2 0x94A JUMP JUMPDEST DUP5 MSTORE POP PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x82B JUMP JUMPDEST POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x86F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x87D PUSH2 0x7FE DUP3 PUSH2 0xCB7 JUMP JUMPDEST SWAP2 POP DUP2 DUP2 DUP4 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP2 ADD SWAP1 POP DUP4 DUP6 PUSH1 0x20 DUP5 MUL DUP3 ADD GT ISZERO PUSH2 0x8A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x854 JUMPI DUP2 PUSH2 0x8B8 DUP9 DUP3 PUSH2 0x955 JUMP JUMPDEST DUP5 MSTORE POP PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x8A5 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x74B DUP2 PUSH2 0xD2C JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x74B DUP2 PUSH2 0xD35 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x74B DUP2 PUSH2 0xD35 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x901 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x90B PUSH1 0x60 PUSH2 0xC90 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x919 DUP5 DUP5 PUSH2 0x7D4 JUMP JUMPDEST DUP3 MSTORE POP PUSH1 0x20 PUSH2 0x92A DUP5 DUP5 DUP4 ADD PUSH2 0x7D4 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x93E DUP5 DUP3 DUP6 ADD PUSH2 0x8CE JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x74B DUP2 PUSH2 0xD3E JUMP JUMPDEST DUP1 MLOAD PUSH2 0x74B DUP2 PUSH2 0xD3E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x972 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x989 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x995 DUP5 DUP3 DUP6 ADD PUSH2 0x85E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x9B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x9BF DUP8 DUP8 PUSH2 0x8D9 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x9D0 DUP8 DUP3 DUP9 ADD PUSH2 0x7C9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x9E1 DUP8 DUP3 DUP9 ADD PUSH2 0x7C9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0A DUP8 DUP3 DUP9 ADD PUSH2 0x7DF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x80 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA35 DUP6 DUP6 PUSH2 0x8E4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xA46 DUP6 DUP3 DUP7 ADD PUSH2 0x8EF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA6F DUP6 DUP6 PUSH2 0x955 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xA46 DUP6 DUP3 DUP7 ADD PUSH2 0x8CE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA8C DUP4 DUP4 PUSH2 0xBB7 JUMP JUMPDEST POP POP PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAA0 DUP4 DUP4 PUSH2 0xBF4 JUMP JUMPDEST POP POP PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0xAB1 DUP2 PUSH2 0xCEB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAC2 DUP3 PUSH2 0xCDE JUMP JUMPDEST PUSH2 0xACC DUP2 DUP6 PUSH2 0xCE2 JUMP JUMPDEST SWAP4 POP PUSH2 0xAD7 DUP4 PUSH2 0xCD8 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB05 JUMPI DUP2 MLOAD PUSH2 0xAEF DUP9 DUP3 PUSH2 0xA80 JUMP JUMPDEST SWAP8 POP PUSH2 0xAFA DUP4 PUSH2 0xCD8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 ADD PUSH2 0xADB JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB1B DUP3 PUSH2 0xCDE JUMP JUMPDEST PUSH2 0xB25 DUP2 DUP6 PUSH2 0xCE2 JUMP JUMPDEST SWAP4 POP PUSH2 0xB30 DUP4 PUSH2 0xCD8 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB05 JUMPI DUP2 MLOAD PUSH2 0xB48 DUP9 DUP3 PUSH2 0xA94 JUMP JUMPDEST SWAP8 POP PUSH2 0xB53 DUP4 PUSH2 0xCD8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 ADD PUSH2 0xB34 JUMP JUMPDEST PUSH2 0xAB1 DUP2 PUSH2 0xCF6 JUMP JUMPDEST PUSH2 0xAB1 DUP2 PUSH2 0xCFB JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB7D PUSH1 0x25 DUP4 PUSH2 0xCE2 JUMP JUMPDEST PUSH32 0x455243323042726964676553616D706C65722F494E56414C49445F544F4B454E DUP2 MSTORE PUSH5 0x2FA820A4A9 PUSH1 0xD9 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x60 DUP4 ADD SWAP1 PUSH2 0xBC8 DUP5 DUP3 PUSH2 0xAA8 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0xBDB PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0xAA8 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0xBEE PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0xB5E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xAB1 DUP2 PUSH2 0xD12 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0xC0B DUP3 DUP6 PUSH2 0xB5E JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x995 DUP2 DUP5 PUSH2 0xB10 JUMP JUMPDEST PUSH1 0x80 DUP2 ADD PUSH2 0xC2B DUP3 DUP6 PUSH2 0xB67 JUMP JUMPDEST PUSH2 0x536 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xBB7 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x74B DUP2 PUSH2 0xB70 JUMP JUMPDEST PUSH1 0x60 DUP2 ADD PUSH2 0xC56 DUP3 DUP7 PUSH2 0xBF4 JUMP JUMPDEST PUSH2 0xC63 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xAA8 JUMP JUMPDEST PUSH2 0x995 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xAA8 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0xC7E DUP3 DUP6 PUSH2 0xBF4 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x995 DUP2 DUP5 PUSH2 0xAB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xCAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xCCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 SWAP1 DUP2 MUL ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x74B DUP3 PUSH2 0xD06 JUMP JUMPDEST ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x74B DUP3 PUSH2 0xCEB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xD1E DUP2 PUSH2 0xCEB JUMP JUMPDEST DUP2 EQ PUSH2 0xD29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xD1E DUP2 PUSH2 0xCF6 JUMP JUMPDEST PUSH2 0xD1E DUP2 PUSH2 0xCFB JUMP JUMPDEST PUSH2 0xD1E DUP2 PUSH2 0xD12 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 PUSH11 0x29682E86B4FD7A5A5A5D27 0xC5 JUMP DUP8 0xB3 0xB2 0xD0 0x2E PUSH8 0xC4F942250379E3BF 0xF 0xF8 SWAP8 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
                "sourceMap": "1154:4411:40:-:0;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
                "immutableReferences": {},
                "linkReferences": {},
                "object": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c8063918c2bbd1461003b578063aa9ea72a14610065575b600080fd5b61004e61004936600461099d565b610078565b60405161005c929190610bfd565b60405180910390f35b61004e61007336600461099d565b610258565b600060606100868486610343565b82518067ffffffffffffffff8111801561009f57600080fd5b506040519080825280602002602001820160405280156100c9578160200160208202803683370190505b5091506100d887878787610382565b60408051600180825281830190925291945060609190816020015b6100fb6107a9565b8152602001906001900390816100f35790505090506040518060600160405280886001600160a01b03168152602001876001600160a01b031681526020018515158152508160008151811061014c57fe5b602002602001018190525060005b8281101561024c57886001600160a01b0316639881fcb487838151811061017d57fe5b6020026020010151846040518363ffffffff1660e01b81526004016101a3929190610c70565b60006040518083038186803b1580156101bb57600080fd5b505afa1580156101cf573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526101f79190810190610960565b60018151811061020357fe5b602002602001015184828151811061021757fe5b60200260200101818152505083818151811061022f57fe5b6020026020010151600014156102445761024c565b60010161015a565b50505094509492505050565b600060606102668486610343565b61027286858786610382565b91506103386040518060600160405280886040518060600160405280896001600160a01b031681526020018a6001600160a01b031681526020018715158152506040516020016102c3929190610c1d565b60405160208183030381529060405281526020018860405180606001604052808a6001600160a01b03168152602001896001600160a01b03168152602001871515815250604051602001610318929190610c1d565b60405160208183030381529060405281526020016104278152508461053d565b905094509492505050565b806001600160a01b0316826001600160a01b0316141561037e5760405162461bcd60e51b815260040161037590610c38565b60405180910390fd5b5050565b80516000906001600160a01b038616635e1e63258460001984018481106103a557fe5b602002602001015187876040518463ffffffff1660e01b81526004016103cd93929190610c48565b604080518083038186803b1580156103e457600080fd5b505afa1580156103f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041c9190610a50565b979650505050505050565b6000806104326107a9565b858060200190518101906104469190610a16565b60408051600180825281830190925292945090925060609190816020015b61046c6107a9565b815260200190600190039081610464579050509050818160008151811061048f57fe5b60209081029190910101526040516326207f2d60e21b81526001600160a01b03841690639881fcb4906104c89088908590600401610c70565b60006040518083038186803b1580156104e057600080fd5b505afa1580156104f4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261051c9190810190610960565b60018151811061052857fe5b602002602001015193505050505b9392505050565b6060815167ffffffffffffffff8111801561055757600080fd5b50604051908082528060200260200182016040528015610581578160200160208202803683370190505b5090508151600014156105935761074b565b60006105c484600001518560200151856000815181106105af57fe5b6020026020010151876040015163ffffffff16565b9050806105d1575061074b565b60006105ee8560200151866000015184886040015163ffffffff16565b9050806105fc57505061074b565b60005b8451811015610747576000805b60058110156106f05761063387848151811061062457fe5b60200260200101518587610751565b94508461063f576106f0565b61064e61271561271087610751565b94508461065a576106f0565b600061067789602001518a60000151888c6040015163ffffffff16565b90508061068457506106f0565b80945087848151811061069357fe5b602002602001015185106106e7578784815181106106ad57fe5b60200260200101516127108986815181106106c457fe5b6020026020010151870302816106d657fe5b049250600583116106e757506106f0565b5060010161060c565b508015806106fe5750600581115b156107095750610747565b61072786838151811061071857fe5b60200260200101518486610751565b85838151811061073357fe5b6020908102919091010152506001016105ff565b5050505b92915050565b600083158061075e575081155b80610767575082155b1561077457506000610536565b8382028285828161078157fe5b0414610791576000915050610536565b836001850382018161079f57fe5b0495945050505050565b604080516060810182526000808252602082018190529181019190915290565b803561074b81610d15565b805161074b81610d15565b600082601f8301126107f057600080fd5b81356108036107fe82610cb7565b610c90565b9150818183526020840193506020810190508385602084028201111561082857600080fd5b60005b83811015610854578161083e888261094a565b845250602092830192919091019060010161082b565b5050505092915050565b600082601f83011261086f57600080fd5b815161087d6107fe82610cb7565b915081818352602084019350602081019050838560208402820111156108a257600080fd5b60005b8381101561085457816108b88882610955565b84525060209283019291909101906001016108a5565b805161074b81610d2c565b803561074b81610d35565b805161074b81610d35565b60006060828403121561090157600080fd5b61090b6060610c90565b9050600061091984846107d4565b825250602061092a848483016107d4565b602083015250604061093e848285016108ce565b60408301525092915050565b803561074b81610d3e565b805161074b81610d3e565b60006020828403121561097257600080fd5b815167ffffffffffffffff81111561098957600080fd5b6109958482850161085e565b949350505050565b600080600080608085870312156109b357600080fd5b60006109bf87876108d9565b94505060206109d0878288016107c9565b93505060406109e1878288016107c9565b925050606085013567ffffffffffffffff8111156109fe57600080fd5b610a0a878288016107df565b91505092959194509250565b60008060808385031215610a2957600080fd5b6000610a3585856108e4565b9250506020610a46858286016108ef565b9150509250929050565b60008060408385031215610a6357600080fd5b6000610a6f8585610955565b9250506020610a46858286016108ce565b6000610a8c8383610bb7565b505060600190565b6000610aa08383610bf4565b505060200190565b610ab181610ceb565b82525050565b6000610ac282610cde565b610acc8185610ce2565b9350610ad783610cd8565b8060005b83811015610b05578151610aef8882610a80565b9750610afa83610cd8565b925050600101610adb565b509495945050505050565b6000610b1b82610cde565b610b258185610ce2565b9350610b3083610cd8565b8060005b83811015610b05578151610b488882610a94565b9750610b5383610cd8565b925050600101610b34565b610ab181610cf6565b610ab181610cfb565b6000610b7d602583610ce2565b7f455243323042726964676553616d706c65722f494e56414c49445f544f4b454e8152642fa820a4a960d91b602082015260400192915050565b80516060830190610bc88482610aa8565b506020820151610bdb6020850182610aa8565b506040820151610bee6040850182610b5e565b50505050565b610ab181610d12565b60408101610c0b8285610b5e565b81810360208301526109958184610b10565b60808101610c2b8285610b67565b6105366020830184610bb7565b6020808252810161074b81610b70565b60608101610c568286610bf4565b610c636020830185610aa8565b6109956040830184610aa8565b60408101610c7e8285610bf4565b81810360208301526109958184610ab7565b60405181810167ffffffffffffffff81118282101715610caf57600080fd5b604052919050565b600067ffffffffffffffff821115610cce57600080fd5b5060209081020190565b60200190565b5190565b90815260200190565b600061074b82610d06565b151590565b600061074b82610ceb565b6001600160a01b031690565b90565b610d1e81610ceb565b8114610d2957600080fd5b50565b610d1e81610cf6565b610d1e81610cfb565b610d1e81610d1256fea2646970667358221220266a29682e86b4fd7a5a5a5d27c55687b3b2d02e67c4f942250379e3bf0ff89764736f6c634300060c0033",
                "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x918C2BBD EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xAA9EA72A EQ PUSH2 0x65 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0x99D JUMP JUMPDEST PUSH2 0x78 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C SWAP3 SWAP2 SWAP1 PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH2 0x73 CALLDATASIZE PUSH1 0x4 PUSH2 0x99D JUMP JUMPDEST PUSH2 0x258 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH2 0x86 DUP5 DUP7 PUSH2 0x343 JUMP JUMPDEST DUP3 MLOAD DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x9F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xC9 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP2 POP PUSH2 0xD8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x382 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP2 SWAP5 POP PUSH1 0x60 SWAP2 SWAP1 DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xFB PUSH2 0x7A9 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xF3 JUMPI SWAP1 POP POP SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 ISZERO ISZERO DUP2 MSTORE POP DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x14C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x24C JUMPI DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9881FCB4 DUP8 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x17D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A3 SWAP3 SWAP2 SWAP1 PUSH2 0xC70 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1CF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x1F7 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x960 JUMP JUMPDEST PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x203 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x217 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x22F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x244 JUMPI PUSH2 0x24C JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x15A JUMP JUMPDEST POP POP POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH2 0x266 DUP5 DUP7 PUSH2 0x343 JUMP JUMPDEST PUSH2 0x272 DUP7 DUP6 DUP8 DUP7 PUSH2 0x382 JUMP JUMPDEST SWAP2 POP PUSH2 0x338 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP9 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2C3 SWAP3 SWAP2 SWAP1 PUSH2 0xC1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x318 SWAP3 SWAP2 SWAP1 PUSH2 0xC1D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x427 DUP2 MSTORE POP DUP5 PUSH2 0x53D JUMP JUMPDEST SWAP1 POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x37E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x375 SWAP1 PUSH2 0xC38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH4 0x5E1E6325 DUP5 PUSH1 0x0 NOT DUP5 ADD DUP5 DUP2 LT PUSH2 0x3A5 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3CD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xC48 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3F8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x41C SWAP2 SWAP1 PUSH2 0xA50 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x432 PUSH2 0x7A9 JUMP JUMPDEST DUP6 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x446 SWAP2 SWAP1 PUSH2 0xA16 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP3 SWAP5 POP SWAP1 SWAP3 POP PUSH1 0x60 SWAP2 SWAP1 DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x46C PUSH2 0x7A9 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x464 JUMPI SWAP1 POP POP SWAP1 POP DUP2 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x48F JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH1 0x40 MLOAD PUSH4 0x26207F2D PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x9881FCB4 SWAP1 PUSH2 0x4C8 SWAP1 DUP9 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0xC70 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4F4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x51C SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x960 JUMP JUMPDEST PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x528 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP4 POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x557 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x581 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x593 JUMPI PUSH2 0x74B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5C4 DUP5 PUSH1 0x0 ADD MLOAD DUP6 PUSH1 0x20 ADD MLOAD DUP6 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x5AF JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x5D1 JUMPI POP PUSH2 0x74B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5EE DUP6 PUSH1 0x20 ADD MLOAD DUP7 PUSH1 0x0 ADD MLOAD DUP5 DUP9 PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x5FC JUMPI POP POP PUSH2 0x74B JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x747 JUMPI PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x5 DUP2 LT ISZERO PUSH2 0x6F0 JUMPI PUSH2 0x633 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x624 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP8 PUSH2 0x751 JUMP JUMPDEST SWAP5 POP DUP5 PUSH2 0x63F JUMPI PUSH2 0x6F0 JUMP JUMPDEST PUSH2 0x64E PUSH2 0x2715 PUSH2 0x2710 DUP8 PUSH2 0x751 JUMP JUMPDEST SWAP5 POP DUP5 PUSH2 0x65A JUMPI PUSH2 0x6F0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x677 DUP10 PUSH1 0x20 ADD MLOAD DUP11 PUSH1 0x0 ADD MLOAD DUP9 DUP13 PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x684 JUMPI POP PUSH2 0x6F0 JUMP JUMPDEST DUP1 SWAP5 POP DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x693 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 LT PUSH2 0x6E7 JUMPI DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x6AD JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2710 DUP10 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x6C4 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 SUB MUL DUP2 PUSH2 0x6D6 JUMPI INVALID JUMPDEST DIV SWAP3 POP PUSH1 0x5 DUP4 GT PUSH2 0x6E7 JUMPI POP PUSH2 0x6F0 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x60C JUMP JUMPDEST POP DUP1 ISZERO DUP1 PUSH2 0x6FE JUMPI POP PUSH1 0x5 DUP2 GT JUMPDEST ISZERO PUSH2 0x709 JUMPI POP PUSH2 0x747 JUMP JUMPDEST PUSH2 0x727 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x718 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP5 DUP7 PUSH2 0x751 JUMP JUMPDEST DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x733 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE POP PUSH1 0x1 ADD PUSH2 0x5FF JUMP JUMPDEST POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 ISZERO DUP1 PUSH2 0x75E JUMPI POP DUP2 ISZERO JUMPDEST DUP1 PUSH2 0x767 JUMPI POP DUP3 ISZERO JUMPDEST ISZERO PUSH2 0x774 JUMPI POP PUSH1 0x0 PUSH2 0x536 JUMP JUMPDEST DUP4 DUP3 MUL DUP3 DUP6 DUP3 DUP2 PUSH2 0x781 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x791 JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x536 JUMP JUMPDEST DUP4 PUSH1 0x1 DUP6 SUB DUP3 ADD DUP2 PUSH2 0x79F JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x74B DUP2 PUSH2 0xD15 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x74B DUP2 PUSH2 0xD15 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x7F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x803 PUSH2 0x7FE DUP3 PUSH2 0xCB7 JUMP JUMPDEST PUSH2 0xC90 JUMP JUMPDEST SWAP2 POP DUP2 DUP2 DUP4 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP2 ADD SWAP1 POP DUP4 DUP6 PUSH1 0x20 DUP5 MUL DUP3 ADD GT ISZERO PUSH2 0x828 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x854 JUMPI DUP2 PUSH2 0x83E DUP9 DUP3 PUSH2 0x94A JUMP JUMPDEST DUP5 MSTORE POP PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x82B JUMP JUMPDEST POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x86F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x87D PUSH2 0x7FE DUP3 PUSH2 0xCB7 JUMP JUMPDEST SWAP2 POP DUP2 DUP2 DUP4 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP2 ADD SWAP1 POP DUP4 DUP6 PUSH1 0x20 DUP5 MUL DUP3 ADD GT ISZERO PUSH2 0x8A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x854 JUMPI DUP2 PUSH2 0x8B8 DUP9 DUP3 PUSH2 0x955 JUMP JUMPDEST DUP5 MSTORE POP PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x8A5 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x74B DUP2 PUSH2 0xD2C JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x74B DUP2 PUSH2 0xD35 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x74B DUP2 PUSH2 0xD35 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x901 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x90B PUSH1 0x60 PUSH2 0xC90 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x919 DUP5 DUP5 PUSH2 0x7D4 JUMP JUMPDEST DUP3 MSTORE POP PUSH1 0x20 PUSH2 0x92A DUP5 DUP5 DUP4 ADD PUSH2 0x7D4 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x93E DUP5 DUP3 DUP6 ADD PUSH2 0x8CE JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x74B DUP2 PUSH2 0xD3E JUMP JUMPDEST DUP1 MLOAD PUSH2 0x74B DUP2 PUSH2 0xD3E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x972 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x989 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x995 DUP5 DUP3 DUP6 ADD PUSH2 0x85E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x9B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x9BF DUP8 DUP8 PUSH2 0x8D9 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x9D0 DUP8 DUP3 DUP9 ADD PUSH2 0x7C9 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x9E1 DUP8 DUP3 DUP9 ADD PUSH2 0x7C9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA0A DUP8 DUP3 DUP9 ADD PUSH2 0x7DF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x80 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA35 DUP6 DUP6 PUSH2 0x8E4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xA46 DUP6 DUP3 DUP7 ADD PUSH2 0x8EF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA6F DUP6 DUP6 PUSH2 0x955 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xA46 DUP6 DUP3 DUP7 ADD PUSH2 0x8CE JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA8C DUP4 DUP4 PUSH2 0xBB7 JUMP JUMPDEST POP POP PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAA0 DUP4 DUP4 PUSH2 0xBF4 JUMP JUMPDEST POP POP PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0xAB1 DUP2 PUSH2 0xCEB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAC2 DUP3 PUSH2 0xCDE JUMP JUMPDEST PUSH2 0xACC DUP2 DUP6 PUSH2 0xCE2 JUMP JUMPDEST SWAP4 POP PUSH2 0xAD7 DUP4 PUSH2 0xCD8 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB05 JUMPI DUP2 MLOAD PUSH2 0xAEF DUP9 DUP3 PUSH2 0xA80 JUMP JUMPDEST SWAP8 POP PUSH2 0xAFA DUP4 PUSH2 0xCD8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 ADD PUSH2 0xADB JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB1B DUP3 PUSH2 0xCDE JUMP JUMPDEST PUSH2 0xB25 DUP2 DUP6 PUSH2 0xCE2 JUMP JUMPDEST SWAP4 POP PUSH2 0xB30 DUP4 PUSH2 0xCD8 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB05 JUMPI DUP2 MLOAD PUSH2 0xB48 DUP9 DUP3 PUSH2 0xA94 JUMP JUMPDEST SWAP8 POP PUSH2 0xB53 DUP4 PUSH2 0xCD8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 ADD PUSH2 0xB34 JUMP JUMPDEST PUSH2 0xAB1 DUP2 PUSH2 0xCF6 JUMP JUMPDEST PUSH2 0xAB1 DUP2 PUSH2 0xCFB JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB7D PUSH1 0x25 DUP4 PUSH2 0xCE2 JUMP JUMPDEST PUSH32 0x455243323042726964676553616D706C65722F494E56414C49445F544F4B454E DUP2 MSTORE PUSH5 0x2FA820A4A9 PUSH1 0xD9 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x60 DUP4 ADD SWAP1 PUSH2 0xBC8 DUP5 DUP3 PUSH2 0xAA8 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0xBDB PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0xAA8 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0xBEE PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0xB5E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xAB1 DUP2 PUSH2 0xD12 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0xC0B DUP3 DUP6 PUSH2 0xB5E JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x995 DUP2 DUP5 PUSH2 0xB10 JUMP JUMPDEST PUSH1 0x80 DUP2 ADD PUSH2 0xC2B DUP3 DUP6 PUSH2 0xB67 JUMP JUMPDEST PUSH2 0x536 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xBB7 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x74B DUP2 PUSH2 0xB70 JUMP JUMPDEST PUSH1 0x60 DUP2 ADD PUSH2 0xC56 DUP3 DUP7 PUSH2 0xBF4 JUMP JUMPDEST PUSH2 0xC63 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xAA8 JUMP JUMPDEST PUSH2 0x995 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xAA8 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD PUSH2 0xC7E DUP3 DUP6 PUSH2 0xBF4 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x995 DUP2 DUP5 PUSH2 0xAB7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xCAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xCCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 SWAP1 DUP2 MUL ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x74B DUP3 PUSH2 0xD06 JUMP JUMPDEST ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x74B DUP3 PUSH2 0xCEB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xD1E DUP2 PUSH2 0xCEB JUMP JUMPDEST DUP2 EQ PUSH2 0xD29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xD1E DUP2 PUSH2 0xCF6 JUMP JUMPDEST PUSH2 0xD1E DUP2 PUSH2 0xCFB JUMP JUMPDEST PUSH2 0xD1E DUP2 PUSH2 0xD12 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 PUSH11 0x29682E86B4FD7A5A5A5D27 0xC5 JUMP DUP8 0xB3 0xB2 0xD0 0x2E PUSH8 0xC4F942250379E3BF 0xF 0xF8 SWAP8 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
                "sourceMap": "1154:4411:40:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1711:1083;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;3261:1020;;;;;;:::i;:::-;;:::i;1711:1083::-;1905:11;1918:34;1964:40;1981:10;1993;1964:16;:40::i;:::-;2035:24;;;2089:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2089:25:40;;2069:45;;2284:78;2312:6;2320:10;2332;2344:17;2284:27;:78::i;:::-;2400:18;;;2416:1;2400:18;;;;;;;;;2275:87;;-1:-1:-1;2372:25:40;;2400:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2372:46;;2440:63;;;;;;;;2458:10;-1:-1:-1;;;;;2440:63:40;;;;;2474:10;-1:-1:-1;;;;;2440:63:40;;;;;2494:6;2440:63;;;;;2428:6;2435:1;2428:9;;;;;;;;;;;;;:75;;;;2519:9;2514:274;2538:10;2534:1;:14;2514:274;;;2592:6;-1:-1:-1;;;;;2592:20:40;;2613:17;2631:1;2613:20;;;;;;;;;;;;;;2635:6;2592:50;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2592:50:40;;;;;;;;;;;;:::i;:::-;2643:1;2592:53;;;;;;;;;;;;;;2569:17;2587:1;2569:20;;;;;;;;;;;;;:76;;;;;2713:17;2731:1;2713:20;;;;;;;;;;;;;;2737:1;2713:25;2709:69;;;2758:5;;2709:69;2550:3;;2514:274;;;;1711:1083;;;;;;;;;:::o;3261:1020::-;3454:11;3467:34;3513:40;3530:10;3542;3513:16;:40::i;:::-;3734:78;3762:6;3770:10;3782;3794:17;3734:27;:78::i;:::-;3725:87;;3843:431;3879:354;;;;;;;;4065:6;4073:63;;;;;;;;4091:10;-1:-1:-1;;;;;4073:63:40;;;;;4107:10;-1:-1:-1;;;;;4073:63:40;;;;;4127:6;4073:63;;;;;4054:83;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3879:354;;;;3948:6;3956:63;;;;;;;;3974:10;-1:-1:-1;;;;;3956:63:40;;;;;3990:10;-1:-1:-1;;;;;3956:63:40;;;;;4010:6;3956:63;;;;;3937:83;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3879:354;;;;4177:41;3879:354;;;4247:17;3843:22;:431::i;:::-;3823:451;;3261:1020;;;;;;;:::o;1509:191:32:-;1641:10;-1:-1:-1;;;;;1627:24:32;:10;-1:-1:-1;;;;;1627:24:32;;;1619:74;;;;-1:-1:-1;;;1619:74:32;;;;;;;:::i;:::-;;;;;;;;;1509:191;;:::o;5188:375:40:-;5431:24;;5387:11;;-1:-1:-1;;;;;5478:19:40;;;5431:17;-1:-1:-1;;5516:14:40;;5498:33;;;;;;;;;;;;;5533:10;5545;5478:78;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5465:91;5188:375;-1:-1:-1;;;;;;;5188:375:40:o;4287:467::-;4475:7;4495:23;4520:22;;:::i;:::-;4557:14;4546:57;;;;;;;;;;;;:::i;:::-;4642:18;;;4658:1;4642:18;;;;;;;;;4494:109;;-1:-1:-1;4494:109:40;;-1:-1:-1;4614:25:40;;4642:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;4614:46;;4682:5;4670:6;4677:1;4670:9;;;;;;;;;;;;;;;;;:17;4704:40;;-1:-1:-1;;;4704:40:40;;-1:-1:-1;;;;;4704:20:40;;;;;:40;;4725:10;;4737:6;;4704:40;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4704:40:40;;;;;;;;;;;;:::i;:::-;4745:1;4704:43;;;;;;;;;;;;;;4697:50;;;;;4287:467;;;;;;:::o;1691:3088:9:-;1865:34;1949:17;:24;1935:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1935:39:9;;1915:59;;1988:17;:24;2016:1;1988:29;1984:84;;;2033:24;;1984:84;2078:18;2099:135;2138:4;:19;;;2171:4;:19;;;2204:17;2222:1;2204:20;;;;;;;;;;;;;;2099:4;:25;;;:135;;:::i;:::-;2078:156;-1:-1:-1;2248:15:9;2244:70;;2279:24;;;2244:70;2324:17;2344:125;2383:4;:19;;;2416:4;:19;;;2449:10;2344:4;:25;;;:125;;:::i;:::-;2324:145;-1:-1:-1;2483:14:9;2479:69;;2513:24;;;;2479:69;2563:9;2558:2215;2582:17;:24;2578:1;:28;2558:2215;;;2627:11;2661:12;2656:1596;1683:1;2679:4;:37;2656:1596;;;2852:148;2899:17;2917:1;2899:20;;;;;;;;;;;;;;2941:9;2972:10;2852:25;:148::i;:::-;2839:161;-1:-1:-1;3022:15:9;3018:67;;3061:5;;3018:67;3115:202;3163:59;1378:3;3289:10;3115:25;:202::i;:::-;3102:215;-1:-1:-1;3339:15:9;3335:67;;3378:5;;3335:67;3419:18;3440:157;3487:4;:19;;;3528:4;:19;;;3569:10;3440:4;:25;;;:157;;:::i;:::-;3419:178;-1:-1:-1;3619:15:9;3615:67;;3658:5;;;3615:67;3815:10;3803:22;;3917:17;3935:1;3917:20;;;;;;;;;;;;;;3904:9;:33;3900:338;;4077:17;4095:1;4077:20;;;;;;;;;;;;;;1378:3;4004:17;4022:1;4004:20;;;;;;;;;;;;;;3992:9;:32;3991:59;:106;;;;;;3961:136;;1536:8;4123:3;:41;4119:101;;4192:5;;;4119:101;-1:-1:-1;2718:6:9;;2656:1596;;;-1:-1:-1;4269:8:9;;;:52;;;1536:8;4281:3;:40;4269:52;4265:96;;;4341:5;;;4265:96;4630:132;4673:17;4691:1;4673:20;;;;;;;;;;;;;;4711:9;4738:10;4630:25;:132::i;:::-;4607:17;4625:1;4607:20;;;;;;;;;;;;;;;;;:155;-1:-1:-1;2608:3:9;;2558:2215;;;;1691:3088;;;;;;;:::o;4785:416::-;4953:21;4994:14;;;:29;;-1:-1:-1;5012:11:9;;4994:29;:49;;;-1:-1:-1;5027:16:9;;4994:49;4990:63;;;-1:-1:-1;5052:1:9;5045:8;;4990:63;5075:18;;;5087:6;5075:9;:18;:9;5107:13;;;;;:23;5103:37;;5139:1;5132:8;;;;;5103:37;5183:11;5177:1;5163:11;:15;5158:1;:21;5157:37;;;;;;;4785:416;-1:-1:-1;;;;;4785:416:9:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130::-;72:20;;97:33;72:20;97:33;:::i;142:134::-;220:13;;238:33;220:13;238:33;:::i;301:707::-;;418:3;411:4;403:6;399:17;395:27;385:2;;436:1;433;426:12;385:2;473:6;460:20;495:80;510:64;567:6;510:64;:::i;:::-;495:80;:::i;:::-;486:89;;592:5;617:6;610:5;603:21;647:4;639:6;635:17;625:27;;669:4;664:3;660:14;653:21;;722:6;769:3;761:4;753:6;749:17;744:3;740:27;737:36;734:2;;;786:1;783;776:12;734:2;811:1;796:206;821:6;818:1;815:13;796:206;;;879:3;901:37;934:3;922:10;901:37;:::i;:::-;889:50;;-1:-1;962:4;953:14;;;;981;;;;;843:1;836:9;796:206;;;800:14;378:630;;;;;;;:::o;1034:722::-;;1162:3;1155:4;1147:6;1143:17;1139:27;1129:2;;1180:1;1177;1170:12;1129:2;1210:6;1204:13;1232:80;1247:64;1304:6;1247:64;:::i;1232:80::-;1223:89;;1329:5;1354:6;1347:5;1340:21;1384:4;1376:6;1372:17;1362:27;;1406:4;1401:3;1397:14;1390:21;;1459:6;1506:3;1498:4;1490:6;1486:17;1481:3;1477:27;1474:36;1471:2;;;1523:1;1520;1513:12;1471:2;1548:1;1533:217;1558:6;1555:1;1552:13;1533:217;;;1616:3;1638:48;1682:3;1670:10;1638:48;:::i;:::-;1626:61;;-1:-1;1710:4;1701:14;;;;1729;;;;;1580:1;1573:9;1533:217;;1764:128;1839:13;;1857:30;1839:13;1857:30;:::i;1899:182::-;1992:20;;2017:59;1992:20;2017:59;:::i;2088:186::-;2192:13;;2210:59;2192:13;2210:59;:::i;2304:655::-;;2432:4;2420:9;2415:3;2411:19;2407:30;2404:2;;;2450:1;2447;2440:12;2404:2;2468:20;2483:4;2468:20;:::i;:::-;2459:29;-1:-1;2538:1;2570:60;2626:3;2606:9;2570:60;:::i;:::-;2545:86;;-1:-1;2690:2;2723:60;2779:3;2755:22;;;2723:60;:::i;:::-;2716:4;2709:5;2705:16;2698:86;2652:143;2847:2;2880:57;2933:3;2924:6;2913:9;2909:22;2880:57;:::i;:::-;2873:4;2866:5;2862:16;2855:83;2805:144;2398:561;;;;:::o;2966:130::-;3033:20;;3058:33;3033:20;3058:33;:::i;3103:134::-;3181:13;;3199:33;3181:13;3199:33;:::i;3244:392::-;;3384:2;3372:9;3363:7;3359:23;3355:32;3352:2;;;3400:1;3397;3390:12;3352:2;3435:24;;3479:18;3468:30;;3465:2;;;3511:1;3508;3501:12;3465:2;3531:89;3612:7;3603:6;3592:9;3588:22;3531:89;:::i;:::-;3521:99;3346:290;-1:-1;;;;3346:290::o;3643:805::-;;;;;3849:3;3837:9;3828:7;3824:23;3820:33;3817:2;;;3866:1;3863;3856:12;3817:2;3901:1;3918:79;3989:7;3969:9;3918:79;:::i;:::-;3908:89;;3880:123;4034:2;4052:53;4097:7;4088:6;4077:9;4073:22;4052:53;:::i;:::-;4042:63;;4013:98;4142:2;4160:53;4205:7;4196:6;4185:9;4181:22;4160:53;:::i;:::-;4150:63;;4121:98;4278:2;4267:9;4263:18;4250:32;4302:18;4294:6;4291:30;4288:2;;;4334:1;4331;4324:12;4288:2;4354:78;4424:7;4415:6;4404:9;4400:22;4354:78;:::i;:::-;4344:88;;4229:209;3811:637;;;;;;;:::o;4455:508::-;;;4641:3;4629:9;4620:7;4616:23;4612:33;4609:2;;;4658:1;4655;4648:12;4609:2;4693:1;4710:90;4792:7;4772:9;4710:90;:::i;:::-;4700:100;;4672:134;4837:2;4855:92;4939:7;4930:6;4919:9;4915:22;4855:92;:::i;:::-;4845:102;;4816:137;4603:360;;;;;:::o;4970:393::-;;;5099:2;5087:9;5078:7;5074:23;5070:32;5067:2;;;5115:1;5112;5105:12;5067:2;5150:1;5167:64;5223:7;5203:9;5167:64;:::i;:::-;5157:74;;5129:108;5268:2;5286:61;5339:7;5330:6;5319:9;5315:22;5286:61;:::i;5371:285::-;;5514:102;5612:3;5604:6;5514:102;:::i;:::-;-1:-1;;5645:4;5636:14;;5507:149::o;5665:173::-;;5752:46;5794:3;5786:6;5752:46;:::i;:::-;-1:-1;;5827:4;5818:14;;5745:93::o;5846:103::-;5919:24;5937:5;5919:24;:::i;:::-;5914:3;5907:37;5901:48;;:::o;6125:914::-;;6326:82;6402:5;6326:82;:::i;:::-;6421:114;6528:6;6523:3;6421:114;:::i;:::-;6414:121;;6556:84;6634:5;6556:84;:::i;:::-;6660:7;6688:1;6673:344;6698:6;6695:1;6692:13;6673:344;;;6765:6;6759:13;6786:119;6901:3;6886:13;6786:119;:::i;:::-;6779:126;;6922:88;7003:6;6922:88;:::i;:::-;6912:98;-1:-1;;6720:1;6713:9;6673:344;;;-1:-1;7030:3;;6305:734;-1:-1;;;;;6305:734::o;7078:690::-;;7223:54;7271:5;7223:54;:::i;:::-;7290:86;7369:6;7364:3;7290:86;:::i;:::-;7283:93;;7397:56;7447:5;7397:56;:::i;:::-;7473:7;7501:1;7486:260;7511:6;7508:1;7505:13;7486:260;;;7578:6;7572:13;7599:63;7658:3;7643:13;7599:63;:::i;:::-;7592:70;;7679:60;7732:6;7679:60;:::i;:::-;7669:70;-1:-1;;7533:1;7526:9;7486:260;;7776:94;7843:21;7858:5;7843:21;:::i;7988:178::-;8097:63;8154:5;8097:63;:::i;8174:374::-;;8334:67;8398:2;8393:3;8334:67;:::i;:::-;8434:34;8414:55;;-1:-1;;;8498:2;8489:12;;8482:29;8539:2;8530:12;;8320:228;-1:-1;;8320:228::o;8599:620::-;8804:23;;8738:4;8729:14;;;8833:63;8733:3;8804:23;8833:63;:::i;:::-;8758:144;8973:4;8966:5;8962:16;8956:23;8985:63;9042:4;9037:3;9033:14;9019:12;8985:63;:::i;:::-;8912:142;9129:4;9122:5;9118:16;9112:23;9141:57;9192:4;9187:3;9183:14;9169:12;9141:57;:::i;:::-;9064:140;8711:508;;;:::o;9906:103::-;9979:24;9997:5;9979:24;:::i;10136:469::-;10335:2;10320:18;;10349:65;10324:9;10387:6;10349:65;:::i;:::-;10462:9;10456:4;10452:20;10447:2;10436:9;10432:18;10425:48;10487:108;10590:4;10581:6;10487:108;:::i;10612:498::-;10849:3;10834:19;;10864:97;10838:9;10934:6;10864:97;:::i;:::-;10972:128;11096:2;11085:9;11081:18;11072:6;10972:128;:::i;11117:416::-;11317:2;11331:47;;;11302:18;;11392:131;11302:18;11392:131;:::i;11540:444::-;11723:2;11708:18;;11737:71;11712:9;11781:6;11737:71;:::i;:::-;11819:72;11887:2;11876:9;11872:18;11863:6;11819:72;:::i;:::-;11902;11970:2;11959:9;11955:18;11946:6;11902:72;:::i;11991:593::-;12252:2;12237:18;;12266:71;12241:9;12310:6;12266:71;:::i;:::-;12385:9;12379:4;12375:20;12370:2;12359:9;12355:18;12348:48;12410:164;12569:4;12560:6;12410:164;:::i;12591:256::-;12653:2;12647:9;12679:17;;;12754:18;12739:34;;12775:22;;;12736:62;12733:2;;;12811:1;12808;12801:12;12733:2;12827;12820:22;12631:216;;-1:-1;12631:216::o;12854:304::-;;13013:18;13005:6;13002:30;12999:2;;;13045:1;13042;13035:12;12999:2;-1:-1;13080:4;13068:17;;;13133:15;;12936:222::o;13165:179::-;13317:4;13308:14;;13265:79::o;13509:165::-;13640:12;;13611:63::o;14084:206::-;14230:19;;;14279:4;14270:14;;14223:67::o;14657:91::-;;14719:24;14737:5;14719:24;:::i;14755:85::-;14821:13;14814:21;;14797:43::o;14847:117::-;;14935:24;14953:5;14935:24;:::i;14971:121::-;-1:-1;;;;;15033:54;;15016:76::o;15099:72::-;15161:5;15144:27::o;15499:117::-;15568:24;15586:5;15568:24;:::i;:::-;15561:5;15558:35;15548:2;;15607:1;15604;15597:12;15548:2;15542:74;:::o;15623:111::-;15689:21;15704:5;15689:21;:::i;15741:169::-;15836:50;15880:5;15836:50;:::i;15917:117::-;15986:24;16004:5;15986:24;:::i"
            }
        }
    },
    "sourceTreeHashHex": "0xe8fb87de5866f479d41bbd1b52ab3671f67a9c61495c74fa42b8a0dc77861051",
    "sources": {
        "./VelodromeSampler.sol": {
            "id": 40,
            "content": "// SPDX-License-Identifier: Apache-2.0\n/*\n\n  Copyright 2022 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.6;\npragma experimental ABIEncoderV2;\n\nimport './ApproximateBuys.sol';\nimport './SamplerUtils.sol';\n\nstruct VeloRoute {\n    address from;\n    address to;\n    bool stable;\n}\n\ninterface IVelodromeRouter {\n    function getAmountOut(\n        uint256 amountIn,\n        address tokenIn,\n        address tokenOut\n    ) external view returns (uint256 amount, bool stable);\n\n    function getAmountsOut(uint256 amountIn, VeloRoute[] calldata routes)\n        external\n        view\n        returns (uint256[] memory amounts);\n}\n\ncontract VelodromeSampler is SamplerUtils, ApproximateBuys {\n    /// @dev Sample sell quotes from Velodrome\n    /// @param router Address of Velodrome router.\n    /// @param takerToken Address of the taker token (what to sell).\n    /// @param makerToken Address of the maker token (what to buy).\n    /// @param takerTokenAmounts Taker token sell amount for each sample (sorted in ascending order).\n    /// @return stable Whether the pool is a stable pool (vs volatile).\n    /// @return makerTokenAmounts Maker amounts bought at each taker token amount.\n    function sampleSellsFromVelodrome(\n        IVelodromeRouter router,\n        address takerToken,\n        address makerToken,\n        uint256[] memory takerTokenAmounts\n    ) public view returns (bool stable, uint256[] memory makerTokenAmounts) {\n        _assertValidPair(makerToken, takerToken);\n        uint256 numSamples = takerTokenAmounts.length;\n        makerTokenAmounts = new uint256[](numSamples);\n\n        // Sampling should not mix stable and volatile pools.\n        // Find the most liquid pool based on max(takerTokenAmounts) and stick with it.\n        stable = _isMostLiquidPoolStablePool(router, takerToken, makerToken, takerTokenAmounts);\n        VeloRoute[] memory routes = new VeloRoute[](1);\n        routes[0] = VeloRoute({ from: takerToken, to: makerToken, stable: stable });\n\n        for (uint256 i = 0; i < numSamples; i++) {\n            makerTokenAmounts[i] = router.getAmountsOut(takerTokenAmounts[i], routes)[1];\n            // Break early if there are 0 amounts\n            if (makerTokenAmounts[i] == 0) {\n                break;\n            }\n        }\n    }\n\n    /// @dev Sample buy quotes from Velodrome.\n    /// @param router Address of Velodrome router.\n    /// @param takerToken Address of the taker token (what to sell).\n    /// @param makerToken Address of the maker token (what to buy).\n    /// @param makerTokenAmounts Maker token buy amount for each sample.\n    /// @return stable Whether the pool is a stable pool (vs volatile).\n    /// @return takerTokenAmounts Taker amounts sold at each maker token amount.\n    function sampleBuysFromVelodrome(\n        IVelodromeRouter router,\n        address takerToken,\n        address makerToken,\n        uint256[] memory makerTokenAmounts\n    ) public view returns (bool stable, uint256[] memory takerTokenAmounts) {\n        _assertValidPair(makerToken, takerToken);\n\n        // Sampling should not mix stable and volatile pools.\n        // Find the most liquid pool based on the reverse swap (maker -> taker) and stick with it.\n        stable = _isMostLiquidPoolStablePool(router, makerToken, takerToken, makerTokenAmounts);\n\n        takerTokenAmounts = _sampleApproximateBuys(\n            ApproximateBuyQuoteOpts({\n                takerTokenData: abi.encode(router, VeloRoute({ from: takerToken, to: makerToken, stable: stable })),\n                makerTokenData: abi.encode(router, VeloRoute({ from: makerToken, to: takerToken, stable: stable })),\n                getSellQuoteCallback: _sampleSellForApproximateBuyFromVelodrome\n            }),\n            makerTokenAmounts\n        );\n    }\n\n    function _sampleSellForApproximateBuyFromVelodrome(\n        bytes memory takerTokenData,\n        bytes memory, /* makerTokenData */\n        uint256 sellAmount\n    ) internal view returns (uint256) {\n        (IVelodromeRouter router, VeloRoute memory route) = abi.decode(takerTokenData, (IVelodromeRouter, VeloRoute));\n\n        VeloRoute[] memory routes = new VeloRoute[](1);\n        routes[0] = route;\n        return router.getAmountsOut(sellAmount, routes)[1];\n    }\n\n    /// @dev Returns whether the most liquid pool is a stable pool.\n    /// @param router Address of Velodrome router.\n    /// @param takerToken Address of the taker token (what to sell).\n    /// @param makerToken Address of the maker token (what to buy).\n    /// @param takerTokenAmounts Taker token buy amount for each sample (sorted in ascending order)\n    /// @return stable Whether the pool is a stable pool (vs volatile).\n    function _isMostLiquidPoolStablePool(\n        IVelodromeRouter router,\n        address takerToken,\n        address makerToken,\n        uint256[] memory takerTokenAmounts\n    ) internal view returns (bool stable) {\n        uint256 numSamples = takerTokenAmounts.length;\n        (, stable) = router.getAmountOut(takerTokenAmounts[numSamples - 1], takerToken, makerToken);\n    }\n}\n"
        }
    },
    "sourceCodes": {
        "./VelodromeSampler.sol": "// SPDX-License-Identifier: Apache-2.0\n/*\n\n  Copyright 2022 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.6;\npragma experimental ABIEncoderV2;\n\nimport './ApproximateBuys.sol';\nimport './SamplerUtils.sol';\n\nstruct VeloRoute {\n    address from;\n    address to;\n    bool stable;\n}\n\ninterface IVelodromeRouter {\n    function getAmountOut(\n        uint256 amountIn,\n        address tokenIn,\n        address tokenOut\n    ) external view returns (uint256 amount, bool stable);\n\n    function getAmountsOut(uint256 amountIn, VeloRoute[] calldata routes)\n        external\n        view\n        returns (uint256[] memory amounts);\n}\n\ncontract VelodromeSampler is SamplerUtils, ApproximateBuys {\n    /// @dev Sample sell quotes from Velodrome\n    /// @param router Address of Velodrome router.\n    /// @param takerToken Address of the taker token (what to sell).\n    /// @param makerToken Address of the maker token (what to buy).\n    /// @param takerTokenAmounts Taker token sell amount for each sample (sorted in ascending order).\n    /// @return stable Whether the pool is a stable pool (vs volatile).\n    /// @return makerTokenAmounts Maker amounts bought at each taker token amount.\n    function sampleSellsFromVelodrome(\n        IVelodromeRouter router,\n        address takerToken,\n        address makerToken,\n        uint256[] memory takerTokenAmounts\n    ) public view returns (bool stable, uint256[] memory makerTokenAmounts) {\n        _assertValidPair(makerToken, takerToken);\n        uint256 numSamples = takerTokenAmounts.length;\n        makerTokenAmounts = new uint256[](numSamples);\n\n        // Sampling should not mix stable and volatile pools.\n        // Find the most liquid pool based on max(takerTokenAmounts) and stick with it.\n        stable = _isMostLiquidPoolStablePool(router, takerToken, makerToken, takerTokenAmounts);\n        VeloRoute[] memory routes = new VeloRoute[](1);\n        routes[0] = VeloRoute({ from: takerToken, to: makerToken, stable: stable });\n\n        for (uint256 i = 0; i < numSamples; i++) {\n            makerTokenAmounts[i] = router.getAmountsOut(takerTokenAmounts[i], routes)[1];\n            // Break early if there are 0 amounts\n            if (makerTokenAmounts[i] == 0) {\n                break;\n            }\n        }\n    }\n\n    /// @dev Sample buy quotes from Velodrome.\n    /// @param router Address of Velodrome router.\n    /// @param takerToken Address of the taker token (what to sell).\n    /// @param makerToken Address of the maker token (what to buy).\n    /// @param makerTokenAmounts Maker token buy amount for each sample.\n    /// @return stable Whether the pool is a stable pool (vs volatile).\n    /// @return takerTokenAmounts Taker amounts sold at each maker token amount.\n    function sampleBuysFromVelodrome(\n        IVelodromeRouter router,\n        address takerToken,\n        address makerToken,\n        uint256[] memory makerTokenAmounts\n    ) public view returns (bool stable, uint256[] memory takerTokenAmounts) {\n        _assertValidPair(makerToken, takerToken);\n\n        // Sampling should not mix stable and volatile pools.\n        // Find the most liquid pool based on the reverse swap (maker -> taker) and stick with it.\n        stable = _isMostLiquidPoolStablePool(router, makerToken, takerToken, makerTokenAmounts);\n\n        takerTokenAmounts = _sampleApproximateBuys(\n            ApproximateBuyQuoteOpts({\n                takerTokenData: abi.encode(router, VeloRoute({ from: takerToken, to: makerToken, stable: stable })),\n                makerTokenData: abi.encode(router, VeloRoute({ from: makerToken, to: takerToken, stable: stable })),\n                getSellQuoteCallback: _sampleSellForApproximateBuyFromVelodrome\n            }),\n            makerTokenAmounts\n        );\n    }\n\n    function _sampleSellForApproximateBuyFromVelodrome(\n        bytes memory takerTokenData,\n        bytes memory, /* makerTokenData */\n        uint256 sellAmount\n    ) internal view returns (uint256) {\n        (IVelodromeRouter router, VeloRoute memory route) = abi.decode(takerTokenData, (IVelodromeRouter, VeloRoute));\n\n        VeloRoute[] memory routes = new VeloRoute[](1);\n        routes[0] = route;\n        return router.getAmountsOut(sellAmount, routes)[1];\n    }\n\n    /// @dev Returns whether the most liquid pool is a stable pool.\n    /// @param router Address of Velodrome router.\n    /// @param takerToken Address of the taker token (what to sell).\n    /// @param makerToken Address of the maker token (what to buy).\n    /// @param takerTokenAmounts Taker token buy amount for each sample (sorted in ascending order)\n    /// @return stable Whether the pool is a stable pool (vs volatile).\n    function _isMostLiquidPoolStablePool(\n        IVelodromeRouter router,\n        address takerToken,\n        address makerToken,\n        uint256[] memory takerTokenAmounts\n    ) internal view returns (bool stable) {\n        uint256 numSamples = takerTokenAmounts.length;\n        (, stable) = router.getAmountOut(takerTokenAmounts[numSamples - 1], takerToken, makerToken);\n    }\n}\n"
    },
    "compiler": {
        "name": "solc",
        "version": "0.6.12+commit.27d51765",
        "settings": {
            "remappings": [
                "@0x/contracts-utils=/Users/jacob/projects/ethdev/0x/workspace-remote/workspace/protocol/node_modules/@0x/contracts-utils",
                "@0x/contracts-erc20=/Users/jacob/projects/ethdev/0x/workspace-remote/workspace/protocol/node_modules/@0x/contracts-erc20",
                "@0x/contracts-zero-ex=/Users/jacob/projects/ethdev/0x/workspace-remote/workspace/protocol/packages/asset-swapper/node_modules/@0x/contracts-zero-ex"
            ],
            "optimizer": {
                "enabled": true,
                "runs": 200,
                "details": {
                    "yul": false,
                    "deduplicate": true
                }
            },
            "outputSelection": {
                "*": {
                    "*": [
                        "abi",
                        "devdoc",
                        "evm.bytecode.object",
                        "evm.bytecode.sourceMap",
                        "evm.deployedBytecode.object",
                        "evm.deployedBytecode.sourceMap"
                    ]
                }
            },
            "evmVersion": "istanbul"
        }
    },
    "chains": {}
}

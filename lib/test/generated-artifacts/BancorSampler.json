{
    "schemaVersion": "2.0.0",
    "contractName": "BancorSampler",
    "compilerOutput": {
        "abi": [
            {
                "inputs": [
                    {
                        "components": [
                            {
                                "internalType": "contract IBancorRegistry",
                                "name": "registry",
                                "type": "address"
                            },
                            {
                                "internalType": "address[][]",
                                "name": "paths",
                                "type": "address[][]"
                            }
                        ],
                        "internalType": "struct BancorSampler.BancorSamplerOpts",
                        "name": "opts",
                        "type": "tuple"
                    },
                    {
                        "internalType": "address",
                        "name": "takerToken",
                        "type": "address"
                    },
                    {
                        "internalType": "address",
                        "name": "makerToken",
                        "type": "address"
                    }
                ],
                "name": "sampleBuysFromBancorGlobal",
                "outputs": [
                    {
                        "internalType": "address",
                        "name": "bancorNetwork",
                        "type": "address"
                    },
                    {
                        "internalType": "address[]",
                        "name": "path",
                        "type": "address[]"
                    },
                    {
                        "internalType": "uint256[]",
                        "name": "takerTokenAmounts",
                        "type": "uint256[]"
                    }
                ],
                "stateMutability": "view",
                "type": "function"
            },
            {
                "inputs": [
                    {
                        "components": [
                            {
                                "internalType": "contract IBancorRegistry",
                                "name": "registry",
                                "type": "address"
                            },
                            {
                                "internalType": "address[][]",
                                "name": "paths",
                                "type": "address[][]"
                            }
                        ],
                        "internalType": "struct BancorSampler.BancorSamplerOpts",
                        "name": "opts",
                        "type": "tuple"
                    },
                    {
                        "internalType": "address",
                        "name": "takerToken",
                        "type": "address"
                    },
                    {
                        "internalType": "address",
                        "name": "makerToken",
                        "type": "address"
                    }
                ],
                "name": "sampleSellsFromBancorGlobal",
                "outputs": [
                    {
                        "internalType": "address",
                        "name": "bancorNetwork",
                        "type": "address"
                    },
                    {
                        "internalType": "address[]",
                        "name": "path",
                        "type": "address[]"
                    },
                    {
                        "internalType": "uint256[]",
                        "name": "makerTokenAmounts",
                        "type": "uint256[]"
                    }
                ],
                "stateMutability": "view",
                "type": "function"
            },
            {
                "inputs": [
                    {
                        "internalType": "uint256[]",
                        "name": "sampleValues",
                        "type": "uint256[]"
                    }
                ],
                "name": "setSampleValues",
                "outputs": [],
                "stateMutability": "nonpayable",
                "type": "function"
            }
        ],
        "devdoc": {
            "kind": "dev",
            "methods": {
                "sampleBuysFromBancorGlobal((address,address[][]),address,address)": {
                    "details": "Sample buy quotes from Bancor. Unimplemented",
                    "params": {
                        "makerToken": "Address of the maker token (what to buy).",
                        "opts": "BancorSamplerOpts The Bancor registry contract address and paths",
                        "takerToken": "Address of the taker token (what to sell)."
                    },
                    "returns": {
                        "bancorNetwork": "the Bancor Network address",
                        "path": "the selected conversion path from bancor",
                        "takerTokenAmounts": "Taker amounts sold at each maker token         amount."
                    }
                },
                "sampleSellsFromBancorGlobal((address,address[][]),address,address)": {
                    "details": "Sample sell quotes from Bancor.",
                    "params": {
                        "makerToken": "Address of the maker token (what to buy).",
                        "opts": "BancorSamplerOpts The Bancor registry contract address and paths",
                        "takerToken": "Address of the taker token (what to sell)."
                    },
                    "returns": {
                        "bancorNetwork": "the Bancor Network address",
                        "makerTokenAmounts": "Maker amounts bought at each taker token         amount.",
                        "path": "the selected conversion path from bancor"
                    }
                }
            },
            "stateVariables": {
                "BANCOR_CALL_GAS": {
                    "details": "Base gas limit for Bancor calls."
                }
            },
            "version": 1
        },
        "evm": {
            "bytecode": {
                "linkReferences": {},
                "object": "0x6000608081905260a0604081905261001891908161002b565b5034801561002557600080fd5b5061008b565b828054828255906000526020600020908101928215610066579160200282015b8281111561006657825182559160200191906001019061004b565b50610072929150610076565b5090565b5b808211156100725760008155600101610077565b6109348061009a6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063911d489514610046578063a0eaf05114610071578063b9184dd114610084575b600080fd5b610059610054366004610649565b610099565b6040516100689392919061080f565b60405180910390f35b61005961007f366004610649565b6100ee565b61009761009236600461059c565b61015e565b005b60008054606090819067ffffffffffffffff811180156100b857600080fd5b506040519080825280602002602001820160405280156100e2578160200160208202803683370190505b50905093509350939050565b600060608061014f868686600080548060200260200160405190810160405280929190818152602001828054801561014557602002820191906000526020600020905b815481526020019060010190808311610131575b5050505050610175565b91989097509095509350505050565b8051610171906000906020840190610508565b5050565b60006060808660200151516000141561018d576102cc565b610199878787876102d6565b8551919450925067ffffffffffffffff811180156101b657600080fd5b506040519080825280602002602001820160405280156101e0578160200160208202803683370190505b50905060005b81518110156102ca57836001600160a01b0316637f9c0ecd620493e08588858151811061020f57fe5b60200260200101516040518463ffffffff1660e01b8152600401610234929190610874565b60206040518083038187803b15801561024c57600080fd5b5086fa9350505050801561027d575060408051601f3d908101601f1916820190925261027a91810190610631565b60015b610286576102ca565b8083838151811061029357fe5b6020026020010181815250508282815181106102ab57fe5b6020026020010151600014156102c157506102ca565b506001016101e6565b505b9450945094915050565b6000606085600001516001600160a01b03166321f8a72187600001516001600160a01b0316639232494e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561032a57600080fd5b505afa15801561033e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103629190610631565b6040518263ffffffff1660e01b815260040161037e9190610896565b60206040518083038186803b15801561039657600080fd5b505afa1580156103aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ce9190610579565b9150856020015151600014156103e3576104ff565b6000805b8760200151518110156104fc5760028860200151828151811061040657fe5b602002602001015151101561041a576104f4565b836001600160a01b0316637f9c0ecd620493e08a60200151848151811061043d57fe5b60200260200101518860018a51038151811061045557fe5b60200260200101516040518463ffffffff1660e01b815260040161047a929190610874565b60206040518083038187803b15801561049257600080fd5b5086fa935050505080156104c3575060408051601f3d908101601f191682019092526104c091810190610631565b60015b6104cc576104f4565b828111156104f257809250886020015182815181106104e757fe5b602002602001015193505b505b6001016103e7565b50505b94509492505050565b828054828255906000526020600020908101928215610543579160200282015b82811115610543578251825591602001919060010190610528565b5061054f929150610553565b5090565b5b8082111561054f5760008155600101610554565b8035610573816108e6565b92915050565b60006020828403121561058a578081fd5b8151610595816108e6565b9392505050565b600060208083850312156105ae578182fd5b823567ffffffffffffffff8111156105c4578283fd5b8301601f810185136105d4578283fd5b80356105e76105e2826108c6565b61089f565b8181528381019083850185840285018601891015610603578687fd5b8694505b83851015610625578035835260019490940193918501918501610607565b50979650505050505050565b600060208284031215610642578081fd5b5051919050565b60008060006060848603121561065d578182fd5b67ffffffffffffffff84351115610672578182fd5b60408435850186031215610684578182fd5b61068e604061089f565b61069b85358601356108e6565b843585018035825267ffffffffffffffff60209091013511156106bc578283fd5b84358501602081013501601f810187136106d4578384fd5b6106e16105e282356108c6565b81358152602080820191908301865b843581101561078e578a603f83358701011261070a578788fd5b61071d6105e260208435880101356108c6565b8235860160208181013580845281840193926040808201939290920201018e1015610746578a8bfd5b8a5b602086358a010135811015610776576107618f83610568565b84526020938401939190910190600101610748565b505085525060209384019391909101906001016106f0565b5050806020850152505050809350506107aa60208501356108e6565b602084013591506107be60408501356108e6565b604084013590509250925092565b6000815180845260208085019450808401835b838110156108045781516001600160a01b0316875295820195908201906001016107df565b509495945050505050565b6001600160a01b038416815260606020808301829052600091610834908401866107cc565b8381036040850152845180825282860191830190845b818110156108665783518352928401929184019160010161084a565b509098975050505050505050565b60006040825261088760408301856107cc565b90508260208301529392505050565b90815260200190565b60405181810167ffffffffffffffff811182821017156108be57600080fd5b604052919050565b600067ffffffffffffffff8211156108dc578081fd5b5060209081020190565b6001600160a01b03811681146108fb57600080fd5b5056fea2646970667358221220a03eb294bebaa3b201bd883373bd5e47c98ddf396e4403c112e9bf98fc18e40d64736f6c634300060c0033",
                "opcodes": "PUSH1 0x0 PUSH1 0x80 DUP2 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x18 SWAP2 SWAP1 DUP2 PUSH2 0x2B JUMP JUMPDEST POP CALLVALUE DUP1 ISZERO PUSH2 0x25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8B JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x66 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x66 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x4B JUMP JUMPDEST POP PUSH2 0x72 SWAP3 SWAP2 POP PUSH2 0x76 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x72 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x77 JUMP JUMPDEST PUSH2 0x934 DUP1 PUSH2 0x9A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x911D4895 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xA0EAF051 EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0xB9184DD1 EQ PUSH2 0x84 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0x54 CALLDATASIZE PUSH1 0x4 PUSH2 0x649 JUMP JUMPDEST PUSH2 0x99 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x68 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x80F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x59 PUSH2 0x7F CALLDATASIZE PUSH1 0x4 PUSH2 0x649 JUMP JUMPDEST PUSH2 0xEE JUMP JUMPDEST PUSH2 0x97 PUSH2 0x92 CALLDATASIZE PUSH1 0x4 PUSH2 0x59C JUMP JUMPDEST PUSH2 0x15E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x60 SWAP1 DUP2 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0xB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE2 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP SWAP4 POP SWAP4 POP SWAP4 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH2 0x14F DUP7 DUP7 DUP7 PUSH1 0x0 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x145 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x131 JUMPI JUMPDEST POP POP POP POP POP PUSH2 0x175 JUMP JUMPDEST SWAP2 SWAP9 SWAP1 SWAP8 POP SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH2 0x171 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x508 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 DUP7 PUSH1 0x20 ADD MLOAD MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x18D JUMPI PUSH2 0x2CC JUMP JUMPDEST PUSH2 0x199 DUP8 DUP8 DUP8 DUP8 PUSH2 0x2D6 JUMP JUMPDEST DUP6 MLOAD SWAP2 SWAP5 POP SWAP3 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x1B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1E0 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x2CA JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x7F9C0ECD PUSH3 0x493E0 DUP6 DUP9 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x20F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x234 SWAP3 SWAP2 SWAP1 PUSH2 0x874 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x24C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP7 STATICCALL SWAP4 POP POP POP POP DUP1 ISZERO PUSH2 0x27D JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x27A SWAP2 DUP2 ADD SWAP1 PUSH2 0x631 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x286 JUMPI PUSH2 0x2CA JUMP JUMPDEST DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x293 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2AB JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x2C1 JUMPI POP PUSH2 0x2CA JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x1E6 JUMP JUMPDEST POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP6 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x21F8A721 DUP8 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9232494E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x32A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x33E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x362 SWAP2 SWAP1 PUSH2 0x631 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37E SWAP2 SWAP1 PUSH2 0x896 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x396 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3AA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3CE SWAP2 SWAP1 PUSH2 0x579 JUMP JUMPDEST SWAP2 POP DUP6 PUSH1 0x20 ADD MLOAD MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x3E3 JUMPI PUSH2 0x4FF JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP8 PUSH1 0x20 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x4FC JUMPI PUSH1 0x2 DUP9 PUSH1 0x20 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x406 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD MLOAD LT ISZERO PUSH2 0x41A JUMPI PUSH2 0x4F4 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x7F9C0ECD PUSH3 0x493E0 DUP11 PUSH1 0x20 ADD MLOAD DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x43D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP9 PUSH1 0x1 DUP11 MLOAD SUB DUP2 MLOAD DUP2 LT PUSH2 0x455 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47A SWAP3 SWAP2 SWAP1 PUSH2 0x874 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x492 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP7 STATICCALL SWAP4 POP POP POP POP DUP1 ISZERO PUSH2 0x4C3 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x4C0 SWAP2 DUP2 ADD SWAP1 PUSH2 0x631 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x4CC JUMPI PUSH2 0x4F4 JUMP JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x4F2 JUMPI DUP1 SWAP3 POP DUP9 PUSH1 0x20 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4E7 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP4 POP JUMPDEST POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x3E7 JUMP JUMPDEST POP POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x543 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x543 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x528 JUMP JUMPDEST POP PUSH2 0x54F SWAP3 SWAP2 POP PUSH2 0x553 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x54F JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x554 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x573 DUP2 PUSH2 0x8E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x58A JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x595 DUP2 PUSH2 0x8E6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5AE JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5C4 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x5D4 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x5E7 PUSH2 0x5E2 DUP3 PUSH2 0x8C6 JUMP JUMPDEST PUSH2 0x89F JUMP JUMPDEST DUP2 DUP2 MSTORE DUP4 DUP2 ADD SWAP1 DUP4 DUP6 ADD DUP6 DUP5 MUL DUP6 ADD DUP7 ADD DUP10 LT ISZERO PUSH2 0x603 JUMPI DUP7 DUP8 REVERT JUMPDEST DUP7 SWAP5 POP JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0x625 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE PUSH1 0x1 SWAP5 SWAP1 SWAP5 ADD SWAP4 SWAP2 DUP6 ADD SWAP2 DUP6 ADD PUSH2 0x607 JUMP JUMPDEST POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x642 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x65D JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP5 CALLDATALOAD GT ISZERO PUSH2 0x672 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x40 DUP5 CALLDATALOAD DUP6 ADD DUP7 SUB SLT ISZERO PUSH2 0x684 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x68E PUSH1 0x40 PUSH2 0x89F JUMP JUMPDEST PUSH2 0x69B DUP6 CALLDATALOAD DUP7 ADD CALLDATALOAD PUSH2 0x8E6 JUMP JUMPDEST DUP5 CALLDATALOAD DUP6 ADD DUP1 CALLDATALOAD DUP3 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD GT ISZERO PUSH2 0x6BC JUMPI DUP3 DUP4 REVERT JUMPDEST DUP5 CALLDATALOAD DUP6 ADD PUSH1 0x20 DUP2 ADD CALLDATALOAD ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x6D4 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x6E1 PUSH2 0x5E2 DUP3 CALLDATALOAD PUSH2 0x8C6 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP2 SWAP1 DUP4 ADD DUP7 JUMPDEST DUP5 CALLDATALOAD DUP2 LT ISZERO PUSH2 0x78E JUMPI DUP11 PUSH1 0x3F DUP4 CALLDATALOAD DUP8 ADD ADD SLT PUSH2 0x70A JUMPI DUP8 DUP9 REVERT JUMPDEST PUSH2 0x71D PUSH2 0x5E2 PUSH1 0x20 DUP5 CALLDATALOAD DUP9 ADD ADD CALLDATALOAD PUSH2 0x8C6 JUMP JUMPDEST DUP3 CALLDATALOAD DUP7 ADD PUSH1 0x20 DUP2 DUP2 ADD CALLDATALOAD DUP1 DUP5 MSTORE DUP2 DUP5 ADD SWAP4 SWAP3 PUSH1 0x40 DUP1 DUP3 ADD SWAP4 SWAP3 SWAP1 SWAP3 MUL ADD ADD DUP15 LT ISZERO PUSH2 0x746 JUMPI DUP11 DUP12 REVERT JUMPDEST DUP11 JUMPDEST PUSH1 0x20 DUP7 CALLDATALOAD DUP11 ADD ADD CALLDATALOAD DUP2 LT ISZERO PUSH2 0x776 JUMPI PUSH2 0x761 DUP16 DUP4 PUSH2 0x568 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x748 JUMP JUMPDEST POP POP DUP6 MSTORE POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x6F0 JUMP JUMPDEST POP POP DUP1 PUSH1 0x20 DUP6 ADD MSTORE POP POP POP DUP1 SWAP4 POP POP PUSH2 0x7AA PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x8E6 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x7BE PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH2 0x8E6 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x804 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x7DF JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP2 PUSH2 0x834 SWAP1 DUP5 ADD DUP7 PUSH2 0x7CC JUMP JUMPDEST DUP4 DUP2 SUB PUSH1 0x40 DUP6 ADD MSTORE DUP5 MLOAD DUP1 DUP3 MSTORE DUP3 DUP7 ADD SWAP2 DUP4 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x866 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x84A JUMP JUMPDEST POP SWAP1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 MSTORE PUSH2 0x887 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x7CC JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x8BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x8DC JUMPI DUP1 DUP2 REVERT JUMPDEST POP PUSH1 0x20 SWAP1 DUP2 MUL ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x8FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 RETURNDATACOPY 0xB2 SWAP5 0xBE 0xBA LOG3 0xB2 ADD 0xBD DUP9 CALLER PUSH20 0xBD5E47C98DDF396E4403C112E9BF98FC18E40D64 PUSH20 0x6F6C634300060C00330000000000000000000000 ",
                "sourceMap": "811:1:22:-:0;766:5113:4;797:16:22;;;;766:5113:4;797:16:22;;;762:51;;811:1;;762:51;:::i;:::-;;766:5113:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;766:5113:4;;;-1:-1:-1;766:5113:4;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
                "immutableReferences": {},
                "linkReferences": {},
                "object": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c8063911d489514610046578063a0eaf05114610071578063b9184dd114610084575b600080fd5b610059610054366004610649565b610099565b6040516100689392919061080f565b60405180910390f35b61005961007f366004610649565b6100ee565b61009761009236600461059c565b61015e565b005b60008054606090819067ffffffffffffffff811180156100b857600080fd5b506040519080825280602002602001820160405280156100e2578160200160208202803683370190505b50905093509350939050565b600060608061014f868686600080548060200260200160405190810160405280929190818152602001828054801561014557602002820191906000526020600020905b815481526020019060010190808311610131575b5050505050610175565b91989097509095509350505050565b8051610171906000906020840190610508565b5050565b60006060808660200151516000141561018d576102cc565b610199878787876102d6565b8551919450925067ffffffffffffffff811180156101b657600080fd5b506040519080825280602002602001820160405280156101e0578160200160208202803683370190505b50905060005b81518110156102ca57836001600160a01b0316637f9c0ecd620493e08588858151811061020f57fe5b60200260200101516040518463ffffffff1660e01b8152600401610234929190610874565b60206040518083038187803b15801561024c57600080fd5b5086fa9350505050801561027d575060408051601f3d908101601f1916820190925261027a91810190610631565b60015b610286576102ca565b8083838151811061029357fe5b6020026020010181815250508282815181106102ab57fe5b6020026020010151600014156102c157506102ca565b506001016101e6565b505b9450945094915050565b6000606085600001516001600160a01b03166321f8a72187600001516001600160a01b0316639232494e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561032a57600080fd5b505afa15801561033e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103629190610631565b6040518263ffffffff1660e01b815260040161037e9190610896565b60206040518083038186803b15801561039657600080fd5b505afa1580156103aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ce9190610579565b9150856020015151600014156103e3576104ff565b6000805b8760200151518110156104fc5760028860200151828151811061040657fe5b602002602001015151101561041a576104f4565b836001600160a01b0316637f9c0ecd620493e08a60200151848151811061043d57fe5b60200260200101518860018a51038151811061045557fe5b60200260200101516040518463ffffffff1660e01b815260040161047a929190610874565b60206040518083038187803b15801561049257600080fd5b5086fa935050505080156104c3575060408051601f3d908101601f191682019092526104c091810190610631565b60015b6104cc576104f4565b828111156104f257809250886020015182815181106104e757fe5b602002602001015193505b505b6001016103e7565b50505b94509492505050565b828054828255906000526020600020908101928215610543579160200282015b82811115610543578251825591602001919060010190610528565b5061054f929150610553565b5090565b5b8082111561054f5760008155600101610554565b8035610573816108e6565b92915050565b60006020828403121561058a578081fd5b8151610595816108e6565b9392505050565b600060208083850312156105ae578182fd5b823567ffffffffffffffff8111156105c4578283fd5b8301601f810185136105d4578283fd5b80356105e76105e2826108c6565b61089f565b8181528381019083850185840285018601891015610603578687fd5b8694505b83851015610625578035835260019490940193918501918501610607565b50979650505050505050565b600060208284031215610642578081fd5b5051919050565b60008060006060848603121561065d578182fd5b67ffffffffffffffff84351115610672578182fd5b60408435850186031215610684578182fd5b61068e604061089f565b61069b85358601356108e6565b843585018035825267ffffffffffffffff60209091013511156106bc578283fd5b84358501602081013501601f810187136106d4578384fd5b6106e16105e282356108c6565b81358152602080820191908301865b843581101561078e578a603f83358701011261070a578788fd5b61071d6105e260208435880101356108c6565b8235860160208181013580845281840193926040808201939290920201018e1015610746578a8bfd5b8a5b602086358a010135811015610776576107618f83610568565b84526020938401939190910190600101610748565b505085525060209384019391909101906001016106f0565b5050806020850152505050809350506107aa60208501356108e6565b602084013591506107be60408501356108e6565b604084013590509250925092565b6000815180845260208085019450808401835b838110156108045781516001600160a01b0316875295820195908201906001016107df565b509495945050505050565b6001600160a01b038416815260606020808301829052600091610834908401866107cc565b8381036040850152845180825282860191830190845b818110156108665783518352928401929184019160010161084a565b509098975050505050505050565b60006040825261088760408301856107cc565b90508260208301529392505050565b90815260200190565b60405181810167ffffffffffffffff811182821017156108be57600080fd5b604052919050565b600067ffffffffffffffff8211156108dc578081fd5b5060209081020190565b6001600160a01b03811681146108fb57600080fd5b5056fea2646970667358221220a03eb294bebaa3b201bd883373bd5e47c98ddf396e4403c112e9bf98fc18e40d64736f6c634300060c0033",
                "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x911D4895 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xA0EAF051 EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0xB9184DD1 EQ PUSH2 0x84 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0x54 CALLDATASIZE PUSH1 0x4 PUSH2 0x649 JUMP JUMPDEST PUSH2 0x99 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x68 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x80F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x59 PUSH2 0x7F CALLDATASIZE PUSH1 0x4 PUSH2 0x649 JUMP JUMPDEST PUSH2 0xEE JUMP JUMPDEST PUSH2 0x97 PUSH2 0x92 CALLDATASIZE PUSH1 0x4 PUSH2 0x59C JUMP JUMPDEST PUSH2 0x15E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x60 SWAP1 DUP2 SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0xB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE2 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP SWAP4 POP SWAP4 POP SWAP4 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH2 0x14F DUP7 DUP7 DUP7 PUSH1 0x0 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x145 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x131 JUMPI JUMPDEST POP POP POP POP POP PUSH2 0x175 JUMP JUMPDEST SWAP2 SWAP9 SWAP1 SWAP8 POP SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH2 0x171 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x508 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 DUP7 PUSH1 0x20 ADD MLOAD MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x18D JUMPI PUSH2 0x2CC JUMP JUMPDEST PUSH2 0x199 DUP8 DUP8 DUP8 DUP8 PUSH2 0x2D6 JUMP JUMPDEST DUP6 MLOAD SWAP2 SWAP5 POP SWAP3 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x1B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1E0 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x2CA JUMPI DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x7F9C0ECD PUSH3 0x493E0 DUP6 DUP9 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x20F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x234 SWAP3 SWAP2 SWAP1 PUSH2 0x874 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x24C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP7 STATICCALL SWAP4 POP POP POP POP DUP1 ISZERO PUSH2 0x27D JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x27A SWAP2 DUP2 ADD SWAP1 PUSH2 0x631 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x286 JUMPI PUSH2 0x2CA JUMP JUMPDEST DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x293 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2AB JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x2C1 JUMPI POP PUSH2 0x2CA JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x1E6 JUMP JUMPDEST POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP6 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x21F8A721 DUP8 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9232494E PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x32A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x33E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x362 SWAP2 SWAP1 PUSH2 0x631 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x37E SWAP2 SWAP1 PUSH2 0x896 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x396 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3AA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3CE SWAP2 SWAP1 PUSH2 0x579 JUMP JUMPDEST SWAP2 POP DUP6 PUSH1 0x20 ADD MLOAD MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x3E3 JUMPI PUSH2 0x4FF JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP8 PUSH1 0x20 ADD MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x4FC JUMPI PUSH1 0x2 DUP9 PUSH1 0x20 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x406 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD MLOAD LT ISZERO PUSH2 0x41A JUMPI PUSH2 0x4F4 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x7F9C0ECD PUSH3 0x493E0 DUP11 PUSH1 0x20 ADD MLOAD DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x43D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP9 PUSH1 0x1 DUP11 MLOAD SUB DUP2 MLOAD DUP2 LT PUSH2 0x455 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47A SWAP3 SWAP2 SWAP1 PUSH2 0x874 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x492 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP7 STATICCALL SWAP4 POP POP POP POP DUP1 ISZERO PUSH2 0x4C3 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x4C0 SWAP2 DUP2 ADD SWAP1 PUSH2 0x631 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x4CC JUMPI PUSH2 0x4F4 JUMP JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x4F2 JUMPI DUP1 SWAP3 POP DUP9 PUSH1 0x20 ADD MLOAD DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4E7 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP4 POP JUMPDEST POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x3E7 JUMP JUMPDEST POP POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x543 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x543 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x528 JUMP JUMPDEST POP PUSH2 0x54F SWAP3 SWAP2 POP PUSH2 0x553 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x54F JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x554 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x573 DUP2 PUSH2 0x8E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x58A JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x595 DUP2 PUSH2 0x8E6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x5AE JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5C4 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x5D4 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x5E7 PUSH2 0x5E2 DUP3 PUSH2 0x8C6 JUMP JUMPDEST PUSH2 0x89F JUMP JUMPDEST DUP2 DUP2 MSTORE DUP4 DUP2 ADD SWAP1 DUP4 DUP6 ADD DUP6 DUP5 MUL DUP6 ADD DUP7 ADD DUP10 LT ISZERO PUSH2 0x603 JUMPI DUP7 DUP8 REVERT JUMPDEST DUP7 SWAP5 POP JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0x625 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE PUSH1 0x1 SWAP5 SWAP1 SWAP5 ADD SWAP4 SWAP2 DUP6 ADD SWAP2 DUP6 ADD PUSH2 0x607 JUMP JUMPDEST POP SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x642 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x65D JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP5 CALLDATALOAD GT ISZERO PUSH2 0x672 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x40 DUP5 CALLDATALOAD DUP6 ADD DUP7 SUB SLT ISZERO PUSH2 0x684 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x68E PUSH1 0x40 PUSH2 0x89F JUMP JUMPDEST PUSH2 0x69B DUP6 CALLDATALOAD DUP7 ADD CALLDATALOAD PUSH2 0x8E6 JUMP JUMPDEST DUP5 CALLDATALOAD DUP6 ADD DUP1 CALLDATALOAD DUP3 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD GT ISZERO PUSH2 0x6BC JUMPI DUP3 DUP4 REVERT JUMPDEST DUP5 CALLDATALOAD DUP6 ADD PUSH1 0x20 DUP2 ADD CALLDATALOAD ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x6D4 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x6E1 PUSH2 0x5E2 DUP3 CALLDATALOAD PUSH2 0x8C6 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP2 SWAP1 DUP4 ADD DUP7 JUMPDEST DUP5 CALLDATALOAD DUP2 LT ISZERO PUSH2 0x78E JUMPI DUP11 PUSH1 0x3F DUP4 CALLDATALOAD DUP8 ADD ADD SLT PUSH2 0x70A JUMPI DUP8 DUP9 REVERT JUMPDEST PUSH2 0x71D PUSH2 0x5E2 PUSH1 0x20 DUP5 CALLDATALOAD DUP9 ADD ADD CALLDATALOAD PUSH2 0x8C6 JUMP JUMPDEST DUP3 CALLDATALOAD DUP7 ADD PUSH1 0x20 DUP2 DUP2 ADD CALLDATALOAD DUP1 DUP5 MSTORE DUP2 DUP5 ADD SWAP4 SWAP3 PUSH1 0x40 DUP1 DUP3 ADD SWAP4 SWAP3 SWAP1 SWAP3 MUL ADD ADD DUP15 LT ISZERO PUSH2 0x746 JUMPI DUP11 DUP12 REVERT JUMPDEST DUP11 JUMPDEST PUSH1 0x20 DUP7 CALLDATALOAD DUP11 ADD ADD CALLDATALOAD DUP2 LT ISZERO PUSH2 0x776 JUMPI PUSH2 0x761 DUP16 DUP4 PUSH2 0x568 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x748 JUMP JUMPDEST POP POP DUP6 MSTORE POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x6F0 JUMP JUMPDEST POP POP DUP1 PUSH1 0x20 DUP6 ADD MSTORE POP POP POP DUP1 SWAP4 POP POP PUSH2 0x7AA PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x8E6 JUMP JUMPDEST PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x7BE PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH2 0x8E6 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x804 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x7DF JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP2 PUSH2 0x834 SWAP1 DUP5 ADD DUP7 PUSH2 0x7CC JUMP JUMPDEST DUP4 DUP2 SUB PUSH1 0x40 DUP6 ADD MSTORE DUP5 MLOAD DUP1 DUP3 MSTORE DUP3 DUP7 ADD SWAP2 DUP4 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x866 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x84A JUMP JUMPDEST POP SWAP1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 MSTORE PUSH2 0x887 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x7CC JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x8BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x8DC JUMPI DUP1 DUP2 REVERT JUMPDEST POP PUSH1 0x20 SWAP1 DUP2 MUL ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x8FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 RETURNDATACOPY 0xB2 SWAP5 0xBE 0xBA LOG3 0xB2 ADD 0xBD DUP9 CALLER PUSH20 0xBD5E47C98DDF396E4403C112E9BF98FC18E40D64 PUSH20 0x6F6C634300060C00330000000000000000000000 ",
                "sourceMap": "766:5113:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4266:340;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;1526:454;;;;;;:::i;:::-;;:::i;820:120:22:-;;;;;;:::i;:::-;;:::i;:::-;;4266:340:4;4448:21;4578:20;;4471:21;;;;4564:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4564:35:4;;4544:55;;4266:340;;;;;;;:::o;1526:454::-;1709:21;1732;1755:34;1848:125;1884:4;1902:10;1926;1950:13;1848:125;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:22;:125::i;:::-;1805:168;;;;-1:-1:-1;1805:168:4;;-1:-1:-1;1526:454:4;-1:-1:-1;;;;1526:454:4:o;820:120:22:-;905:28;;;;:13;;:28;;;;;:::i;:::-;;820:120;:::o;2471:1293:4:-;2695:21;2718;2741:34;2795:4;:10;;;:17;2816:1;2795:22;2791:100;;;2833:47;;2791:100;2924:62;2938:4;2944:10;2956;2968:17;2924:13;:62::i;:::-;3030:24;;2900:86;;-1:-1:-1;2900:86:4;-1:-1:-1;3016:39:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3016:39:4;;2996:59;;3071:9;3066:635;3090:17;:24;3086:1;:28;3066:635;;;3170:13;-1:-1:-1;;;;;3155:61:4;;922:5;3289:4;3295:17;3313:1;3295:20;;;;;;;;;;;;;;3155:161;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3155:161:4;;;;;;;;-1:-1:-1;;3155:161:4;;;;;;;;;;;;:::i;:::-;;;3135:556;;3671:5;;3135:556;3411:6;3388:17;3406:1;3388:20;;;;;;;;;;;;;:29;;;;;3493:17;3511:1;3493:20;;;;;;;;;;;;;;3517:1;3493:25;3489:77;;;3542:5;;;3489:77;3333:247;3116:3;;3066:635;;;;2471:1293;;;;;;;;;:::o;4612:1265::-;4827:21;4850;4903:4;:13;;;-1:-1:-1;;;;;4903:24:4;;4928:4;:13;;;-1:-1:-1;;;;;4928:28:4;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4903:56;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4887:72;;4973:4;:10;;;:17;4994:1;4973:22;4969:81;;;5011:28;;4969:81;5059:23;5167:9;5162:709;5186:4;:10;;;:17;5182:1;:21;5162:709;;;5251:1;5228:4;:10;;;5239:1;5228:13;;;;;;;;;;;;;;:20;:24;5224:71;;;5272:8;;5224:71;5344:13;-1:-1:-1;;;;;5329:61:4;;922:5;5463:4;:10;;;5474:1;5463:13;;;;;;;;;;;;;;5478:17;5521:1;5496:17;:24;:26;5478:45;;;;;;;;;;;;;;5329:195;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5329:195:4;;;;;;;;-1:-1:-1;;5329:195:4;;;;;;;;;;;;:::i;:::-;;;5309:552;;5838:8;;5309:552;5609:15;5600:6;:24;5596:137;;;5666:6;5648:24;;5701:4;:10;;;5712:1;5701:13;;;;;;;;;;;;;;5694:20;;5596:137;5541:206;5309:552;5205:3;;5162:709;;;;4612:1265;;;;;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;5:130;72:20;;97:33;72:20;97:33;:::i;:::-;57:78;;;;:::o;3831:263::-;;3946:2;3934:9;3925:7;3921:23;3917:32;3914:2;;;-1:-1;;3952:12;3914:2;226:6;220:13;238:33;265:5;238:33;:::i;:::-;4004:74;3908:186;-1:-1;;;3908:186::o;4101:377::-;;4230:2;;4218:9;4209:7;4205:23;4201:32;4198:2;;;-1:-1;;4236:12;4198:2;4294:17;4281:31;4332:18;4324:6;4321:30;4318:2;;;-1:-1;;4354:12;4318:2;4430:22;;1925:4;1913:17;;1909:27;-1:-1;1899:2;;-1:-1;;1940:12;1899:2;1987:6;1974:20;2009:80;2024:64;2081:6;2024:64;:::i;:::-;2009:80;:::i;:::-;2117:21;;;2174:14;;;;2149:17;;;2263;;;2254:27;;;;2251:36;-1:-1;2248:2;;;-1:-1;;2290:12;2248:2;-1:-1;2316:10;;2310:206;2335:6;2332:1;2329:13;2310:206;;;3620:20;;2403:50;;2357:1;2350:9;;;;;2467:14;;;;2495;;2310:206;;;-1:-1;4374:88;4192:286;-1:-1;;;;;;;4192:286::o;4485:263::-;;4600:2;4588:9;4579:7;4575:23;4571:32;4568:2;;;-1:-1;;4606:12;4568:2;-1:-1;2608:13;;4562:186;-1:-1;4562:186::o;4755:647::-;;;;4928:2;4916:9;4907:7;4903:23;4899:32;4896:2;;;-1:-1;;4934:12;4896:2;5030:18;4992:17;4979:31;5019:30;5016:2;;;-1:-1;;5052:12;5016:2;3027:4;4992:17;4979:31;5142:9;5138:22;3010:3;3006:19;3002:30;2999:2;;;-1:-1;;3035:12;2999:2;3063:20;3027:4;3063:20;:::i;:::-;97:33;4992:17;4979:31;5142:9;5138:22;72:20;97:33;:::i;:::-;4979:31;;5138:22;;72:20;;3144:100;;5030:18;3334:2;3319:18;;;3306:32;3347:30;3344:2;;;-1:-1;;3380:12;3344:2;4979:31;;5138:22;;3334:2;3319:18;;3306:32;3496:22;1171:4;1159:17;;1155:27;-1:-1;1145:2;;-1:-1;;1186:12;1145:2;1255:105;1270:89;1233:6;1220:20;1270:89;:::i;1255:105::-;1220:20;;1388:21;;3334:2;1445:14;;;;1366:16;1420:17;;-1:-1;1525:258;1233:6;1220:20;1547:1;1544:13;1525:258;;;418:3;399:17;1633:3;1620:17;1424:6;1608:30;399:17;395:27;385:2;;-1:-1;;426:12;385:2;495:80;510:64;3334:2;1633:3;1620:17;1424:6;1608:30;;460:20;510:64;:::i;495:80::-;1620:17;;1608:30;;3334:2;1608:30;;;460:20;603:21;;;660:14;;;;581:16;3027:4;635:17;;;;749;;;;740:27;;737:36;-1:-1;734:2;;;-1:-1;;776:12;734:2;-1:-1;796:206;3334:2;1633:3;1620:17;1424:6;1608:30;;460:20;818:1;815:13;796:206;;;901:37;934:3;922:10;901:37;:::i;:::-;889:50;;3334:2;953:14;;;;981;;;;;1572:1;836:9;796:206;;;-1:-1;;1645:75;;-1:-1;3334:2;1734:14;;;;1762;;;;;1572:1;1565:9;1525:258;;;1529:14;;3425:99;3334:2;3411:5;3407:16;3400:125;;;;5072:98;;;;97:33;3334:2;5250:9;5246:22;72:20;97:33;:::i;:::-;3334:2;5250:9;5246:22;72:20;5215:63;;97:33;3027:4;5358:9;5354:22;72:20;97:33;:::i;:::-;3027:4;5358:9;5354:22;72:20;5323:63;;4890:512;;;;;:::o;6304:690::-;;6497:5;11185:12;11731:6;11726:3;11719:19;11768:4;;11763:3;11759:14;6509:93;;11768:4;6673:5;10881:14;-1:-1;6712:260;6737:6;6734:1;6731:13;6712:260;;;6798:13;;-1:-1;;;;;12336:54;6104:37;;5833:14;;;;11459;;;;4332:18;6752:9;6712:260;;;-1:-1;6978:10;;6428:566;-1:-1;;;;;6428:566::o;8081:740::-;-1:-1;;;;;12336:54;;6104:37;;8364:2;8482;8467:18;;;8460:48;;;8081:740;;8522:108;;8349:18;;8616:6;8522:108;:::i;:::-;8668:20;;;8663:2;8648:18;;8641:48;11185:12;;11719:19;;;10881:14;;;;11759;;;-1:-1;7441:260;7466:6;7463:1;7460:13;7441:260;;;7527:13;;7802:37;;11459:14;;;;6015;;;;7488:1;7481:9;7441:260;;;-1:-1;8695:116;;8335:486;-1:-1;;;;;;;;8335:486::o;8828:481::-;;9033:2;9054:17;9047:47;9108:108;9033:2;9022:9;9018:18;9202:6;9108:108;:::i;:::-;9100:116;;7832:5;9295:2;9284:9;9280:18;7802:37;9004:305;;;;;:::o;9316:222::-;7802:37;;;9443:2;9428:18;;9414:124::o;9545:256::-;9607:2;9601:9;9633:17;;;9708:18;9693:34;;9729:22;;;9690:62;9687:2;;;9765:1;;9755:12;9687:2;9607;9774:22;9585:216;;-1:-1;9585:216::o;9808:304::-;;9967:18;9959:6;9956:30;9953:2;;;-1:-1;;9989:12;9953:2;-1:-1;10034:4;10022:17;;;10087:15;;9890:222::o;12481:117::-;-1:-1;;;;;12336:54;;12540:35;;12530:2;;12589:1;;12579:12;12530:2;12524:74;:::o"
            }
        }
    },
    "sourceTreeHashHex": "0x81af9e2502f8b0fd06344c4a15407b9c48e7db96360169cdd286dac2e33e6853",
    "sources": {
        "./BancorSampler.sol": {
            "id": 4,
            "content": "// SPDX-License-Identifier: Apache-2.0\n/*\n\n  Copyright 2020 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.6;\npragma experimental ABIEncoderV2;\n\nimport \"./interfaces/IBancor.sol\";\nimport \"./SamplerBase.sol\";\n\ncontract CompilerHack {}\n\ncontract BancorSampler is\n    SamplerBase,\n    CompilerHack\n{\n\n    /// @dev Base gas limit for Bancor calls.\n    uint256 constant private BANCOR_CALL_GAS = 300e3; // 300k\n\n    struct BancorSamplerOpts {\n        IBancorRegistry registry;\n        address[][] paths;\n    }\n\n    /// @dev Sample sell quotes from Bancor.\n    /// @param opts BancorSamplerOpts The Bancor registry contract address and paths\n    /// @param takerToken Address of the taker token (what to sell).\n    /// @param makerToken Address of the maker token (what to buy).\n    /// @return bancorNetwork the Bancor Network address\n    /// @return path the selected conversion path from bancor\n    /// @return makerTokenAmounts Maker amounts bought at each taker token\n    ///         amount.\n    function sampleSellsFromBancorGlobal(\n        BancorSamplerOpts memory opts,\n        address takerToken,\n        address makerToken\n    )\n        public\n        view\n        returns (address bancorNetwork, address[] memory path, uint256[] memory makerTokenAmounts)\n    {\n        (bancorNetwork, path, makerTokenAmounts) = _sampleSellsFromBancor(\n            opts,\n            takerToken,\n            makerToken,\n            SAMPLE_VALUES\n        );\n    }\n\n    /// @dev Sample sell quotes from Bancor.\n    /// @param opts BancorSamplerOpts The Bancor registry contract address and paths\n    /// @param takerToken Address of the taker token (what to sell).\n    /// @param makerToken Address of the maker token (what to buy).\n    /// @return bancorNetwork the Bancor Network address\n    /// @return path the selected conversion path from bancor\n    /// @return makerTokenAmounts Maker amounts bought at each taker token\n    ///         amount.\n    function _sampleSellsFromBancor(\n        BancorSamplerOpts memory opts,\n        address takerToken,\n        address makerToken,\n        uint256[] memory takerTokenAmounts\n    )\n        internal\n        view\n        returns (address bancorNetwork, address[] memory path, uint256[] memory makerTokenAmounts)\n    {\n        if (opts.paths.length == 0) {\n            return (bancorNetwork, path, makerTokenAmounts);\n        }\n        (bancorNetwork, path) = _findBestPath(opts, takerToken, makerToken, takerTokenAmounts);\n        makerTokenAmounts = new uint256[](takerTokenAmounts.length);\n\n        for (uint256 i = 0; i < makerTokenAmounts.length; i++) {\n            try\n                IBancorNetwork(bancorNetwork)\n                    .rateByPath\n                        {gas: BANCOR_CALL_GAS}\n                        (path, takerTokenAmounts[i])\n                returns (uint256 amount)\n            {\n                makerTokenAmounts[i] = amount;\n                // Break early if there are 0 amounts\n                if (makerTokenAmounts[i] == 0) {\n                    break;\n                }\n            } catch {\n                // Swallow failures, leaving all results as zero.\n                break;\n            }\n        }\n        return (bancorNetwork, path, makerTokenAmounts);\n    }\n\n    /// @dev Sample buy quotes from Bancor. Unimplemented\n    /// @param opts BancorSamplerOpts The Bancor registry contract address and paths\n    /// @param takerToken Address of the taker token (what to sell).\n    /// @param makerToken Address of the maker token (what to buy).\n    /// @return bancorNetwork the Bancor Network address\n    /// @return path the selected conversion path from bancor\n    /// @return takerTokenAmounts Taker amounts sold at each maker token\n    ///         amount.\n    function sampleBuysFromBancorGlobal(\n        BancorSamplerOpts memory opts,\n        address takerToken,\n        address makerToken\n    )\n        public\n        view\n        returns (address bancorNetwork, address[] memory path, uint256[] memory takerTokenAmounts)\n    {\n        takerTokenAmounts = new uint256[](SAMPLE_VALUES.length);\n    }\n\n    function _findBestPath(\n        BancorSamplerOpts memory opts,\n        address takerToken,\n        address makerToken,\n        uint256[] memory takerTokenAmounts\n    )\n        internal\n        view\n        returns (address bancorNetwork, address[] memory path)\n    {\n        bancorNetwork = opts.registry.getAddress(opts.registry.BANCOR_NETWORK());\n        if (opts.paths.length == 0) {\n            return (bancorNetwork, path);\n        }\n        uint256 maxBoughtAmount = 0;\n        // Find the best path by selling the largest taker amount\n        for (uint256 i = 0; i < opts.paths.length; i++) {\n            if (opts.paths[i].length < 2) {\n                continue;\n            }\n\n            try\n                IBancorNetwork(bancorNetwork)\n                    .rateByPath\n                        {gas: BANCOR_CALL_GAS}\n                        (opts.paths[i], takerTokenAmounts[takerTokenAmounts.length-1])\n                returns (uint256 amount)\n            {\n                if (amount > maxBoughtAmount) {\n                    maxBoughtAmount = amount;\n                    path = opts.paths[i];\n                }\n            } catch {\n                // Swallow failures, leaving all results as zero.\n                continue;\n            }\n        }\n    }\n}\n"
        },
        "./interfaces/IBancor.sol": {
            "id": 32,
            "content": "// SPDX-License-Identifier: Apache-2.0\n/*\n\n  Copyright 2020 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.6;\n\n\ninterface IBancor {}\n\ninterface IBancorNetwork {\n  function conversionPath(address _sourceToken, address _targetToken) external view returns (address[] memory);\n  function rateByPath(address[] memory _path, uint256 _amount) external view returns (uint256);\n}\n\ninterface IBancorRegistry {\n    function getAddress(bytes32 _contractName) external view returns (address);\n    function BANCOR_NETWORK() external view returns (bytes32);\n}\n"
        },
        "./SamplerBase.sol": {
            "id": 22,
            "content": "// SPDX-License-Identifier: Apache-2.0\n/*\n\n  Copyright 2021 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.6;\npragma experimental ABIEncoderV2;\n\ncontract SamplerBase\n{\n    /// @dev Stored Sample values for each Sampler to pull\n    uint256[] internal SAMPLE_VALUES = new uint256[](0);\n\n    function setSampleValues(uint256[] memory sampleValues)\n        public\n    {\n        SAMPLE_VALUES = sampleValues;\n    }\n\n    modifier resetsSampleValues\n    {\n        uint256[] memory sampleValues = SAMPLE_VALUES;\n        _;\n        SAMPLE_VALUES = sampleValues;\n    }\n}\n"
        }
    },
    "sourceCodes": {
        "./BancorSampler.sol": "// SPDX-License-Identifier: Apache-2.0\n/*\n\n  Copyright 2020 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.6;\npragma experimental ABIEncoderV2;\n\nimport \"./interfaces/IBancor.sol\";\nimport \"./SamplerBase.sol\";\n\ncontract CompilerHack {}\n\ncontract BancorSampler is\n    SamplerBase,\n    CompilerHack\n{\n\n    /// @dev Base gas limit for Bancor calls.\n    uint256 constant private BANCOR_CALL_GAS = 300e3; // 300k\n\n    struct BancorSamplerOpts {\n        IBancorRegistry registry;\n        address[][] paths;\n    }\n\n    /// @dev Sample sell quotes from Bancor.\n    /// @param opts BancorSamplerOpts The Bancor registry contract address and paths\n    /// @param takerToken Address of the taker token (what to sell).\n    /// @param makerToken Address of the maker token (what to buy).\n    /// @return bancorNetwork the Bancor Network address\n    /// @return path the selected conversion path from bancor\n    /// @return makerTokenAmounts Maker amounts bought at each taker token\n    ///         amount.\n    function sampleSellsFromBancorGlobal(\n        BancorSamplerOpts memory opts,\n        address takerToken,\n        address makerToken\n    )\n        public\n        view\n        returns (address bancorNetwork, address[] memory path, uint256[] memory makerTokenAmounts)\n    {\n        (bancorNetwork, path, makerTokenAmounts) = _sampleSellsFromBancor(\n            opts,\n            takerToken,\n            makerToken,\n            SAMPLE_VALUES\n        );\n    }\n\n    /// @dev Sample sell quotes from Bancor.\n    /// @param opts BancorSamplerOpts The Bancor registry contract address and paths\n    /// @param takerToken Address of the taker token (what to sell).\n    /// @param makerToken Address of the maker token (what to buy).\n    /// @return bancorNetwork the Bancor Network address\n    /// @return path the selected conversion path from bancor\n    /// @return makerTokenAmounts Maker amounts bought at each taker token\n    ///         amount.\n    function _sampleSellsFromBancor(\n        BancorSamplerOpts memory opts,\n        address takerToken,\n        address makerToken,\n        uint256[] memory takerTokenAmounts\n    )\n        internal\n        view\n        returns (address bancorNetwork, address[] memory path, uint256[] memory makerTokenAmounts)\n    {\n        if (opts.paths.length == 0) {\n            return (bancorNetwork, path, makerTokenAmounts);\n        }\n        (bancorNetwork, path) = _findBestPath(opts, takerToken, makerToken, takerTokenAmounts);\n        makerTokenAmounts = new uint256[](takerTokenAmounts.length);\n\n        for (uint256 i = 0; i < makerTokenAmounts.length; i++) {\n            try\n                IBancorNetwork(bancorNetwork)\n                    .rateByPath\n                        {gas: BANCOR_CALL_GAS}\n                        (path, takerTokenAmounts[i])\n                returns (uint256 amount)\n            {\n                makerTokenAmounts[i] = amount;\n                // Break early if there are 0 amounts\n                if (makerTokenAmounts[i] == 0) {\n                    break;\n                }\n            } catch {\n                // Swallow failures, leaving all results as zero.\n                break;\n            }\n        }\n        return (bancorNetwork, path, makerTokenAmounts);\n    }\n\n    /// @dev Sample buy quotes from Bancor. Unimplemented\n    /// @param opts BancorSamplerOpts The Bancor registry contract address and paths\n    /// @param takerToken Address of the taker token (what to sell).\n    /// @param makerToken Address of the maker token (what to buy).\n    /// @return bancorNetwork the Bancor Network address\n    /// @return path the selected conversion path from bancor\n    /// @return takerTokenAmounts Taker amounts sold at each maker token\n    ///         amount.\n    function sampleBuysFromBancorGlobal(\n        BancorSamplerOpts memory opts,\n        address takerToken,\n        address makerToken\n    )\n        public\n        view\n        returns (address bancorNetwork, address[] memory path, uint256[] memory takerTokenAmounts)\n    {\n        takerTokenAmounts = new uint256[](SAMPLE_VALUES.length);\n    }\n\n    function _findBestPath(\n        BancorSamplerOpts memory opts,\n        address takerToken,\n        address makerToken,\n        uint256[] memory takerTokenAmounts\n    )\n        internal\n        view\n        returns (address bancorNetwork, address[] memory path)\n    {\n        bancorNetwork = opts.registry.getAddress(opts.registry.BANCOR_NETWORK());\n        if (opts.paths.length == 0) {\n            return (bancorNetwork, path);\n        }\n        uint256 maxBoughtAmount = 0;\n        // Find the best path by selling the largest taker amount\n        for (uint256 i = 0; i < opts.paths.length; i++) {\n            if (opts.paths[i].length < 2) {\n                continue;\n            }\n\n            try\n                IBancorNetwork(bancorNetwork)\n                    .rateByPath\n                        {gas: BANCOR_CALL_GAS}\n                        (opts.paths[i], takerTokenAmounts[takerTokenAmounts.length-1])\n                returns (uint256 amount)\n            {\n                if (amount > maxBoughtAmount) {\n                    maxBoughtAmount = amount;\n                    path = opts.paths[i];\n                }\n            } catch {\n                // Swallow failures, leaving all results as zero.\n                continue;\n            }\n        }\n    }\n}\n",
        "./interfaces/IBancor.sol": "// SPDX-License-Identifier: Apache-2.0\n/*\n\n  Copyright 2020 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.6;\n\n\ninterface IBancor {}\n\ninterface IBancorNetwork {\n  function conversionPath(address _sourceToken, address _targetToken) external view returns (address[] memory);\n  function rateByPath(address[] memory _path, uint256 _amount) external view returns (uint256);\n}\n\ninterface IBancorRegistry {\n    function getAddress(bytes32 _contractName) external view returns (address);\n    function BANCOR_NETWORK() external view returns (bytes32);\n}\n",
        "./SamplerBase.sol": "// SPDX-License-Identifier: Apache-2.0\n/*\n\n  Copyright 2021 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.6;\npragma experimental ABIEncoderV2;\n\ncontract SamplerBase\n{\n    /// @dev Stored Sample values for each Sampler to pull\n    uint256[] internal SAMPLE_VALUES = new uint256[](0);\n\n    function setSampleValues(uint256[] memory sampleValues)\n        public\n    {\n        SAMPLE_VALUES = sampleValues;\n    }\n\n    modifier resetsSampleValues\n    {\n        uint256[] memory sampleValues = SAMPLE_VALUES;\n        _;\n        SAMPLE_VALUES = sampleValues;\n    }\n}\n"
    },
    "compiler": {
        "name": "solc",
        "version": "0.6.12+commit.27d51765",
        "settings": {
            "remappings": [],
            "optimizer": {
                "enabled": true,
                "runs": 200,
                "details": {
                    "yul": true,
                    "deduplicate": true
                }
            },
            "outputSelection": {
                "*": {
                    "*": [
                        "abi",
                        "devdoc",
                        "evm.bytecode.object",
                        "evm.bytecode.sourceMap",
                        "evm.deployedBytecode.object",
                        "evm.deployedBytecode.sourceMap"
                    ]
                }
            },
            "evmVersion": "istanbul"
        }
    },
    "chains": {}
}

{
    "schemaVersion": "2.0.0",
    "contractName": "BalancerV2BatchSampler",
    "compilerOutput": {
        "abi": [
            {
                "inputs": [
                    {
                        "internalType": "contract IBalancerV2Vault",
                        "name": "vault",
                        "type": "address"
                    },
                    {
                        "components": [
                            {
                                "internalType": "bytes32",
                                "name": "poolId",
                                "type": "bytes32"
                            },
                            {
                                "internalType": "uint256",
                                "name": "assetInIndex",
                                "type": "uint256"
                            },
                            {
                                "internalType": "uint256",
                                "name": "assetOutIndex",
                                "type": "uint256"
                            },
                            {
                                "internalType": "uint256",
                                "name": "amount",
                                "type": "uint256"
                            },
                            {
                                "internalType": "bytes",
                                "name": "userData",
                                "type": "bytes"
                            }
                        ],
                        "internalType": "struct IBalancerV2Vault.BatchSwapStep[]",
                        "name": "swapSteps",
                        "type": "tuple[]"
                    },
                    {
                        "internalType": "address[]",
                        "name": "swapAssets",
                        "type": "address[]"
                    },
                    {
                        "internalType": "uint256[]",
                        "name": "makerTokenAmounts",
                        "type": "uint256[]"
                    }
                ],
                "name": "sampleMultihopBuysFromBalancerV2",
                "outputs": [
                    {
                        "internalType": "uint256[]",
                        "name": "takerTokenAmounts",
                        "type": "uint256[]"
                    }
                ],
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "inputs": [
                    {
                        "internalType": "contract IBalancerV2Vault",
                        "name": "vault",
                        "type": "address"
                    },
                    {
                        "components": [
                            {
                                "internalType": "bytes32",
                                "name": "poolId",
                                "type": "bytes32"
                            },
                            {
                                "internalType": "uint256",
                                "name": "assetInIndex",
                                "type": "uint256"
                            },
                            {
                                "internalType": "uint256",
                                "name": "assetOutIndex",
                                "type": "uint256"
                            },
                            {
                                "internalType": "uint256",
                                "name": "amount",
                                "type": "uint256"
                            },
                            {
                                "internalType": "bytes",
                                "name": "userData",
                                "type": "bytes"
                            }
                        ],
                        "internalType": "struct IBalancerV2Vault.BatchSwapStep[]",
                        "name": "swapSteps",
                        "type": "tuple[]"
                    },
                    {
                        "internalType": "address[]",
                        "name": "swapAssets",
                        "type": "address[]"
                    },
                    {
                        "internalType": "uint256[]",
                        "name": "takerTokenAmounts",
                        "type": "uint256[]"
                    }
                ],
                "name": "sampleMultihopSellsFromBalancerV2",
                "outputs": [
                    {
                        "internalType": "uint256[]",
                        "name": "makerTokenAmounts",
                        "type": "uint256[]"
                    }
                ],
                "stateMutability": "nonpayable",
                "type": "function"
            }
        ],
        "devdoc": {
            "kind": "dev",
            "methods": {
                "sampleMultihopBuysFromBalancerV2(address,(bytes32,uint256,uint256,uint256,bytes)[],address[],uint256[])": {
                    "details": "Sample buy quotes from Balancer V2 supporting multihops.",
                    "params": {
                        "makerTokenAmounts": "Maker token buy amount for each sample.",
                        "swapAssets": "Array of token address for swaps.",
                        "swapSteps": "Array of swap steps (can be >= 1)."
                    }
                },
                "sampleMultihopSellsFromBalancerV2(address,(bytes32,uint256,uint256,uint256,bytes)[],address[],uint256[])": {
                    "details": "Sample sell quotes from Balancer V2 supporting multihops.",
                    "params": {
                        "swapAssets": "Array of token address for swaps.",
                        "swapSteps": "Array of swap steps (can be >= 1).",
                        "takerTokenAmounts": "Taker token sell amount for each sample."
                    }
                }
            },
            "version": 1
        },
        "evm": {
            "bytecode": {
                "linkReferences": {},
                "object": "0x608060405234801561001057600080fd5b50610ba3806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80631976f5261461003b578063cc130e8314610064575b600080fd5b61004e6100493660046106cc565b610077565b60405161005b91906109dd565b60405180910390f35b61004e6100723660046106cc565b6101ee565b80516060908067ffffffffffffffff8111801561009357600080fd5b506040519080825280602002602001820160405280156100bd578160200160208202803683370190505b5091506100c8610390565b6100d0610361565b905060005b828110156101e3578481815181106100e957fe5b6020026020010151876000815181106100fe57fe5b602090810291909101015160600152604051637c26833760e11b81526001600160a01b0389169063f84d066e90610140906001908b908b9088906004016109ee565b600060405180830381600087803b15801561015a57600080fd5b505af192505050801561018f57506040513d6000823e601f3d908101601f1916820160405261018c919081019061068f565b60015b610198576101e3565b6000816000815181106101a757fe5b60200260200101519050600081136101c05750506101e3565b808684815181106101cd57fe5b60200260200101818152505050506001016100d5565b505050949350505050565b80516060908067ffffffffffffffff8111801561020a57600080fd5b50604051908082528060200260200182016040528015610234578160200160208202803683370190505b50915061023f610390565b610247610361565b905060005b828110156101e35784818151811061026057fe5b60200260200101518760008151811061027557fe5b602090810291909101015160600152604051637c26833760e11b81526001600160a01b0389169063f84d066e906102b7906000908b908b9088906004016109ee565b600060405180830381600087803b1580156102d157600080fd5b505af192505050801561030657506040513d6000823e601f3d908101601f19168201604052610303919081019061068f565b60015b61030f576101e3565b60008160018351038151811061032157fe5b60200260200101516000190290506000811361033e5750506101e3565b8086848151811061034b57fe5b602002602001018181525050505060010161024c565b610369610390565b50604080516080810182523080825260006020830181905292820152606081019190915290565b60408051608081018252600080825260208201819052918101829052606081019190915290565b80356103c281610b47565b92915050565b600082601f8301126103d957600080fd5b81356103ec6103e782610a58565b610a31565b9150818183526020840193506020810190508385602084028201111561041157600080fd5b60005b8381101561043d578161042788826103b7565b8452506020928301929190910190600101610414565b5050505092915050565b600082601f83011261045857600080fd5b81516104666103e782610a58565b9150818183526020840193506020810190508385602084028201111561048b57600080fd5b60005b8381101561043d57816104a188826105e9565b845250602092830192919091019060010161048e565b600082601f8301126104c857600080fd5b81356104d66103e782610a58565b81815260209384019390925082018360005b8381101561043d57813586016104fe88826105f4565b84525060209283019291909101906001016104e8565b600082601f83011261052557600080fd5b81356105336103e782610a58565b9150818183526020840193506020810190508385602084028201111561055857600080fd5b60005b8381101561043d578161056e8882610584565b845250602092830192919091019060010161055b565b80356103c281610b5b565b600082601f8301126105a057600080fd5b81356105ae6103e782610a79565b915080825260208301602083018583830111156105ca57600080fd5b6105d5838284610af8565b50505092915050565b80356103c281610b64565b80516103c281610b5b565b600060a0828403121561060657600080fd5b61061060a0610a31565b9050600061061e8484610584565b825250602061062f84848301610584565b602083015250604061064384828501610584565b604083015250606061065784828501610584565b606083015250608082013567ffffffffffffffff81111561067757600080fd5b6106838482850161058f565b60808301525092915050565b6000602082840312156106a157600080fd5b815167ffffffffffffffff8111156106b857600080fd5b6106c484828501610447565b949350505050565b600080600080608085870312156106e257600080fd5b60006106ee87876105de565b945050602085013567ffffffffffffffff81111561070b57600080fd5b610717878288016104b7565b935050604085013567ffffffffffffffff81111561073457600080fd5b610740878288016103c8565b925050606085013567ffffffffffffffff81111561075d57600080fd5b61076987828801610514565b91505092959194509250565b600061078183836107a8565b505060200190565b6000610795838361091f565b9392505050565b600061078183836108d5565b6107b181610ab4565b82525050565b60006107c282610aa7565b6107cc8185610aab565b93506107d783610aa1565b8060005b838110156108055781516107ef8882610775565b97506107fa83610aa1565b9250506001016107db565b509495945050505050565b600061081b82610aa7565b6108258185610aab565b93508360208202850161083785610aa1565b8060005b8581101561087157848403895281516108548582610789565b945061085f83610aa1565b60209a909a019992505060010161083b565b5091979650505050505050565b600061088982610aa7565b6108938185610aab565b935061089e83610aa1565b8060005b838110156108055781516108b6888261079c565b97506108c183610aa1565b9250506001016108a2565b6107b181610abf565b6107b181610ac4565b60006108e982610aa7565b6108f38185610aab565b9350610903818560208601610b04565b61090c81610b30565b9093019392505050565b6107b181610aed565b805160009060a084019061093385826108d5565b50602083015161094660208601826108d5565b50604083015161095960408601826108d5565b50606083015161096c60608601826108d5565b506080830151848203608086015261098482826108de565b95945050505050565b8051608083019061099e84826107a8565b5060208201516109b160208501826108cc565b5060408201516109c460408501826107a8565b5060608201516109d760608501826108cc565b50505050565b60208082528101610795818461087e565b60e081016109fc8287610916565b8181036020830152610a0e8186610810565b90508181036040830152610a2281856107b7565b9050610984606083018461098d565b60405181810167ffffffffffffffff81118282101715610a5057600080fd5b604052919050565b600067ffffffffffffffff821115610a6f57600080fd5b5060209081020190565b600067ffffffffffffffff821115610a9057600080fd5b506020601f91909101601f19160190565b60200190565b5190565b90815260200190565b60006103c282610ae1565b151590565b90565b60006103c282610ab4565b80610adc81610b3a565b919050565b6001600160a01b031690565b60006103c282610ad2565b82818337506000910152565b60005b83811015610b1f578181015183820152602001610b07565b838111156109d75750506000910152565b601f01601f191690565b60028110610b4457fe5b50565b610b5081610ab4565b8114610b4457600080fd5b610b5081610ac4565b610b5081610ac756fea2646970667358221220f01c4d10ee773993be80d64265c4a2dfcee4ac8dede7579b28e0206bcf31ec6064736f6c634300060c0033",
                "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBA3 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1976F526 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xCC130E83 EQ PUSH2 0x64 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0x6CC JUMP JUMPDEST PUSH2 0x77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x9DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH2 0x72 CALLDATASIZE PUSH1 0x4 PUSH2 0x6CC JUMP JUMPDEST PUSH2 0x1EE JUMP JUMPDEST DUP1 MLOAD PUSH1 0x60 SWAP1 DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xBD JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP2 POP PUSH2 0xC8 PUSH2 0x390 JUMP JUMPDEST PUSH2 0xD0 PUSH2 0x361 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1E3 JUMPI DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xE9 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xFE JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x60 ADD MSTORE PUSH1 0x40 MLOAD PUSH4 0x7C268337 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 PUSH4 0xF84D066E SWAP1 PUSH2 0x140 SWAP1 PUSH1 0x1 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x9EE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x18F JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x18C SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x68F JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x198 JUMPI PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1A7 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP2 SGT PUSH2 0x1C0 JUMPI POP POP PUSH2 0x1E3 JUMP JUMPDEST DUP1 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1CD JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP POP POP PUSH1 0x1 ADD PUSH2 0xD5 JUMP JUMPDEST POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x60 SWAP1 DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x20A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x234 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP2 POP PUSH2 0x23F PUSH2 0x390 JUMP JUMPDEST PUSH2 0x247 PUSH2 0x361 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1E3 JUMPI DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x260 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x275 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x60 ADD MSTORE PUSH1 0x40 MLOAD PUSH4 0x7C268337 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 PUSH4 0xF84D066E SWAP1 PUSH2 0x2B7 SWAP1 PUSH1 0x0 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x9EE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x306 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x303 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x68F JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x30F JUMPI PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 DUP4 MLOAD SUB DUP2 MLOAD DUP2 LT PUSH2 0x321 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 NOT MUL SWAP1 POP PUSH1 0x0 DUP2 SGT PUSH2 0x33E JUMPI POP POP PUSH2 0x1E3 JUMP JUMPDEST DUP1 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x34B JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP POP POP PUSH1 0x1 ADD PUSH2 0x24C JUMP JUMPDEST PUSH2 0x369 PUSH2 0x390 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE ADDRESS DUP1 DUP3 MSTORE PUSH1 0x0 PUSH1 0x20 DUP4 ADD DUP2 SWAP1 MSTORE SWAP3 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x3C2 DUP2 PUSH2 0xB47 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3EC PUSH2 0x3E7 DUP3 PUSH2 0xA58 JUMP JUMPDEST PUSH2 0xA31 JUMP JUMPDEST SWAP2 POP DUP2 DUP2 DUP4 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP2 ADD SWAP1 POP DUP4 DUP6 PUSH1 0x20 DUP5 MUL DUP3 ADD GT ISZERO PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x43D JUMPI DUP2 PUSH2 0x427 DUP9 DUP3 PUSH2 0x3B7 JUMP JUMPDEST DUP5 MSTORE POP PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x414 JUMP JUMPDEST POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x458 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x466 PUSH2 0x3E7 DUP3 PUSH2 0xA58 JUMP JUMPDEST SWAP2 POP DUP2 DUP2 DUP4 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP2 ADD SWAP1 POP DUP4 DUP6 PUSH1 0x20 DUP5 MUL DUP3 ADD GT ISZERO PUSH2 0x48B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x43D JUMPI DUP2 PUSH2 0x4A1 DUP9 DUP3 PUSH2 0x5E9 JUMP JUMPDEST DUP5 MSTORE POP PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x48E JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4D6 PUSH2 0x3E7 DUP3 PUSH2 0xA58 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 POP DUP3 ADD DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x43D JUMPI DUP2 CALLDATALOAD DUP7 ADD PUSH2 0x4FE DUP9 DUP3 PUSH2 0x5F4 JUMP JUMPDEST DUP5 MSTORE POP PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x525 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x533 PUSH2 0x3E7 DUP3 PUSH2 0xA58 JUMP JUMPDEST SWAP2 POP DUP2 DUP2 DUP4 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP2 ADD SWAP1 POP DUP4 DUP6 PUSH1 0x20 DUP5 MUL DUP3 ADD GT ISZERO PUSH2 0x558 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x43D JUMPI DUP2 PUSH2 0x56E DUP9 DUP3 PUSH2 0x584 JUMP JUMPDEST DUP5 MSTORE POP PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x55B JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x3C2 DUP2 PUSH2 0xB5B JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x5A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x5AE PUSH2 0x3E7 DUP3 PUSH2 0xA79 JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP4 ADD DUP6 DUP4 DUP4 ADD GT ISZERO PUSH2 0x5CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5D5 DUP4 DUP3 DUP5 PUSH2 0xAF8 JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x3C2 DUP2 PUSH2 0xB64 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x3C2 DUP2 PUSH2 0xB5B JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x606 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x610 PUSH1 0xA0 PUSH2 0xA31 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x61E DUP5 DUP5 PUSH2 0x584 JUMP JUMPDEST DUP3 MSTORE POP PUSH1 0x20 PUSH2 0x62F DUP5 DUP5 DUP4 ADD PUSH2 0x584 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x643 DUP5 DUP3 DUP6 ADD PUSH2 0x584 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x657 DUP5 DUP3 DUP6 ADD PUSH2 0x584 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x677 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x683 DUP5 DUP3 DUP6 ADD PUSH2 0x58F JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6C4 DUP5 DUP3 DUP6 ADD PUSH2 0x447 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x6E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x6EE DUP8 DUP8 PUSH2 0x5DE JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x70B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x717 DUP8 DUP3 DUP9 ADD PUSH2 0x4B7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x734 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x740 DUP8 DUP3 DUP9 ADD PUSH2 0x3C8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x75D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x769 DUP8 DUP3 DUP9 ADD PUSH2 0x514 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x781 DUP4 DUP4 PUSH2 0x7A8 JUMP JUMPDEST POP POP PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x795 DUP4 DUP4 PUSH2 0x91F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x781 DUP4 DUP4 PUSH2 0x8D5 JUMP JUMPDEST PUSH2 0x7B1 DUP2 PUSH2 0xAB4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7C2 DUP3 PUSH2 0xAA7 JUMP JUMPDEST PUSH2 0x7CC DUP2 DUP6 PUSH2 0xAAB JUMP JUMPDEST SWAP4 POP PUSH2 0x7D7 DUP4 PUSH2 0xAA1 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x805 JUMPI DUP2 MLOAD PUSH2 0x7EF DUP9 DUP3 PUSH2 0x775 JUMP JUMPDEST SWAP8 POP PUSH2 0x7FA DUP4 PUSH2 0xAA1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 ADD PUSH2 0x7DB JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x81B DUP3 PUSH2 0xAA7 JUMP JUMPDEST PUSH2 0x825 DUP2 DUP6 PUSH2 0xAAB JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x837 DUP6 PUSH2 0xAA1 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x871 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x854 DUP6 DUP3 PUSH2 0x789 JUMP JUMPDEST SWAP5 POP PUSH2 0x85F DUP4 PUSH2 0xAA1 JUMP JUMPDEST PUSH1 0x20 SWAP11 SWAP1 SWAP11 ADD SWAP10 SWAP3 POP POP PUSH1 0x1 ADD PUSH2 0x83B JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x889 DUP3 PUSH2 0xAA7 JUMP JUMPDEST PUSH2 0x893 DUP2 DUP6 PUSH2 0xAAB JUMP JUMPDEST SWAP4 POP PUSH2 0x89E DUP4 PUSH2 0xAA1 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x805 JUMPI DUP2 MLOAD PUSH2 0x8B6 DUP9 DUP3 PUSH2 0x79C JUMP JUMPDEST SWAP8 POP PUSH2 0x8C1 DUP4 PUSH2 0xAA1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 ADD PUSH2 0x8A2 JUMP JUMPDEST PUSH2 0x7B1 DUP2 PUSH2 0xABF JUMP JUMPDEST PUSH2 0x7B1 DUP2 PUSH2 0xAC4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8E9 DUP3 PUSH2 0xAA7 JUMP JUMPDEST PUSH2 0x8F3 DUP2 DUP6 PUSH2 0xAAB JUMP JUMPDEST SWAP4 POP PUSH2 0x903 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xB04 JUMP JUMPDEST PUSH2 0x90C DUP2 PUSH2 0xB30 JUMP JUMPDEST SWAP1 SWAP4 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x7B1 DUP2 PUSH2 0xAED JUMP JUMPDEST DUP1 MLOAD PUSH1 0x0 SWAP1 PUSH1 0xA0 DUP5 ADD SWAP1 PUSH2 0x933 DUP6 DUP3 PUSH2 0x8D5 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x946 PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x8D5 JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x959 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x8D5 JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x96C PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x8D5 JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x80 DUP7 ADD MSTORE PUSH2 0x984 DUP3 DUP3 PUSH2 0x8DE JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x80 DUP4 ADD SWAP1 PUSH2 0x99E DUP5 DUP3 PUSH2 0x7A8 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x9B1 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x8CC JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x9C4 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x7A8 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x9D7 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x8CC JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x795 DUP2 DUP5 PUSH2 0x87E JUMP JUMPDEST PUSH1 0xE0 DUP2 ADD PUSH2 0x9FC DUP3 DUP8 PUSH2 0x916 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0xA0E DUP2 DUP7 PUSH2 0x810 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0xA22 DUP2 DUP6 PUSH2 0x7B7 JUMP JUMPDEST SWAP1 POP PUSH2 0x984 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x98D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xA50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xA6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 SWAP1 DUP2 MUL ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xA90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 PUSH1 0x1F SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C2 DUP3 PUSH2 0xAE1 JUMP JUMPDEST ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C2 DUP3 PUSH2 0xAB4 JUMP JUMPDEST DUP1 PUSH2 0xADC DUP2 PUSH2 0xB3A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C2 DUP3 PUSH2 0xAD2 JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB1F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xB07 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x9D7 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0xB44 JUMPI INVALID JUMPDEST POP JUMP JUMPDEST PUSH2 0xB50 DUP2 PUSH2 0xAB4 JUMP JUMPDEST DUP2 EQ PUSH2 0xB44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB50 DUP2 PUSH2 0xAC4 JUMP JUMPDEST PUSH2 0xB50 DUP2 PUSH2 0xAC7 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE SHR 0x4D LT 0xEE PUSH24 0x3993BE80D64265C4A2DFCEE4AC8DEDE7579B28E0206BCF31 0xEC PUSH1 0x64 PUSH20 0x6F6C634300060C00330000000000000000000000 ",
                "sourceMap": "754:3654:12:-:0;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
                "immutableReferences": {},
                "linkReferences": {},
                "object": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c80631976f5261461003b578063cc130e8314610064575b600080fd5b61004e6100493660046106cc565b610077565b60405161005b91906109dd565b60405180910390f35b61004e6100723660046106cc565b6101ee565b80516060908067ffffffffffffffff8111801561009357600080fd5b506040519080825280602002602001820160405280156100bd578160200160208202803683370190505b5091506100c8610390565b6100d0610361565b905060005b828110156101e3578481815181106100e957fe5b6020026020010151876000815181106100fe57fe5b602090810291909101015160600152604051637c26833760e11b81526001600160a01b0389169063f84d066e90610140906001908b908b9088906004016109ee565b600060405180830381600087803b15801561015a57600080fd5b505af192505050801561018f57506040513d6000823e601f3d908101601f1916820160405261018c919081019061068f565b60015b610198576101e3565b6000816000815181106101a757fe5b60200260200101519050600081136101c05750506101e3565b808684815181106101cd57fe5b60200260200101818152505050506001016100d5565b505050949350505050565b80516060908067ffffffffffffffff8111801561020a57600080fd5b50604051908082528060200260200182016040528015610234578160200160208202803683370190505b50915061023f610390565b610247610361565b905060005b828110156101e35784818151811061026057fe5b60200260200101518760008151811061027557fe5b602090810291909101015160600152604051637c26833760e11b81526001600160a01b0389169063f84d066e906102b7906000908b908b9088906004016109ee565b600060405180830381600087803b1580156102d157600080fd5b505af192505050801561030657506040513d6000823e601f3d908101601f19168201604052610303919081019061068f565b60015b61030f576101e3565b60008160018351038151811061032157fe5b60200260200101516000190290506000811361033e5750506101e3565b8086848151811061034b57fe5b602002602001018181525050505060010161024c565b610369610390565b50604080516080810182523080825260006020830181905292820152606081019190915290565b60408051608081018252600080825260208201819052918101829052606081019190915290565b80356103c281610b47565b92915050565b600082601f8301126103d957600080fd5b81356103ec6103e782610a58565b610a31565b9150818183526020840193506020810190508385602084028201111561041157600080fd5b60005b8381101561043d578161042788826103b7565b8452506020928301929190910190600101610414565b5050505092915050565b600082601f83011261045857600080fd5b81516104666103e782610a58565b9150818183526020840193506020810190508385602084028201111561048b57600080fd5b60005b8381101561043d57816104a188826105e9565b845250602092830192919091019060010161048e565b600082601f8301126104c857600080fd5b81356104d66103e782610a58565b81815260209384019390925082018360005b8381101561043d57813586016104fe88826105f4565b84525060209283019291909101906001016104e8565b600082601f83011261052557600080fd5b81356105336103e782610a58565b9150818183526020840193506020810190508385602084028201111561055857600080fd5b60005b8381101561043d578161056e8882610584565b845250602092830192919091019060010161055b565b80356103c281610b5b565b600082601f8301126105a057600080fd5b81356105ae6103e782610a79565b915080825260208301602083018583830111156105ca57600080fd5b6105d5838284610af8565b50505092915050565b80356103c281610b64565b80516103c281610b5b565b600060a0828403121561060657600080fd5b61061060a0610a31565b9050600061061e8484610584565b825250602061062f84848301610584565b602083015250604061064384828501610584565b604083015250606061065784828501610584565b606083015250608082013567ffffffffffffffff81111561067757600080fd5b6106838482850161058f565b60808301525092915050565b6000602082840312156106a157600080fd5b815167ffffffffffffffff8111156106b857600080fd5b6106c484828501610447565b949350505050565b600080600080608085870312156106e257600080fd5b60006106ee87876105de565b945050602085013567ffffffffffffffff81111561070b57600080fd5b610717878288016104b7565b935050604085013567ffffffffffffffff81111561073457600080fd5b610740878288016103c8565b925050606085013567ffffffffffffffff81111561075d57600080fd5b61076987828801610514565b91505092959194509250565b600061078183836107a8565b505060200190565b6000610795838361091f565b9392505050565b600061078183836108d5565b6107b181610ab4565b82525050565b60006107c282610aa7565b6107cc8185610aab565b93506107d783610aa1565b8060005b838110156108055781516107ef8882610775565b97506107fa83610aa1565b9250506001016107db565b509495945050505050565b600061081b82610aa7565b6108258185610aab565b93508360208202850161083785610aa1565b8060005b8581101561087157848403895281516108548582610789565b945061085f83610aa1565b60209a909a019992505060010161083b565b5091979650505050505050565b600061088982610aa7565b6108938185610aab565b935061089e83610aa1565b8060005b838110156108055781516108b6888261079c565b97506108c183610aa1565b9250506001016108a2565b6107b181610abf565b6107b181610ac4565b60006108e982610aa7565b6108f38185610aab565b9350610903818560208601610b04565b61090c81610b30565b9093019392505050565b6107b181610aed565b805160009060a084019061093385826108d5565b50602083015161094660208601826108d5565b50604083015161095960408601826108d5565b50606083015161096c60608601826108d5565b506080830151848203608086015261098482826108de565b95945050505050565b8051608083019061099e84826107a8565b5060208201516109b160208501826108cc565b5060408201516109c460408501826107a8565b5060608201516109d760608501826108cc565b50505050565b60208082528101610795818461087e565b60e081016109fc8287610916565b8181036020830152610a0e8186610810565b90508181036040830152610a2281856107b7565b9050610984606083018461098d565b60405181810167ffffffffffffffff81118282101715610a5057600080fd5b604052919050565b600067ffffffffffffffff821115610a6f57600080fd5b5060209081020190565b600067ffffffffffffffff821115610a9057600080fd5b506020601f91909101601f19160190565b60200190565b5190565b90815260200190565b60006103c282610ae1565b151590565b90565b60006103c282610ab4565b80610adc81610b3a565b919050565b6001600160a01b031690565b60006103c282610ad2565b82818337506000910152565b60005b83811015610b1f578181015183820152602001610b07565b838111156109d75750506000910152565b601f01601f191690565b60028110610b4457fe5b50565b610b5081610ab4565b8114610b4457600080fd5b610b5081610ac4565b610b5081610ac756fea2646970667358221220f01c4d10ee773993be80d64265c4a2dfcee4ac8dede7579b28e0206bcf31ec6064736f6c634300060c0033",
                "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1976F526 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xCC130E83 EQ PUSH2 0x64 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0x6CC JUMP JUMPDEST PUSH2 0x77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x9DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH2 0x72 CALLDATASIZE PUSH1 0x4 PUSH2 0x6CC JUMP JUMPDEST PUSH2 0x1EE JUMP JUMPDEST DUP1 MLOAD PUSH1 0x60 SWAP1 DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xBD JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP2 POP PUSH2 0xC8 PUSH2 0x390 JUMP JUMPDEST PUSH2 0xD0 PUSH2 0x361 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1E3 JUMPI DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xE9 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xFE JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x60 ADD MSTORE PUSH1 0x40 MLOAD PUSH4 0x7C268337 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 PUSH4 0xF84D066E SWAP1 PUSH2 0x140 SWAP1 PUSH1 0x1 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x9EE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x18F JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x18C SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x68F JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x198 JUMPI PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1A7 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP2 SGT PUSH2 0x1C0 JUMPI POP POP PUSH2 0x1E3 JUMP JUMPDEST DUP1 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1CD JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP POP POP PUSH1 0x1 ADD PUSH2 0xD5 JUMP JUMPDEST POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x60 SWAP1 DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x20A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x234 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP2 POP PUSH2 0x23F PUSH2 0x390 JUMP JUMPDEST PUSH2 0x247 PUSH2 0x361 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1E3 JUMPI DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x260 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP8 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x275 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x60 ADD MSTORE PUSH1 0x40 MLOAD PUSH4 0x7C268337 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 PUSH4 0xF84D066E SWAP1 PUSH2 0x2B7 SWAP1 PUSH1 0x0 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x9EE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x306 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x303 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x68F JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x30F JUMPI PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 DUP4 MLOAD SUB DUP2 MLOAD DUP2 LT PUSH2 0x321 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 NOT MUL SWAP1 POP PUSH1 0x0 DUP2 SGT PUSH2 0x33E JUMPI POP POP PUSH2 0x1E3 JUMP JUMPDEST DUP1 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x34B JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP POP POP PUSH1 0x1 ADD PUSH2 0x24C JUMP JUMPDEST PUSH2 0x369 PUSH2 0x390 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE ADDRESS DUP1 DUP3 MSTORE PUSH1 0x0 PUSH1 0x20 DUP4 ADD DUP2 SWAP1 MSTORE SWAP3 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x3C2 DUP2 PUSH2 0xB47 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3EC PUSH2 0x3E7 DUP3 PUSH2 0xA58 JUMP JUMPDEST PUSH2 0xA31 JUMP JUMPDEST SWAP2 POP DUP2 DUP2 DUP4 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP2 ADD SWAP1 POP DUP4 DUP6 PUSH1 0x20 DUP5 MUL DUP3 ADD GT ISZERO PUSH2 0x411 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x43D JUMPI DUP2 PUSH2 0x427 DUP9 DUP3 PUSH2 0x3B7 JUMP JUMPDEST DUP5 MSTORE POP PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x414 JUMP JUMPDEST POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x458 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x466 PUSH2 0x3E7 DUP3 PUSH2 0xA58 JUMP JUMPDEST SWAP2 POP DUP2 DUP2 DUP4 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP2 ADD SWAP1 POP DUP4 DUP6 PUSH1 0x20 DUP5 MUL DUP3 ADD GT ISZERO PUSH2 0x48B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x43D JUMPI DUP2 PUSH2 0x4A1 DUP9 DUP3 PUSH2 0x5E9 JUMP JUMPDEST DUP5 MSTORE POP PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x48E JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4D6 PUSH2 0x3E7 DUP3 PUSH2 0xA58 JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 POP DUP3 ADD DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x43D JUMPI DUP2 CALLDATALOAD DUP7 ADD PUSH2 0x4FE DUP9 DUP3 PUSH2 0x5F4 JUMP JUMPDEST DUP5 MSTORE POP PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x525 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x533 PUSH2 0x3E7 DUP3 PUSH2 0xA58 JUMP JUMPDEST SWAP2 POP DUP2 DUP2 DUP4 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP2 ADD SWAP1 POP DUP4 DUP6 PUSH1 0x20 DUP5 MUL DUP3 ADD GT ISZERO PUSH2 0x558 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x43D JUMPI DUP2 PUSH2 0x56E DUP9 DUP3 PUSH2 0x584 JUMP JUMPDEST DUP5 MSTORE POP PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x55B JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x3C2 DUP2 PUSH2 0xB5B JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x5A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x5AE PUSH2 0x3E7 DUP3 PUSH2 0xA79 JUMP JUMPDEST SWAP2 POP DUP1 DUP3 MSTORE PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP4 ADD DUP6 DUP4 DUP4 ADD GT ISZERO PUSH2 0x5CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5D5 DUP4 DUP3 DUP5 PUSH2 0xAF8 JUMP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x3C2 DUP2 PUSH2 0xB64 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x3C2 DUP2 PUSH2 0xB5B JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x606 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x610 PUSH1 0xA0 PUSH2 0xA31 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x61E DUP5 DUP5 PUSH2 0x584 JUMP JUMPDEST DUP3 MSTORE POP PUSH1 0x20 PUSH2 0x62F DUP5 DUP5 DUP4 ADD PUSH2 0x584 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x643 DUP5 DUP3 DUP6 ADD PUSH2 0x584 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x657 DUP5 DUP3 DUP6 ADD PUSH2 0x584 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x677 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x683 DUP5 DUP3 DUP6 ADD PUSH2 0x58F JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x6B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6C4 DUP5 DUP3 DUP6 ADD PUSH2 0x447 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x6E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x6EE DUP8 DUP8 PUSH2 0x5DE JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x70B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x717 DUP8 DUP3 DUP9 ADD PUSH2 0x4B7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x734 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x740 DUP8 DUP3 DUP9 ADD PUSH2 0x3C8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x75D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x769 DUP8 DUP3 DUP9 ADD PUSH2 0x514 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x781 DUP4 DUP4 PUSH2 0x7A8 JUMP JUMPDEST POP POP PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x795 DUP4 DUP4 PUSH2 0x91F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x781 DUP4 DUP4 PUSH2 0x8D5 JUMP JUMPDEST PUSH2 0x7B1 DUP2 PUSH2 0xAB4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7C2 DUP3 PUSH2 0xAA7 JUMP JUMPDEST PUSH2 0x7CC DUP2 DUP6 PUSH2 0xAAB JUMP JUMPDEST SWAP4 POP PUSH2 0x7D7 DUP4 PUSH2 0xAA1 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x805 JUMPI DUP2 MLOAD PUSH2 0x7EF DUP9 DUP3 PUSH2 0x775 JUMP JUMPDEST SWAP8 POP PUSH2 0x7FA DUP4 PUSH2 0xAA1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 ADD PUSH2 0x7DB JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x81B DUP3 PUSH2 0xAA7 JUMP JUMPDEST PUSH2 0x825 DUP2 DUP6 PUSH2 0xAAB JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x837 DUP6 PUSH2 0xAA1 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x871 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x854 DUP6 DUP3 PUSH2 0x789 JUMP JUMPDEST SWAP5 POP PUSH2 0x85F DUP4 PUSH2 0xAA1 JUMP JUMPDEST PUSH1 0x20 SWAP11 SWAP1 SWAP11 ADD SWAP10 SWAP3 POP POP PUSH1 0x1 ADD PUSH2 0x83B JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x889 DUP3 PUSH2 0xAA7 JUMP JUMPDEST PUSH2 0x893 DUP2 DUP6 PUSH2 0xAAB JUMP JUMPDEST SWAP4 POP PUSH2 0x89E DUP4 PUSH2 0xAA1 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x805 JUMPI DUP2 MLOAD PUSH2 0x8B6 DUP9 DUP3 PUSH2 0x79C JUMP JUMPDEST SWAP8 POP PUSH2 0x8C1 DUP4 PUSH2 0xAA1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 ADD PUSH2 0x8A2 JUMP JUMPDEST PUSH2 0x7B1 DUP2 PUSH2 0xABF JUMP JUMPDEST PUSH2 0x7B1 DUP2 PUSH2 0xAC4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8E9 DUP3 PUSH2 0xAA7 JUMP JUMPDEST PUSH2 0x8F3 DUP2 DUP6 PUSH2 0xAAB JUMP JUMPDEST SWAP4 POP PUSH2 0x903 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xB04 JUMP JUMPDEST PUSH2 0x90C DUP2 PUSH2 0xB30 JUMP JUMPDEST SWAP1 SWAP4 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x7B1 DUP2 PUSH2 0xAED JUMP JUMPDEST DUP1 MLOAD PUSH1 0x0 SWAP1 PUSH1 0xA0 DUP5 ADD SWAP1 PUSH2 0x933 DUP6 DUP3 PUSH2 0x8D5 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x946 PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x8D5 JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x959 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x8D5 JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x96C PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x8D5 JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x80 DUP7 ADD MSTORE PUSH2 0x984 DUP3 DUP3 PUSH2 0x8DE JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x80 DUP4 ADD SWAP1 PUSH2 0x99E DUP5 DUP3 PUSH2 0x7A8 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x9B1 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x8CC JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x9C4 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x7A8 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x9D7 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x8CC JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x795 DUP2 DUP5 PUSH2 0x87E JUMP JUMPDEST PUSH1 0xE0 DUP2 ADD PUSH2 0x9FC DUP3 DUP8 PUSH2 0x916 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0xA0E DUP2 DUP7 PUSH2 0x810 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0xA22 DUP2 DUP6 PUSH2 0x7B7 JUMP JUMPDEST SWAP1 POP PUSH2 0x984 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x98D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xA50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xA6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 SWAP1 DUP2 MUL ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xA90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x20 PUSH1 0x1F SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST MLOAD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C2 DUP3 PUSH2 0xAE1 JUMP JUMPDEST ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C2 DUP3 PUSH2 0xAB4 JUMP JUMPDEST DUP1 PUSH2 0xADC DUP2 PUSH2 0xB3A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C2 DUP3 PUSH2 0xAD2 JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xB1F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xB07 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x9D7 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0xB44 JUMPI INVALID JUMPDEST POP JUMP JUMPDEST PUSH2 0xB50 DUP2 PUSH2 0xAB4 JUMP JUMPDEST DUP2 EQ PUSH2 0xB44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB50 DUP2 PUSH2 0xAC4 JUMP JUMPDEST PUSH2 0xB50 DUP2 PUSH2 0xAC7 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE SHR 0x4D LT 0xEE PUSH24 0x3993BE80D64265C4A2DFCEE4AC8DEDE7579B28E0206BCF31 0xEC PUSH1 0x64 PUSH20 0x6F6C634300060C00330000000000000000000000 ",
                "sourceMap": "754:3654:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3136:1270;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1189:1567;;;;;;:::i;:::-;;:::i;3136:1270::-;3459:24;;3388:34;;3459:24;3513:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3513:25:12;;3493:45;;3548:48;;:::i;:::-;3611:18;:16;:18::i;:::-;3548:81;;3645:9;3640:760;3664:10;3660:1;:14;3640:760;;;3717:17;3735:1;3717:20;;;;;;;;;;;;;;3695:9;3705:1;3695:12;;;;;;;;;;;;;;;;;;:19;;:42;3818:91;;-1:-1:-1;;;3818:91:12;;-1:-1:-1;;;;;3818:20:12;;;;;:91;;3839:35;;3876:9;;3887:10;;3899:9;;3818:91;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3818:91:12;;;;;;;;;;;;:::i;:::-;;;3751:639;;4370:5;;3751:639;4078:21;4102:7;4110:1;4102:10;;;;;;;;;;;;;;4078:34;;4152:1;4134:14;:19;4130:71;;4177:5;;;;4130:71;4249:14;4218:17;4236:1;4218:20;;;;;;;;;;;;;:46;;;;;4026:253;;3676:3;;3640:760;;;;3136:1270;;;;;;;;:::o;1189:1567::-;1513:24;;1442:34;;1513:24;1567:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1567:25:12;;1547:45;;1602:48;;:::i;:::-;1665:18;:16;:18::i;:::-;1602:81;;1699:9;1694:1056;1718:10;1714:1;:14;1694:1056;;;1771:17;1789:1;1771:20;;;;;;;;;;;;;;1749:9;1759:1;1749:12;;;;;;;;;;;;;;;;;;:19;;:42;1932:90;;-1:-1:-1;;;1932:90:12;;-1:-1:-1;;;;;1932:20:12;;;;;:90;;1953:34;;1989:9;;2000:10;;2012:9;;1932:90;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1932:90:12;;;;;;;;;;;;:::i;:::-;;;1805:935;;2720:5;;1805:935;2397:24;2424:7;2449:1;2432:7;:14;:18;2424:27;;;;;;;;;;;;;;-1:-1:-1;;2424:32:12;2397:59;;2499:1;2478:17;:22;2474:74;;2524:5;;;;2474:74;2596:17;2565;2583:1;2565:20;;;;;;;;;;;;;:49;;;;;2139:490;;1730:3;;1694:1056;;755:378:13;830:38;;:::i;:::-;-1:-1:-1;903:223:13;;;;;;;;969:4;903:223;;;-1:-1:-1;903:223:13;;;;;;;;;;;;;;;;;755:378;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130::-;72:20;;97:33;72:20;97:33;:::i;:::-;57:78;;;;:::o;160:707::-;;277:3;270:4;262:6;258:17;254:27;244:2;;295:1;292;285:12;244:2;332:6;319:20;354:80;369:64;426:6;369:64;:::i;:::-;354:80;:::i;:::-;345:89;;451:5;476:6;469:5;462:21;506:4;498:6;494:17;484:27;;528:4;523:3;519:14;512:21;;581:6;628:3;620:4;612:6;608:17;603:3;599:27;596:36;593:2;;;645:1;642;635:12;593:2;670:1;655:206;680:6;677:1;674:13;655:206;;;738:3;760:37;793:3;781:10;760:37;:::i;:::-;748:50;;-1:-1;821:4;812:14;;;;840;;;;;702:1;695:9;655:206;;;659:14;237:630;;;;;;;:::o;892:719::-;;1019:3;1012:4;1004:6;1000:17;996:27;986:2;;1037:1;1034;1027:12;986:2;1067:6;1061:13;1089:79;1104:63;1160:6;1104:63;:::i;1089:79::-;1080:88;;1185:5;1210:6;1203:5;1196:21;1240:4;1232:6;1228:17;1218:27;;1262:4;1257:3;1253:14;1246:21;;1315:6;1362:3;1354:4;1346:6;1342:17;1337:3;1333:27;1330:36;1327:2;;;1379:1;1376;1369:12;1327:2;1404:1;1389:216;1414:6;1411:1;1408:13;1389:216;;;1472:3;1494:47;1537:3;1525:10;1494:47;:::i;:::-;1482:60;;-1:-1;1565:4;1556:14;;;;1584;;;;;1436:1;1429:9;1389:216;;1667:774;;1816:3;1809:4;1801:6;1797:17;1793:27;1783:2;;1834:1;1831;1824:12;1783:2;1871:6;1858:20;1893:112;1908:96;1997:6;1908:96;:::i;1893:112::-;2033:21;;;2077:4;2065:17;;;;1884:121;;-1:-1;2090:14;;2065:17;2185:1;2170:265;2195:6;2192:1;2189:13;2170:265;;;2278:3;2265:17;2257:6;2253:30;2302:69;2367:3;2355:10;2302:69;:::i;:::-;2290:82;;-1:-1;2395:4;2386:14;;;;2414;;;;;2217:1;2210:9;2170:265;;2467:707;;2584:3;2577:4;2569:6;2565:17;2561:27;2551:2;;2602:1;2599;2592:12;2551:2;2639:6;2626:20;2661:80;2676:64;2733:6;2676:64;:::i;2661:80::-;2652:89;;2758:5;2783:6;2776:5;2769:21;2813:4;2805:6;2801:17;2791:27;;2835:4;2830:3;2826:14;2819:21;;2888:6;2935:3;2927:4;2919:6;2915:17;2910:3;2906:27;2903:36;2900:2;;;2952:1;2949;2942:12;2900:2;2977:1;2962:206;2987:6;2984:1;2981:13;2962:206;;;3045:3;3067:37;3100:3;3088:10;3067:37;:::i;:::-;3055:50;;-1:-1;3128:4;3119:14;;;;3147;;;;;3009:1;3002:9;2962:206;;3182:130;3249:20;;3274:33;3249:20;3274:33;:::i;3320:440::-;;3421:3;3414:4;3406:6;3402:17;3398:27;3388:2;;3439:1;3436;3429:12;3388:2;3476:6;3463:20;3498:64;3513:48;3554:6;3513:48;:::i;3498:64::-;3489:73;;3582:6;3575:5;3568:21;3618:4;3610:6;3606:17;3651:4;3644:5;3640:16;3686:3;3677:6;3672:3;3668:16;3665:25;3662:2;;;3703:1;3700;3693:12;3662:2;3713:41;3747:6;3742:3;3737;3713:41;:::i;:::-;3381:379;;;;;;;:::o;3768:182::-;3861:20;;3886:59;3861:20;3886:59;:::i;3957:132::-;4034:13;;4052:32;4034:13;4052:32;:::i;4140:1027::-;;4261:4;4249:9;4244:3;4240:19;4236:30;4233:2;;;4279:1;4276;4269:12;4233:2;4297:20;4312:4;4297:20;:::i;:::-;4288:29;-1:-1;4369:1;4401:49;4446:3;4426:9;4401:49;:::i;:::-;4376:75;;-1:-1;4520:2;4553:49;4598:3;4574:22;;;4553:49;:::i;:::-;4546:4;4539:5;4535:16;4528:75;4472:142;4673:2;4706:49;4751:3;4742:6;4731:9;4727:22;4706:49;:::i;:::-;4699:4;4692:5;4688:16;4681:75;4624:143;4819:2;4852:49;4897:3;4888:6;4877:9;4873:22;4852:49;:::i;:::-;4845:4;4838:5;4834:16;4827:75;4777:136;4995:3;4984:9;4980:19;4967:33;5020:18;5012:6;5009:30;5006:2;;;5052:1;5049;5042:12;5006:2;5087:58;5141:3;5132:6;5121:9;5117:22;5087:58;:::i;:::-;5080:4;5073:5;5069:16;5062:84;4923:234;4227:940;;;;:::o;5311:390::-;;5450:2;5438:9;5429:7;5425:23;5421:32;5418:2;;;5466:1;5463;5456:12;5418:2;5501:24;;5545:18;5534:30;;5531:2;;;5577:1;5574;5567:12;5531:2;5597:88;5677:7;5668:6;5657:9;5653:22;5597:88;:::i;:::-;5587:98;5412:289;-1:-1;;;;5412:289::o;5708:1141::-;;;;;5996:3;5984:9;5975:7;5971:23;5967:33;5964:2;;;6013:1;6010;6003:12;5964:2;6048:1;6065:79;6136:7;6116:9;6065:79;:::i;:::-;6055:89;;6027:123;6209:2;6198:9;6194:18;6181:32;6233:18;6225:6;6222:30;6219:2;;;6265:1;6262;6255:12;6219:2;6285:110;6387:7;6378:6;6367:9;6363:22;6285:110;:::i;:::-;6275:120;;6160:241;6460:2;6449:9;6445:18;6432:32;6484:18;6476:6;6473:30;6470:2;;;6516:1;6513;6506:12;6470:2;6536:78;6606:7;6597:6;6586:9;6582:22;6536:78;:::i;:::-;6526:88;;6411:209;6679:2;6668:9;6664:18;6651:32;6703:18;6695:6;6692:30;6689:2;;;6735:1;6732;6725:12;6689:2;6755:78;6825:7;6816:6;6805:9;6801:22;6755:78;:::i;:::-;6745:88;;6630:209;5958:891;;;;;;;:::o;6857:173::-;;6944:46;6986:3;6978:6;6944:46;:::i;:::-;-1:-1;;7019:4;7010:14;;6937:93::o;7039:281::-;;7204:110;7310:3;7302:6;7204:110;:::i;:::-;7190:124;7183:137;-1:-1;;;7183:137::o;7329:173::-;;7416:46;7458:3;7450:6;7416:46;:::i;7510:127::-;7599:32;7625:5;7599:32;:::i;:::-;7594:3;7587:45;7581:56;;:::o;7785:690::-;;7930:54;7978:5;7930:54;:::i;:::-;7997:86;8076:6;8071:3;7997:86;:::i;:::-;7990:93;;8104:56;8154:5;8104:56;:::i;:::-;8180:7;8208:1;8193:260;8218:6;8215:1;8212:13;8193:260;;;8285:6;8279:13;8306:63;8365:3;8350:13;8306:63;:::i;:::-;8299:70;;8386:60;8439:6;8386:60;:::i;:::-;8376:70;-1:-1;;8240:1;8233:9;8193:260;;;-1:-1;8466:3;;7909:566;-1:-1;;;;;7909:566::o;8574:1104::-;;8783:86;8863:5;8783:86;:::i;:::-;8882:118;8993:6;8988:3;8882:118;:::i;:::-;8875:125;;9023:3;9065:4;9057:6;9053:17;9048:3;9044:27;9092:88;9174:5;9092:88;:::i;:::-;9200:7;9228:1;9213:426;9238:6;9235:1;9232:13;9213:426;;;9300:9;9294:4;9290:20;9285:3;9278:33;9345:6;9339:13;9367:128;9490:4;9475:13;9367:128;:::i;:::-;9359:136;;9512:92;9597:6;9512:92;:::i;:::-;9627:4;9618:14;;;;;9502:102;-1:-1;;9260:1;9253:9;9213:426;;;-1:-1;9652:4;;8762:916;-1:-1;;;;;;;8762:916::o;9717:690::-;;9862:54;9910:5;9862:54;:::i;:::-;9929:86;10008:6;10003:3;9929:86;:::i;:::-;9922:93;;10036:56;10086:5;10036:56;:::i;:::-;10112:7;10140:1;10125:260;10150:6;10147:1;10144:13;10125:260;;;10217:6;10211:13;10238:63;10297:3;10282:13;10238:63;:::i;:::-;10231:70;;10318:60;10371:6;10318:60;:::i;:::-;10308:70;-1:-1;;10172:1;10165:9;10125:260;;10415:94;10482:21;10497:5;10482:21;:::i;10516:103::-;10589:24;10607:5;10589:24;:::i;10626:323::-;;10726:38;10758:5;10726:38;:::i;:::-;10776:60;10829:6;10824:3;10776:60;:::i;:::-;10769:67;;10841:52;10886:6;10881:3;10874:4;10867:5;10863:16;10841:52;:::i;:::-;10914:29;10936:6;10914:29;:::i;:::-;10905:39;;;;10706:243;-1:-1;;;10706:243::o;10956:150::-;11051:49;11094:5;11051:49;:::i;11198:1060::-;11421:23;;11198:1060;;11353:4;11344:14;;;11450:63;11348:3;11421:23;11450:63;:::i;:::-;11373:146;11600:4;11593:5;11589:16;11583:23;11612:63;11669:4;11664:3;11660:14;11646:12;11612:63;:::i;:::-;11529:152;11763:4;11756:5;11752:16;11746:23;11775:63;11832:4;11827:3;11823:14;11809:12;11775:63;:::i;:::-;11691:153;11919:4;11912:5;11908:16;11902:23;11931:63;11988:4;11983:3;11979:14;11965:12;11931:63;:::i;:::-;11854:146;12077:4;12070:5;12066:16;12060:23;12129:3;12123:4;12119:14;12112:4;12107:3;12103:14;12096:38;12149:71;12215:4;12201:12;12149:71;:::i;:::-;12141:79;11326:932;-1:-1;;;;;11326:932::o;12352:839::-;12579:23;;12511:4;12502:14;;;12608:63;12506:3;12579:23;12608:63;:::i;:::-;12531:146;12765:4;12758:5;12754:16;12748:23;12777:57;12828:4;12823:3;12819:14;12805:12;12777:57;:::i;:::-;12687:153;12918:4;12911:5;12907:16;12901:23;12930:79;13003:4;12998:3;12994:14;12980:12;12930:79;:::i;:::-;12850:165;13101:4;13094:5;13090:16;13084:23;13113:57;13164:4;13159:3;13155:14;13141:12;13113:57;:::i;:::-;13025:151;12484:707;;;:::o;13308:370::-;13485:2;13499:47;;;13470:18;;13560:108;13470:18;13654:6;13560:108;:::i;13685:1136::-;14138:3;14123:19;;14153:83;14127:9;14209:6;14153:83;:::i;:::-;14284:9;14278:4;14274:20;14269:2;14258:9;14254:18;14247:48;14309:172;14476:4;14467:6;14309:172;:::i;:::-;14301:180;;14529:9;14523:4;14519:20;14514:2;14503:9;14499:18;14492:48;14554:108;14657:4;14648:6;14554:108;:::i;:::-;14546:116;;14673:138;14807:2;14796:9;14792:18;14783:6;14673:138;:::i;14828:256::-;14890:2;14884:9;14916:17;;;14991:18;14976:34;;15012:22;;;14973:62;14970:2;;;15048:1;15045;15038:12;14970:2;15064;15057:22;14868:216;;-1:-1;14868:216::o;15091:304::-;;15250:18;15242:6;15239:30;15236:2;;;15282:1;15279;15272:12;15236:2;-1:-1;15317:4;15305:17;;;15370:15;;15173:222::o;16366:321::-;;16509:18;16501:6;16498:30;16495:2;;;16541:1;16538;16531:12;16495:2;-1:-1;16672:4;16608;16585:17;;;;-1:-1;;16581:33;16662:15;;16432:255::o;16694:151::-;16818:4;16809:14;;16766:79::o;17200:137::-;17303:12;;17274:63::o;18170:178::-;18288:19;;;18337:4;18328:14;;18281:67::o;18923:91::-;;18985:24;19003:5;18985:24;:::i;19127:85::-;19193:13;19186:21;;19169:43::o;19219:72::-;19281:5;19264:27::o;19298:117::-;;19386:24;19404:5;19386:24;:::i;19422:134::-;19498:5;19504:47;19498:5;19504:47;:::i;:::-;19481:75;;;:::o;19641:121::-;-1:-1;;;;;19703:54;;19686:76::o;19848:134::-;;19939:38;19971:5;19939:38;:::i;19990:145::-;20071:6;20066:3;20061;20048:30;-1:-1;20127:1;20109:16;;20102:27;20041:94::o;20144:268::-;20209:1;20216:101;20230:6;20227:1;20224:13;20216:101;;;20297:11;;;20291:18;20278:11;;;20271:39;20252:2;20245:10;20216:101;;;20332:6;20329:1;20326:13;20323:2;;;-1:-1;;20397:1;20379:16;;20372:27;20193:219::o;20420:97::-;20508:2;20488:14;-1:-1;;20484:28;;20468:49::o;20525:105::-;20608:1;20601:5;20598:12;20588:2;;20614:9;20588:2;20582:48;:::o;20637:117::-;20706:24;20724:5;20706:24;:::i;:::-;20699:5;20696:35;20686:2;;20745:1;20742;20735:12;20761:117;20830:24;20848:5;20830:24;:::i;20885:169::-;20980:50;21024:5;20980:50;:::i"
            }
        }
    },
    "sourceTreeHashHex": "0xfdc014abb81049a61994f87f707f204351bc85c6588a83c0301663ebbff1d6cd",
    "sources": {
        "./BalancerV2BatchSampler.sol": {
            "id": 12,
            "content": "// SPDX-License-Identifier: Apache-2.0\n/*\n\n  Copyright 2021 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.6;\npragma experimental ABIEncoderV2;\n\nimport \"./interfaces/IBalancerV2Vault.sol\";\nimport \"./BalancerV2Common.sol\";\n\ncontract BalancerV2BatchSampler is BalancerV2Common {\n\n    // Replaces amount for first step with each takerTokenAmount and calls queryBatchSwap using supplied steps\n    /// @dev Sample sell quotes from Balancer V2 supporting multihops.\n    /// @param swapSteps Array of swap steps (can be >= 1).\n    /// @param swapAssets Array of token address for swaps.\n    /// @param takerTokenAmounts Taker token sell amount for each sample.\n    function sampleMultihopSellsFromBalancerV2(\n        IBalancerV2Vault vault,\n        IBalancerV2Vault.BatchSwapStep[] memory swapSteps,\n        address[] memory swapAssets,\n        uint256[] memory takerTokenAmounts\n    )\n        public\n        returns (uint256[] memory makerTokenAmounts)\n    {\n        uint256 numSamples = takerTokenAmounts.length;\n        makerTokenAmounts = new uint256[](numSamples);\n        IBalancerV2Vault.FundManagement memory swapFunds =\n            _createSwapFunds();\n\n        for (uint256 i = 0; i < numSamples; i++) {\n            swapSteps[0].amount = takerTokenAmounts[i];\n            try\n                // For sells we specify the takerToken which is what the vault will receive from the trade\n                vault.queryBatchSwap(IBalancerV2Vault.SwapKind.GIVEN_IN, swapSteps, swapAssets, swapFunds)\n            // amounts represent pool balance deltas from the swap (incoming balance, outgoing balance)\n            returns (int256[] memory amounts) {\n                // Outgoing balance is negative so we need to flip the sign\n                // Note - queryBatchSwap will return a delta for each token in the assets array and last asset should be tokenOut\n                int256 amountOutFromPool = amounts[amounts.length - 1] * -1;\n                if (amountOutFromPool <= 0) {\n                    break;\n                }\n                makerTokenAmounts[i] = uint256(amountOutFromPool);\n            } catch {\n                // Swallow failures, leaving all results as zero.\n                break;\n            }\n        }\n    }\n\n    // Replaces amount for first step with each makerTokenAmount and calls queryBatchSwap using supplied steps\n    /// @dev Sample buy quotes from Balancer V2 supporting multihops.\n    /// @param swapSteps Array of swap steps (can be >= 1).\n    /// @param swapAssets Array of token address for swaps.\n    /// @param makerTokenAmounts Maker token buy amount for each sample.\n    function sampleMultihopBuysFromBalancerV2(\n        IBalancerV2Vault vault,\n        IBalancerV2Vault.BatchSwapStep[] memory swapSteps,\n        address[] memory swapAssets,\n        uint256[] memory makerTokenAmounts\n    )\n        public\n        returns (uint256[] memory takerTokenAmounts)\n    {\n        uint256 numSamples = makerTokenAmounts.length;\n        takerTokenAmounts = new uint256[](numSamples);\n        IBalancerV2Vault.FundManagement memory swapFunds =\n            _createSwapFunds();\n\n        for (uint256 i = 0; i < numSamples; i++) {\n            swapSteps[0].amount = makerTokenAmounts[i];\n            try\n                // Uses GIVEN_OUT type for Buy\n                vault.queryBatchSwap(IBalancerV2Vault.SwapKind.GIVEN_OUT, swapSteps, swapAssets, swapFunds)\n            // amounts represent pool balance deltas from the swap (incoming balance, outgoing balance)\n            returns (int256[] memory amounts) {\n                int256 amountIntoPool = amounts[0];\n                if (amountIntoPool <= 0) {\n                    break;\n                }\n                takerTokenAmounts[i] = uint256(amountIntoPool);\n            } catch {\n                // Swallow failures, leaving all results as zero.\n                break;\n            }\n        }\n    }\n}\n"
        },
        "./interfaces/IBalancerV2Vault.sol": {
            "id": 42,
            "content": "// SPDX-License-Identifier: Apache-2.0\n/*\n\n  Copyright 2020 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.6;\npragma experimental ABIEncoderV2;\n\n/// @dev Minimal Balancer V2 Vault interface\n///      for documentation refer to https://github.com/balancer-labs/balancer-core-v2/blob/master/contracts/vault/interfaces/IVault.sol\ninterface IBalancerV2Vault {\n    enum SwapKind { GIVEN_IN, GIVEN_OUT }\n\n    struct BatchSwapStep {\n        bytes32 poolId;\n        uint256 assetInIndex;\n        uint256 assetOutIndex;\n        uint256 amount;\n        bytes userData;\n    }\n\n    struct FundManagement {\n        address sender;\n        bool fromInternalBalance;\n        address payable recipient;\n        bool toInternalBalance;\n    }\n\n    struct BalancerV2PoolInfo {\n        bytes32 poolId;\n        address vault;\n    }\n\n    function queryBatchSwap(\n        SwapKind kind,\n        BatchSwapStep[] calldata swaps,\n        address[] calldata assets,\n        FundManagement calldata funds\n    ) external returns (int256[] memory assetDeltas);\n}\n"
        },
        "./BalancerV2Common.sol": {
            "id": 13,
            "content": "// SPDX-License-Identifier: Apache-2.0\n/*\n\n  Copyright 2021 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.6;\npragma experimental ABIEncoderV2;\n\nimport \"./interfaces/IBalancerV2Vault.sol\";\n\n\ncontract BalancerV2Common {\n\n    function _createSwapFunds()\n        internal\n        view\n        returns (IBalancerV2Vault.FundManagement memory)\n    {\n        return\n            IBalancerV2Vault.FundManagement({\n                sender: address(this),\n                fromInternalBalance: false,\n                recipient: payable(address(this)),\n                toInternalBalance: false\n            });\n    }\n}\n"
        }
    },
    "sourceCodes": {
        "./BalancerV2BatchSampler.sol": "// SPDX-License-Identifier: Apache-2.0\n/*\n\n  Copyright 2021 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.6;\npragma experimental ABIEncoderV2;\n\nimport \"./interfaces/IBalancerV2Vault.sol\";\nimport \"./BalancerV2Common.sol\";\n\ncontract BalancerV2BatchSampler is BalancerV2Common {\n\n    // Replaces amount for first step with each takerTokenAmount and calls queryBatchSwap using supplied steps\n    /// @dev Sample sell quotes from Balancer V2 supporting multihops.\n    /// @param swapSteps Array of swap steps (can be >= 1).\n    /// @param swapAssets Array of token address for swaps.\n    /// @param takerTokenAmounts Taker token sell amount for each sample.\n    function sampleMultihopSellsFromBalancerV2(\n        IBalancerV2Vault vault,\n        IBalancerV2Vault.BatchSwapStep[] memory swapSteps,\n        address[] memory swapAssets,\n        uint256[] memory takerTokenAmounts\n    )\n        public\n        returns (uint256[] memory makerTokenAmounts)\n    {\n        uint256 numSamples = takerTokenAmounts.length;\n        makerTokenAmounts = new uint256[](numSamples);\n        IBalancerV2Vault.FundManagement memory swapFunds =\n            _createSwapFunds();\n\n        for (uint256 i = 0; i < numSamples; i++) {\n            swapSteps[0].amount = takerTokenAmounts[i];\n            try\n                // For sells we specify the takerToken which is what the vault will receive from the trade\n                vault.queryBatchSwap(IBalancerV2Vault.SwapKind.GIVEN_IN, swapSteps, swapAssets, swapFunds)\n            // amounts represent pool balance deltas from the swap (incoming balance, outgoing balance)\n            returns (int256[] memory amounts) {\n                // Outgoing balance is negative so we need to flip the sign\n                // Note - queryBatchSwap will return a delta for each token in the assets array and last asset should be tokenOut\n                int256 amountOutFromPool = amounts[amounts.length - 1] * -1;\n                if (amountOutFromPool <= 0) {\n                    break;\n                }\n                makerTokenAmounts[i] = uint256(amountOutFromPool);\n            } catch {\n                // Swallow failures, leaving all results as zero.\n                break;\n            }\n        }\n    }\n\n    // Replaces amount for first step with each makerTokenAmount and calls queryBatchSwap using supplied steps\n    /// @dev Sample buy quotes from Balancer V2 supporting multihops.\n    /// @param swapSteps Array of swap steps (can be >= 1).\n    /// @param swapAssets Array of token address for swaps.\n    /// @param makerTokenAmounts Maker token buy amount for each sample.\n    function sampleMultihopBuysFromBalancerV2(\n        IBalancerV2Vault vault,\n        IBalancerV2Vault.BatchSwapStep[] memory swapSteps,\n        address[] memory swapAssets,\n        uint256[] memory makerTokenAmounts\n    )\n        public\n        returns (uint256[] memory takerTokenAmounts)\n    {\n        uint256 numSamples = makerTokenAmounts.length;\n        takerTokenAmounts = new uint256[](numSamples);\n        IBalancerV2Vault.FundManagement memory swapFunds =\n            _createSwapFunds();\n\n        for (uint256 i = 0; i < numSamples; i++) {\n            swapSteps[0].amount = makerTokenAmounts[i];\n            try\n                // Uses GIVEN_OUT type for Buy\n                vault.queryBatchSwap(IBalancerV2Vault.SwapKind.GIVEN_OUT, swapSteps, swapAssets, swapFunds)\n            // amounts represent pool balance deltas from the swap (incoming balance, outgoing balance)\n            returns (int256[] memory amounts) {\n                int256 amountIntoPool = amounts[0];\n                if (amountIntoPool <= 0) {\n                    break;\n                }\n                takerTokenAmounts[i] = uint256(amountIntoPool);\n            } catch {\n                // Swallow failures, leaving all results as zero.\n                break;\n            }\n        }\n    }\n}\n",
        "./interfaces/IBalancerV2Vault.sol": "// SPDX-License-Identifier: Apache-2.0\n/*\n\n  Copyright 2020 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.6;\npragma experimental ABIEncoderV2;\n\n/// @dev Minimal Balancer V2 Vault interface\n///      for documentation refer to https://github.com/balancer-labs/balancer-core-v2/blob/master/contracts/vault/interfaces/IVault.sol\ninterface IBalancerV2Vault {\n    enum SwapKind { GIVEN_IN, GIVEN_OUT }\n\n    struct BatchSwapStep {\n        bytes32 poolId;\n        uint256 assetInIndex;\n        uint256 assetOutIndex;\n        uint256 amount;\n        bytes userData;\n    }\n\n    struct FundManagement {\n        address sender;\n        bool fromInternalBalance;\n        address payable recipient;\n        bool toInternalBalance;\n    }\n\n    struct BalancerV2PoolInfo {\n        bytes32 poolId;\n        address vault;\n    }\n\n    function queryBatchSwap(\n        SwapKind kind,\n        BatchSwapStep[] calldata swaps,\n        address[] calldata assets,\n        FundManagement calldata funds\n    ) external returns (int256[] memory assetDeltas);\n}\n",
        "./BalancerV2Common.sol": "// SPDX-License-Identifier: Apache-2.0\n/*\n\n  Copyright 2021 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.6;\npragma experimental ABIEncoderV2;\n\nimport \"./interfaces/IBalancerV2Vault.sol\";\n\n\ncontract BalancerV2Common {\n\n    function _createSwapFunds()\n        internal\n        view\n        returns (IBalancerV2Vault.FundManagement memory)\n    {\n        return\n            IBalancerV2Vault.FundManagement({\n                sender: address(this),\n                fromInternalBalance: false,\n                recipient: payable(address(this)),\n                toInternalBalance: false\n            });\n    }\n}\n"
    },
    "compiler": {
        "name": "solc",
        "version": "0.6.12+commit.27d51765",
        "settings": {
            "remappings": [
                "@0x/contracts-utils=/Users/jacob/projects/ethdev/0x/workspace-remote/workspace/protocol/node_modules/@0x/contracts-utils",
                "@0x/contracts-erc20=/Users/jacob/projects/ethdev/0x/workspace-remote/workspace/protocol/node_modules/@0x/contracts-erc20",
                "@0x/contracts-zero-ex=/Users/jacob/projects/ethdev/0x/workspace-remote/workspace/protocol/packages/asset-swapper/node_modules/@0x/contracts-zero-ex"
            ],
            "optimizer": {
                "enabled": true,
                "runs": 200,
                "details": {
                    "yul": false,
                    "deduplicate": true
                }
            },
            "outputSelection": {
                "*": {
                    "*": [
                        "abi",
                        "devdoc",
                        "evm.bytecode.object",
                        "evm.bytecode.sourceMap",
                        "evm.deployedBytecode.object",
                        "evm.deployedBytecode.sourceMap"
                    ]
                }
            },
            "evmVersion": "istanbul"
        }
    },
    "chains": {}
}

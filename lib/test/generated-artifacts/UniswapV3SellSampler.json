{
    "schemaVersion": "2.0.0",
    "contractName": "UniswapV3SellSampler",
    "compilerOutput": {
        "abi": [
            {
                "inputs": [
                    {
                        "internalType": "contract IUniswapV3Quoter",
                        "name": "quoter",
                        "type": "address"
                    },
                    {
                        "internalType": "contract IERC20TokenV06[]",
                        "name": "path",
                        "type": "address[]"
                    },
                    {
                        "internalType": "uint256[]",
                        "name": "takerTokenAmounts",
                        "type": "uint256[]"
                    }
                ],
                "name": "sampleSells",
                "outputs": [
                    {
                        "internalType": "bytes[]",
                        "name": "uniswapPaths",
                        "type": "bytes[]"
                    },
                    {
                        "internalType": "uint256[]",
                        "name": "makerTokenAmounts",
                        "type": "uint256[]"
                    }
                ],
                "stateMutability": "nonpayable",
                "type": "function"
            }
        ],
        "devdoc": {
            "kind": "dev",
            "methods": {
                "sampleSells(address,address[],uint256[])": {
                    "details": "Sample sell quotes from UniswapV3.",
                    "params": {
                        "path": "Token route. Should be takerToken -> makerToken",
                        "quoter": "UniswapV3 Quoter contract.",
                        "takerTokenAmounts": "Taker token sell amount for each sample."
                    },
                    "returns": {
                        "makerTokenAmounts": "Maker amounts bought at each taker token         amount.",
                        "uniswapPaths": "The encoded uniswap path for each sample."
                    }
                }
            },
            "version": 1
        },
        "evm": {
            "bytecode": {
                "linkReferences": {},
                "object": "0x608060405234801561001057600080fd5b50610edb806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80634f52d0f814610030575b600080fd5b61004361003e366004610b6d565b61005a565b604051610051929190610cdb565b60405180910390f35b60608060606100db866001600160a01b031663c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b15801561009b57600080fd5b505afa1580156100af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100d39190610b51565b8660006102b1565b9050835167ffffffffffffffff811180156100f557600080fd5b5060405190808252806020026020018201604052801561011f578160200160208202803683370190505b509150835167ffffffffffffffff8111801561013a57600080fd5b5060405190808252806020026020018201604052801561016e57816020015b60608152602001906001900390816101595790505b50925060005b84518110156102a75760606000805b845181101561025f5760606101ab8a87848151811061019e57fe5b6020026020010151610754565b90508a6001600160a01b031663cdca1753620493e0838c89815181106101cd57fe5b60200260200101516040518463ffffffff1660e01b81526004016101f2929190610d73565b602060405180830381600088803b15801561020c57600080fd5b5087f19350505050801561023d575060408051601f3d908101601f1916820190925261023a91810190610c64565b60015b61024657610256565b808411610254578093508194505b505b50600101610183565b508061026c5750506102a7565b8085848151811061027957fe5b6020026020010181815250508186848151811061029257fe5b60209081029190910101525050600101610174565b5050935093915050565b606060028284510310156102e05760405162461bcd60e51b81526004016102d790610dbd565b60405180910390fd5b6102e8610ac5565b5060408051606080820183526101f48252610bb86020830152612710828401528251600380825260808201909452919290919081602001602082028036833701905050905060008086868151811061033c57fe5b60200260200101519050600087876001018151811061035757fe5b6020026020010151905060005b600381101561044c5760008a6001600160a01b0316631698ee8285858a866003811061038c57fe5b60200201516040518463ffffffff1660e01b81526004016103af93929190610d95565b60206040518083038186803b1580156103c757600080fd5b505afa1580156103db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ff9190610b51565b905061040a816108b8565b15610443578086868060010197508151811061042257fe5b60200260200101906001600160a01b031690816001600160a01b0316815250505b50600101610364565b5050508061045c5750505061074d565b8551856002011415610553578067ffffffffffffffff8111801561047f57600080fd5b506040519080825280602002602001820160405280156104b357816020015b606081526020019060019003908161049e5790505b50935060005b8181101561054a576040805160018082528183019092529060208083019080368337019050508582815181106104eb57fe5b602002602001018190525082818151811061050257fe5b602002602001015185828151811061051657fe5b602002602001015160008151811061052a57fe5b6001600160a01b03909216602092830291909101909101526001016104b9565b5050505061074d565b60606105638888886001016102b1565b9050805160001415610578575050505061074d565b8051820267ffffffffffffffff8111801561059257600080fd5b506040519080825280602002602001820160405280156105c657816020015b60608152602001906001900390816105b15790505b50945060005b828110156107475760005b825181101561073e5782518281028201908490839081106105f457fe5b60200260200101515160010167ffffffffffffffff8111801561061657600080fd5b50604051908082528060200260200182016040528015610640578160200160208202803683370190505b5088828151811061064d57fe5b602002602001018190525085838151811061066457fe5b602002602001015188828151811061067857fe5b602002602001015160008151811061068c57fe5b60200260200101906001600160a01b031690816001600160a01b03168152505060005b8483815181106106bb57fe5b602002602001015151811015610734578483815181106106d757fe5b602002602001015181815181106106ea57fe5b60200260200101518983815181106106fe57fe5b6020026020010151826001018151811061071457fe5b6001600160a01b03909216602092830291909101909101526001016106af565b50506001016105d7565b506001016105cc565b50505050505b9392505050565b6060600283511015801561076c575081516001018351145b6107885760405162461bcd60e51b81526004016102d790610e01565b815160030283516014020167ffffffffffffffff811180156107a957600080fd5b506040519080825280601f01601f1916602001820160405280156107d4576020820181803683370190505b5090506020810160005b84518110156108b05780156108835760008460018303815181106107fe57fe5b60200260200101516001600160a01b031663ddca3f436040518163ffffffff1660e01b815260040160206040518083038186803b15801561083e57600080fd5b505afa158015610852573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108769190610c41565b60e81b8352506003909101905b600085828151811061089157fe5b602090810291909101015160601b8352506014909101906001016107de565b505092915050565b6000813b806108cb576000915050610ac0565b50816001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561090557600080fd5b505afa158015610919573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093d9190610b51565b6001600160a01b03166370a08231836040518263ffffffff1660e01b81526004016109689190610cc7565b60206040518083038186803b15801561098057600080fd5b505afa158015610994573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b89190610c64565b6109c457506000610ac0565b816001600160a01b031663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b1580156109fd57600080fd5b505afa158015610a11573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a359190610b51565b6001600160a01b03166370a08231836040518263ffffffff1660e01b8152600401610a609190610cc7565b60206040518083038186803b158015610a7857600080fd5b505afa158015610a8c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab09190610c64565b610abc57506000610ac0565b5060015b919050565b60405180606001604052806003906020820280368337509192915050565b600082601f830112610af3578081fd5b8135610b06610b0182610e6d565b610e46565b818152915060208083019084810181840286018201871015610b2757600080fd5b60005b84811015610b4657813584529282019290820190600101610b2a565b505050505092915050565b600060208284031215610b62578081fd5b815161074d81610e8d565b600080600060608486031215610b81578182fd5b8335610b8c81610e8d565b925060208481013567ffffffffffffffff80821115610ba9578485fd5b818701915087601f830112610bbc578485fd5b8135610bca610b0182610e6d565b81815284810190848601868402860187018c1015610be6578889fd5b8895505b83861015610c11578035610bfd81610e8d565b835260019590950194918601918601610bea565b50965050506040870135925080831115610c29578384fd5b5050610c3786828701610ae3565b9150509250925092565b600060208284031215610c52578081fd5b815162ffffff8116811461074d578182fd5b600060208284031215610c75578081fd5b5051919050565b60008151808452815b81811015610ca157602081850181015186830182015201610c85565b81811115610cb25782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0391909116815260200190565b60006040820160408352808551808352606085019150602092506060838202860101838801855b83811015610d3057605f19888403018552610d1e838351610c7c565b94860194925090850190600101610d02565b505085810384870152865180825290840192509050858301845b82811015610d6657815184529284019290840190600101610d4a565b5091979650505050505050565b600060408252610d866040830185610c7c565b90508260208301529392505050565b6001600160a01b03938416815291909216602082015262ffffff909116604082015260600190565b60208082526024908201527f556e6973776170563353616d706c65722f746f6b656e5061746820746f6f20736040820152631a1bdc9d60e21b606082015260800190565b60208082526025908201527f556e6973776170563353616d706c65722f696e76616c69642070617468206c656040820152646e6774687360d81b606082015260800190565b60405181810167ffffffffffffffff81118282101715610e6557600080fd5b604052919050565b600067ffffffffffffffff821115610e83578081fd5b5060209081020190565b6001600160a01b0381168114610ea257600080fd5b5056fea264697066735822122042058ade8a04b73038c4da92589665ed5060a31eea214ed1023ee3312deb13cd64736f6c634300060c0033",
                "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xEDB DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4F52D0F8 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x3E CALLDATASIZE PUSH1 0x4 PUSH2 0xB6D JUMP JUMPDEST PUSH2 0x5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x51 SWAP3 SWAP2 SWAP1 PUSH2 0xCDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x60 PUSH2 0xDB DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC45A0155 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD3 SWAP2 SWAP1 PUSH2 0xB51 JUMP JUMPDEST DUP7 PUSH1 0x0 PUSH2 0x2B1 JUMP JUMPDEST SWAP1 POP DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0xF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x11F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP2 POP DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x13A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x16E JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x159 JUMPI SWAP1 POP JUMPDEST POP SWAP3 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x2A7 JUMPI PUSH1 0x60 PUSH1 0x0 DUP1 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x25F JUMPI PUSH1 0x60 PUSH2 0x1AB DUP11 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x19E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x754 JUMP JUMPDEST SWAP1 POP DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCDCA1753 PUSH3 0x493E0 DUP4 DUP13 DUP10 DUP2 MLOAD DUP2 LT PUSH2 0x1CD JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F2 SWAP3 SWAP2 SWAP1 PUSH2 0xD73 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x20C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP8 CALL SWAP4 POP POP POP POP DUP1 ISZERO PUSH2 0x23D JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x23A SWAP2 DUP2 ADD SWAP1 PUSH2 0xC64 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x246 JUMPI PUSH2 0x256 JUMP JUMPDEST DUP1 DUP5 GT PUSH2 0x254 JUMPI DUP1 SWAP4 POP DUP2 SWAP5 POP JUMPDEST POP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x183 JUMP JUMPDEST POP DUP1 PUSH2 0x26C JUMPI POP POP PUSH2 0x2A7 JUMP JUMPDEST DUP1 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x279 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x292 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE POP POP PUSH1 0x1 ADD PUSH2 0x174 JUMP JUMPDEST POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP3 DUP5 MLOAD SUB LT ISZERO PUSH2 0x2E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D7 SWAP1 PUSH2 0xDBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2E8 PUSH2 0xAC5 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP1 DUP3 ADD DUP4 MSTORE PUSH2 0x1F4 DUP3 MSTORE PUSH2 0xBB8 PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2710 DUP3 DUP5 ADD MSTORE DUP3 MLOAD PUSH1 0x3 DUP1 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP5 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH1 0x0 DUP1 DUP7 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x33C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP8 DUP8 PUSH1 0x1 ADD DUP2 MLOAD DUP2 LT PUSH2 0x357 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x44C JUMPI PUSH1 0x0 DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1698EE82 DUP6 DUP6 DUP11 DUP7 PUSH1 0x3 DUP2 LT PUSH2 0x38C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3AF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD95 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3DB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3FF SWAP2 SWAP1 PUSH2 0xB51 JUMP JUMPDEST SWAP1 POP PUSH2 0x40A DUP2 PUSH2 0x8B8 JUMP JUMPDEST ISZERO PUSH2 0x443 JUMPI DUP1 DUP7 DUP7 DUP1 PUSH1 0x1 ADD SWAP8 POP DUP2 MLOAD DUP2 LT PUSH2 0x422 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x364 JUMP JUMPDEST POP POP POP DUP1 PUSH2 0x45C JUMPI POP POP POP PUSH2 0x74D JUMP JUMPDEST DUP6 MLOAD DUP6 PUSH1 0x2 ADD EQ ISZERO PUSH2 0x553 JUMPI DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x47F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x4B3 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x49E JUMPI SWAP1 POP JUMPDEST POP SWAP4 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x54A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4EB JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x502 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x516 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x52A JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH1 0x1 ADD PUSH2 0x4B9 JUMP JUMPDEST POP POP POP POP PUSH2 0x74D JUMP JUMPDEST PUSH1 0x60 PUSH2 0x563 DUP9 DUP9 DUP9 PUSH1 0x1 ADD PUSH2 0x2B1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x578 JUMPI POP POP POP POP PUSH2 0x74D JUMP JUMPDEST DUP1 MLOAD DUP3 MUL PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x592 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x5C6 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x5B1 JUMPI SWAP1 POP JUMPDEST POP SWAP5 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x747 JUMPI PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x73E JUMPI DUP3 MLOAD DUP3 DUP2 MUL DUP3 ADD SWAP1 DUP5 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x5F4 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD MLOAD PUSH1 0x1 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x616 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x640 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP9 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x64D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x664 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP9 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x678 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x68C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH1 0x0 JUMPDEST DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x6BB JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x734 JUMPI DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x6D7 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x6EA JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP10 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x6FE JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH1 0x1 ADD DUP2 MLOAD DUP2 LT PUSH2 0x714 JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH1 0x1 ADD PUSH2 0x6AF JUMP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x5D7 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x5CC JUMP JUMPDEST POP POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP4 MLOAD LT ISZERO DUP1 ISZERO PUSH2 0x76C JUMPI POP DUP2 MLOAD PUSH1 0x1 ADD DUP4 MLOAD EQ JUMPDEST PUSH2 0x788 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D7 SWAP1 PUSH2 0xE01 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x3 MUL DUP4 MLOAD PUSH1 0x14 MUL ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x7A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x7D4 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x20 DUP2 ADD PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x8B0 JUMPI DUP1 ISZERO PUSH2 0x883 JUMPI PUSH1 0x0 DUP5 PUSH1 0x1 DUP4 SUB DUP2 MLOAD DUP2 LT PUSH2 0x7FE JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDDCA3F43 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x83E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x852 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x876 SWAP2 SWAP1 PUSH2 0xC41 JUMP JUMPDEST PUSH1 0xE8 SHL DUP4 MSTORE POP PUSH1 0x3 SWAP1 SWAP2 ADD SWAP1 JUMPDEST PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x891 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x60 SHL DUP4 MSTORE POP PUSH1 0x14 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x7DE JUMP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 EXTCODESIZE DUP1 PUSH2 0x8CB JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0xAC0 JUMP JUMPDEST POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x905 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x919 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x93D SWAP2 SWAP1 PUSH2 0xB51 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x968 SWAP2 SWAP1 PUSH2 0xCC7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x980 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x994 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9B8 SWAP2 SWAP1 PUSH2 0xC64 JUMP JUMPDEST PUSH2 0x9C4 JUMPI POP PUSH1 0x0 PUSH2 0xAC0 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA11 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA35 SWAP2 SWAP1 PUSH2 0xB51 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA60 SWAP2 SWAP1 PUSH2 0xCC7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA8C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAB0 SWAP2 SWAP1 PUSH2 0xC64 JUMP JUMPDEST PUSH2 0xABC JUMPI POP PUSH1 0x0 PUSH2 0xAC0 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xAF3 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xB06 PUSH2 0xB01 DUP3 PUSH2 0xE6D JUMP JUMPDEST PUSH2 0xE46 JUMP JUMPDEST DUP2 DUP2 MSTORE SWAP2 POP PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP5 DUP2 ADD DUP2 DUP5 MUL DUP7 ADD DUP3 ADD DUP8 LT ISZERO PUSH2 0xB27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xB46 JUMPI DUP2 CALLDATALOAD DUP5 MSTORE SWAP3 DUP3 ADD SWAP3 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xB2A JUMP JUMPDEST POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB62 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x74D DUP2 PUSH2 0xE8D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xB81 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0xB8C DUP2 PUSH2 0xE8D JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 DUP2 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xBA9 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xBBC JUMPI DUP5 DUP6 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xBCA PUSH2 0xB01 DUP3 PUSH2 0xE6D JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 DUP2 ADD SWAP1 DUP5 DUP7 ADD DUP7 DUP5 MUL DUP7 ADD DUP8 ADD DUP13 LT ISZERO PUSH2 0xBE6 JUMPI DUP9 DUP10 REVERT JUMPDEST DUP9 SWAP6 POP JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0xC11 JUMPI DUP1 CALLDATALOAD PUSH2 0xBFD DUP2 PUSH2 0xE8D JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP6 SWAP1 SWAP6 ADD SWAP5 SWAP2 DUP7 ADD SWAP2 DUP7 ADD PUSH2 0xBEA JUMP JUMPDEST POP SWAP7 POP POP POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP3 POP DUP1 DUP4 GT ISZERO PUSH2 0xC29 JUMPI DUP4 DUP5 REVERT JUMPDEST POP POP PUSH2 0xC37 DUP7 DUP3 DUP8 ADD PUSH2 0xAE3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC52 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH3 0xFFFFFF DUP2 AND DUP2 EQ PUSH2 0x74D JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC75 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xCA1 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xC85 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xCB2 JUMPI DUP3 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD PUSH1 0x40 DUP4 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x60 DUP6 ADD SWAP2 POP PUSH1 0x20 SWAP3 POP PUSH1 0x60 DUP4 DUP3 MUL DUP7 ADD ADD DUP4 DUP9 ADD DUP6 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD30 JUMPI PUSH1 0x5F NOT DUP9 DUP5 SUB ADD DUP6 MSTORE PUSH2 0xD1E DUP4 DUP4 MLOAD PUSH2 0xC7C JUMP JUMPDEST SWAP5 DUP7 ADD SWAP5 SWAP3 POP SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xD02 JUMP JUMPDEST POP POP DUP6 DUP2 SUB DUP5 DUP8 ADD MSTORE DUP7 MLOAD DUP1 DUP3 MSTORE SWAP1 DUP5 ADD SWAP3 POP SWAP1 POP DUP6 DUP4 ADD DUP5 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xD66 JUMPI DUP2 MLOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xD4A JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 MSTORE PUSH2 0xD86 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xC7C JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH3 0xFFFFFF SWAP1 SWAP2 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x556E6973776170563353616D706C65722F746F6B656E5061746820746F6F2073 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x1A1BDC9D PUSH1 0xE2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x556E6973776170563353616D706C65722F696E76616C69642070617468206C65 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6E67746873 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xE65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xE83 JUMPI DUP1 DUP2 REVERT JUMPDEST POP PUSH1 0x20 SWAP1 DUP2 MUL ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xEA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TIMESTAMP SDIV DUP11 0xDE DUP11 DIV 0xB7 ADDRESS CODESIZE 0xC4 0xDA SWAP3 PC SWAP7 PUSH6 0xED5060A31EEA 0x21 0x4E 0xD1 MUL RETURNDATACOPY 0xE3 BALANCE 0x2D 0xEB SGT 0xCD PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
                "sourceMap": "716:2029:4:-:0;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
                "immutableReferences": {},
                "linkReferences": {},
                "object": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c80634f52d0f814610030575b600080fd5b61004361003e366004610b6d565b61005a565b604051610051929190610cdb565b60405180910390f35b60608060606100db866001600160a01b031663c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b15801561009b57600080fd5b505afa1580156100af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100d39190610b51565b8660006102b1565b9050835167ffffffffffffffff811180156100f557600080fd5b5060405190808252806020026020018201604052801561011f578160200160208202803683370190505b509150835167ffffffffffffffff8111801561013a57600080fd5b5060405190808252806020026020018201604052801561016e57816020015b60608152602001906001900390816101595790505b50925060005b84518110156102a75760606000805b845181101561025f5760606101ab8a87848151811061019e57fe5b6020026020010151610754565b90508a6001600160a01b031663cdca1753620493e0838c89815181106101cd57fe5b60200260200101516040518463ffffffff1660e01b81526004016101f2929190610d73565b602060405180830381600088803b15801561020c57600080fd5b5087f19350505050801561023d575060408051601f3d908101601f1916820190925261023a91810190610c64565b60015b61024657610256565b808411610254578093508194505b505b50600101610183565b508061026c5750506102a7565b8085848151811061027957fe5b6020026020010181815250508186848151811061029257fe5b60209081029190910101525050600101610174565b5050935093915050565b606060028284510310156102e05760405162461bcd60e51b81526004016102d790610dbd565b60405180910390fd5b6102e8610ac5565b5060408051606080820183526101f48252610bb86020830152612710828401528251600380825260808201909452919290919081602001602082028036833701905050905060008086868151811061033c57fe5b60200260200101519050600087876001018151811061035757fe5b6020026020010151905060005b600381101561044c5760008a6001600160a01b0316631698ee8285858a866003811061038c57fe5b60200201516040518463ffffffff1660e01b81526004016103af93929190610d95565b60206040518083038186803b1580156103c757600080fd5b505afa1580156103db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ff9190610b51565b905061040a816108b8565b15610443578086868060010197508151811061042257fe5b60200260200101906001600160a01b031690816001600160a01b0316815250505b50600101610364565b5050508061045c5750505061074d565b8551856002011415610553578067ffffffffffffffff8111801561047f57600080fd5b506040519080825280602002602001820160405280156104b357816020015b606081526020019060019003908161049e5790505b50935060005b8181101561054a576040805160018082528183019092529060208083019080368337019050508582815181106104eb57fe5b602002602001018190525082818151811061050257fe5b602002602001015185828151811061051657fe5b602002602001015160008151811061052a57fe5b6001600160a01b03909216602092830291909101909101526001016104b9565b5050505061074d565b60606105638888886001016102b1565b9050805160001415610578575050505061074d565b8051820267ffffffffffffffff8111801561059257600080fd5b506040519080825280602002602001820160405280156105c657816020015b60608152602001906001900390816105b15790505b50945060005b828110156107475760005b825181101561073e5782518281028201908490839081106105f457fe5b60200260200101515160010167ffffffffffffffff8111801561061657600080fd5b50604051908082528060200260200182016040528015610640578160200160208202803683370190505b5088828151811061064d57fe5b602002602001018190525085838151811061066457fe5b602002602001015188828151811061067857fe5b602002602001015160008151811061068c57fe5b60200260200101906001600160a01b031690816001600160a01b03168152505060005b8483815181106106bb57fe5b602002602001015151811015610734578483815181106106d757fe5b602002602001015181815181106106ea57fe5b60200260200101518983815181106106fe57fe5b6020026020010151826001018151811061071457fe5b6001600160a01b03909216602092830291909101909101526001016106af565b50506001016105d7565b506001016105cc565b50505050505b9392505050565b6060600283511015801561076c575081516001018351145b6107885760405162461bcd60e51b81526004016102d790610e01565b815160030283516014020167ffffffffffffffff811180156107a957600080fd5b506040519080825280601f01601f1916602001820160405280156107d4576020820181803683370190505b5090506020810160005b84518110156108b05780156108835760008460018303815181106107fe57fe5b60200260200101516001600160a01b031663ddca3f436040518163ffffffff1660e01b815260040160206040518083038186803b15801561083e57600080fd5b505afa158015610852573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108769190610c41565b60e81b8352506003909101905b600085828151811061089157fe5b602090810291909101015160601b8352506014909101906001016107de565b505092915050565b6000813b806108cb576000915050610ac0565b50816001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b15801561090557600080fd5b505afa158015610919573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093d9190610b51565b6001600160a01b03166370a08231836040518263ffffffff1660e01b81526004016109689190610cc7565b60206040518083038186803b15801561098057600080fd5b505afa158015610994573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b89190610c64565b6109c457506000610ac0565b816001600160a01b031663d21220a76040518163ffffffff1660e01b815260040160206040518083038186803b1580156109fd57600080fd5b505afa158015610a11573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a359190610b51565b6001600160a01b03166370a08231836040518263ffffffff1660e01b8152600401610a609190610cc7565b60206040518083038186803b158015610a7857600080fd5b505afa158015610a8c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab09190610c64565b610abc57506000610ac0565b5060015b919050565b60405180606001604052806003906020820280368337509192915050565b600082601f830112610af3578081fd5b8135610b06610b0182610e6d565b610e46565b818152915060208083019084810181840286018201871015610b2757600080fd5b60005b84811015610b4657813584529282019290820190600101610b2a565b505050505092915050565b600060208284031215610b62578081fd5b815161074d81610e8d565b600080600060608486031215610b81578182fd5b8335610b8c81610e8d565b925060208481013567ffffffffffffffff80821115610ba9578485fd5b818701915087601f830112610bbc578485fd5b8135610bca610b0182610e6d565b81815284810190848601868402860187018c1015610be6578889fd5b8895505b83861015610c11578035610bfd81610e8d565b835260019590950194918601918601610bea565b50965050506040870135925080831115610c29578384fd5b5050610c3786828701610ae3565b9150509250925092565b600060208284031215610c52578081fd5b815162ffffff8116811461074d578182fd5b600060208284031215610c75578081fd5b5051919050565b60008151808452815b81811015610ca157602081850181015186830182015201610c85565b81811115610cb25782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0391909116815260200190565b60006040820160408352808551808352606085019150602092506060838202860101838801855b83811015610d3057605f19888403018552610d1e838351610c7c565b94860194925090850190600101610d02565b505085810384870152865180825290840192509050858301845b82811015610d6657815184529284019290840190600101610d4a565b5091979650505050505050565b600060408252610d866040830185610c7c565b90508260208301529392505050565b6001600160a01b03938416815291909216602082015262ffffff909116604082015260600190565b60208082526024908201527f556e6973776170563353616d706c65722f746f6b656e5061746820746f6f20736040820152631a1bdc9d60e21b606082015260800190565b60208082526025908201527f556e6973776170563353616d706c65722f696e76616c69642070617468206c656040820152646e6774687360d81b606082015260800190565b60405181810167ffffffffffffffff81118282101715610e6557600080fd5b604052919050565b600067ffffffffffffffff821115610e83578081fd5b5060209081020190565b6001600160a01b0381168114610ea257600080fd5b5056fea264697066735822122042058ade8a04b73038c4da92589665ed5060a31eea214ed1023ee3312deb13cd64736f6c634300060c0033",
                "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4F52D0F8 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x3E CALLDATASIZE PUSH1 0x4 PUSH2 0xB6D JUMP JUMPDEST PUSH2 0x5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x51 SWAP3 SWAP2 SWAP1 PUSH2 0xCDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x60 PUSH2 0xDB DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC45A0155 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD3 SWAP2 SWAP1 PUSH2 0xB51 JUMP JUMPDEST DUP7 PUSH1 0x0 PUSH2 0x2B1 JUMP JUMPDEST SWAP1 POP DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0xF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x11F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP2 POP DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x13A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x16E JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x159 JUMPI SWAP1 POP JUMPDEST POP SWAP3 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x2A7 JUMPI PUSH1 0x60 PUSH1 0x0 DUP1 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x25F JUMPI PUSH1 0x60 PUSH2 0x1AB DUP11 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x19E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x754 JUMP JUMPDEST SWAP1 POP DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xCDCA1753 PUSH3 0x493E0 DUP4 DUP13 DUP10 DUP2 MLOAD DUP2 LT PUSH2 0x1CD JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F2 SWAP3 SWAP2 SWAP1 PUSH2 0xD73 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x20C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP8 CALL SWAP4 POP POP POP POP DUP1 ISZERO PUSH2 0x23D JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x23A SWAP2 DUP2 ADD SWAP1 PUSH2 0xC64 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x246 JUMPI PUSH2 0x256 JUMP JUMPDEST DUP1 DUP5 GT PUSH2 0x254 JUMPI DUP1 SWAP4 POP DUP2 SWAP5 POP JUMPDEST POP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x183 JUMP JUMPDEST POP DUP1 PUSH2 0x26C JUMPI POP POP PUSH2 0x2A7 JUMP JUMPDEST DUP1 DUP6 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x279 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP2 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x292 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE POP POP PUSH1 0x1 ADD PUSH2 0x174 JUMP JUMPDEST POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP3 DUP5 MLOAD SUB LT ISZERO PUSH2 0x2E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D7 SWAP1 PUSH2 0xDBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2E8 PUSH2 0xAC5 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP1 DUP3 ADD DUP4 MSTORE PUSH2 0x1F4 DUP3 MSTORE PUSH2 0xBB8 PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2710 DUP3 DUP5 ADD MSTORE DUP3 MLOAD PUSH1 0x3 DUP1 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP5 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH1 0x0 DUP1 DUP7 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x33C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP8 DUP8 PUSH1 0x1 ADD DUP2 MLOAD DUP2 LT PUSH2 0x357 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x44C JUMPI PUSH1 0x0 DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1698EE82 DUP6 DUP6 DUP11 DUP7 PUSH1 0x3 DUP2 LT PUSH2 0x38C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3AF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xD95 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3DB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3FF SWAP2 SWAP1 PUSH2 0xB51 JUMP JUMPDEST SWAP1 POP PUSH2 0x40A DUP2 PUSH2 0x8B8 JUMP JUMPDEST ISZERO PUSH2 0x443 JUMPI DUP1 DUP7 DUP7 DUP1 PUSH1 0x1 ADD SWAP8 POP DUP2 MLOAD DUP2 LT PUSH2 0x422 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x364 JUMP JUMPDEST POP POP POP DUP1 PUSH2 0x45C JUMPI POP POP POP PUSH2 0x74D JUMP JUMPDEST DUP6 MLOAD DUP6 PUSH1 0x2 ADD EQ ISZERO PUSH2 0x553 JUMPI DUP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x47F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x4B3 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x49E JUMPI SWAP1 POP JUMPDEST POP SWAP4 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x54A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4EB JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x502 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x516 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x52A JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH1 0x1 ADD PUSH2 0x4B9 JUMP JUMPDEST POP POP POP POP PUSH2 0x74D JUMP JUMPDEST PUSH1 0x60 PUSH2 0x563 DUP9 DUP9 DUP9 PUSH1 0x1 ADD PUSH2 0x2B1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x578 JUMPI POP POP POP POP PUSH2 0x74D JUMP JUMPDEST DUP1 MLOAD DUP3 MUL PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x592 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x5C6 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x5B1 JUMPI SWAP1 POP JUMPDEST POP SWAP5 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x747 JUMPI PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x73E JUMPI DUP3 MLOAD DUP3 DUP2 MUL DUP3 ADD SWAP1 DUP5 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x5F4 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD MLOAD PUSH1 0x1 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x616 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x640 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP9 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x64D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x664 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP9 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x678 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x68C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP PUSH1 0x0 JUMPDEST DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x6BB JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x734 JUMPI DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x6D7 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x6EA JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP10 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x6FE JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH1 0x1 ADD DUP2 MLOAD DUP2 LT PUSH2 0x714 JUMPI INVALID JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH1 0x1 ADD PUSH2 0x6AF JUMP JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x5D7 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x5CC JUMP JUMPDEST POP POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP4 MLOAD LT ISZERO DUP1 ISZERO PUSH2 0x76C JUMPI POP DUP2 MLOAD PUSH1 0x1 ADD DUP4 MLOAD EQ JUMPDEST PUSH2 0x788 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D7 SWAP1 PUSH2 0xE01 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x3 MUL DUP4 MLOAD PUSH1 0x14 MUL ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x7A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x7D4 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x20 DUP2 ADD PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x8B0 JUMPI DUP1 ISZERO PUSH2 0x883 JUMPI PUSH1 0x0 DUP5 PUSH1 0x1 DUP4 SUB DUP2 MLOAD DUP2 LT PUSH2 0x7FE JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDDCA3F43 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x83E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x852 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x876 SWAP2 SWAP1 PUSH2 0xC41 JUMP JUMPDEST PUSH1 0xE8 SHL DUP4 MSTORE POP PUSH1 0x3 SWAP1 SWAP2 ADD SWAP1 JUMPDEST PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x891 JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MLOAD PUSH1 0x60 SHL DUP4 MSTORE POP PUSH1 0x14 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x7DE JUMP JUMPDEST POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 EXTCODESIZE DUP1 PUSH2 0x8CB JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0xAC0 JUMP JUMPDEST POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xDFE1681 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x905 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x919 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x93D SWAP2 SWAP1 PUSH2 0xB51 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x968 SWAP2 SWAP1 PUSH2 0xCC7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x980 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x994 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9B8 SWAP2 SWAP1 PUSH2 0xC64 JUMP JUMPDEST PUSH2 0x9C4 JUMPI POP PUSH1 0x0 PUSH2 0xAC0 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD21220A7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA11 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA35 SWAP2 SWAP1 PUSH2 0xB51 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA60 SWAP2 SWAP1 PUSH2 0xCC7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA78 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA8C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAB0 SWAP2 SWAP1 PUSH2 0xC64 JUMP JUMPDEST PUSH2 0xABC JUMPI POP PUSH1 0x0 PUSH2 0xAC0 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP SWAP2 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xAF3 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xB06 PUSH2 0xB01 DUP3 PUSH2 0xE6D JUMP JUMPDEST PUSH2 0xE46 JUMP JUMPDEST DUP2 DUP2 MSTORE SWAP2 POP PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP5 DUP2 ADD DUP2 DUP5 MUL DUP7 ADD DUP3 ADD DUP8 LT ISZERO PUSH2 0xB27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xB46 JUMPI DUP2 CALLDATALOAD DUP5 MSTORE SWAP3 DUP3 ADD SWAP3 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xB2A JUMP JUMPDEST POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB62 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x74D DUP2 PUSH2 0xE8D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xB81 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0xB8C DUP2 PUSH2 0xE8D JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 DUP2 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xBA9 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xBBC JUMPI DUP5 DUP6 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xBCA PUSH2 0xB01 DUP3 PUSH2 0xE6D JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 DUP2 ADD SWAP1 DUP5 DUP7 ADD DUP7 DUP5 MUL DUP7 ADD DUP8 ADD DUP13 LT ISZERO PUSH2 0xBE6 JUMPI DUP9 DUP10 REVERT JUMPDEST DUP9 SWAP6 POP JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0xC11 JUMPI DUP1 CALLDATALOAD PUSH2 0xBFD DUP2 PUSH2 0xE8D JUMP JUMPDEST DUP4 MSTORE PUSH1 0x1 SWAP6 SWAP1 SWAP6 ADD SWAP5 SWAP2 DUP7 ADD SWAP2 DUP7 ADD PUSH2 0xBEA JUMP JUMPDEST POP SWAP7 POP POP POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP3 POP DUP1 DUP4 GT ISZERO PUSH2 0xC29 JUMPI DUP4 DUP5 REVERT JUMPDEST POP POP PUSH2 0xC37 DUP7 DUP3 DUP8 ADD PUSH2 0xAE3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC52 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH3 0xFFFFFF DUP2 AND DUP2 EQ PUSH2 0x74D JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC75 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xCA1 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xC85 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xCB2 JUMPI DUP3 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD PUSH1 0x40 DUP4 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x60 DUP6 ADD SWAP2 POP PUSH1 0x20 SWAP3 POP PUSH1 0x60 DUP4 DUP3 MUL DUP7 ADD ADD DUP4 DUP9 ADD DUP6 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD30 JUMPI PUSH1 0x5F NOT DUP9 DUP5 SUB ADD DUP6 MSTORE PUSH2 0xD1E DUP4 DUP4 MLOAD PUSH2 0xC7C JUMP JUMPDEST SWAP5 DUP7 ADD SWAP5 SWAP3 POP SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xD02 JUMP JUMPDEST POP POP DUP6 DUP2 SUB DUP5 DUP8 ADD MSTORE DUP7 MLOAD DUP1 DUP3 MSTORE SWAP1 DUP5 ADD SWAP3 POP SWAP1 POP DUP6 DUP4 ADD DUP5 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xD66 JUMPI DUP2 MLOAD DUP5 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP1 DUP5 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xD4A JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 MSTORE PUSH2 0xD86 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xC7C JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH3 0xFFFFFF SWAP1 SWAP2 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x556E6973776170563353616D706C65722F746F6B656E5061746820746F6F2073 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x1A1BDC9D PUSH1 0xE2 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x556E6973776170563353616D706C65722F696E76616C69642070617468206C65 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6E67746873 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xE65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xE83 JUMPI DUP1 DUP2 REVERT JUMPDEST POP PUSH1 0x20 SWAP1 DUP2 MUL ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xEA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TIMESTAMP SDIV DUP11 0xDE DUP11 DIV 0xB7 ADDRESS CODESIZE 0xC4 0xDA SWAP3 PC SWAP7 PUSH6 0xED5060A31EEA 0x21 0x4E 0xD1 MUL RETURNDATACOPY 0xE3 BALANCE 0x2D 0xEB SGT 0xCD PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
                "sourceMap": "716:2029:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1187:1556;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;1374:27;1415:34;1474:35;1524:45;1543:6;-1:-1:-1;;;;;1543:14:4;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1561:4;1567:1;1524:18;:45::i;:::-;1474:95;;1614:17;:24;1600:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1600:39:4;;1580:59;;1676:17;:24;1664:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1649:52;;1717:9;1712:1025;1736:17;:24;1732:1;:28;1712:1025;;;1837:27;1878:20;1921:9;1916:584;1940:9;:16;1936:1;:20;1916:584;;;1981:24;2008:34;2023:4;2029:9;2039:1;2029:12;;;;;;;;;;;;;;2008:14;:34::i;:::-;1981:61;;2084:6;-1:-1:-1;;;;;2084:22:4;;912:5:3;2175:11:4;2188:17;2206:1;2188:20;;;;;;;;;;;;;;2084:125;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2084:125:4;;;;;;;;-1:-1:-1;;2084:125:4;;;;;;;;;;;;:::i;:::-;;;2060:426;;;;;2320:9;2304:12;:25;2300:158;;2372:9;2357:24;;2424:11;2407:28;;2300:158;2234:242;2060:426;-1:-1:-1;1958:3:4;;1916:584;;;-1:-1:-1;2575:17:4;2571:61;;2612:5;;;;2571:61;2668:12;2645:17;2663:1;2645:20;;;;;;;;;;;;;:35;;;;;2712:14;2694:12;2707:1;2694:15;;;;;;;;;;;;;;;;;:32;-1:-1:-1;;1762:3:4;;1712:1025;;;;1187:1556;;;;;;;:::o;924:2725:3:-;1111:35;1216:1;1202:10;1183:9;:16;:29;:34;;1162:117;;;;-1:-1:-1;;;1162:117:3;;;;;;;:::i;:::-;;;;;;;;;1289:30;;:::i;:::-;-1:-1:-1;1289:203:3;;;;;;;;;1416:8;1289:203;;1446:7;1289:203;;;;1475:6;1289:203;;;;1551:42;;1572:20;1551:42;;;;;;;;;1289:203;;;;1551:42;;;;;;;;;;;;;-1:-1:-1;1551:42:3;1502:91;;1603:21;1652:25;1680:9;1690:10;1680:21;;;;;;;;;;;;;;1652:49;;1715:26;1744:9;1754:10;1767:1;1754:14;1744:25;;;;;;;;;;;;;;1715:54;;1788:9;1783:296;1807:20;1803:1;:24;1783:296;;;1852:19;1890:7;-1:-1:-1;;;;;1890:15:3;;1906:10;1918:11;1931:13;1945:1;1931:16;;;;;;;;;;;1890:58;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1852:96;;1970:18;1983:4;1970:12;:18::i;:::-;1966:99;;;2042:4;2012:10;2023:15;;;;;;2012:27;;;;;;;;;;;;;:34;-1:-1:-1;;;;;2012:34:3;;;-1:-1:-1;;;;;2012:34:3;;;;;1966:99;-1:-1:-1;1829:3:3;;1783:296;;;-1:-1:-1;;;2102:18:3;2098:109;;2180:16;;;;;2098:109;2238:9;:16;2220:10;2233:1;2220:14;:34;2216:349;;;2333:13;2310:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2298:49;;2366:9;2361:164;2385:13;2381:1;:17;2361:164;;;2438:23;;;2459:1;2438:23;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2438:23:3;2423:9;2433:1;2423:12;;;;;;;;;;;;;:38;;;;2497:10;2508:1;2497:13;;;;;;;;;;;;;;2479:9;2489:1;2479:12;;;;;;;;;;;;;;2492:1;2479:15;;;;;;;;-1:-1:-1;;;;;2479:31:3;;;:15;;;;;;;;;;;:31;2400:3;;2361:164;;;;2538:16;;;;;2216:349;2616:45;2676:54;2695:7;2704:9;2715:10;2728:1;2715:14;2676:18;:54::i;:::-;2616:114;;2744:19;:26;2774:1;2744:31;2740:122;;;2835:16;;;;;;2740:122;2989:19;:26;2973:13;:42;2937:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2925:100;;3040:9;3035:582;3059:13;3055:1;:17;3035:582;;;3098:9;3093:514;3117:19;:26;3113:1;:30;3093:514;;;3184:26;;3180:30;;;:34;;;3184:19;;3213:1;;3348:22;;;;;;;;;;;;:29;3344:1;:33;3323:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3323:55:3;;3288:9;3298:1;3288:12;;;;;;;;;;;;;:90;;;;3414:10;3425:1;3414:13;;;;;;;;;;;;;;3396:9;3406:1;3396:12;;;;;;;;;;;;;;3409:1;3396:15;;;;;;;;;;;;;:31;-1:-1:-1;;;;;3396:31:3;;;-1:-1:-1;;;;;3396:31:3;;;;;3450:9;3445:148;3469:19;3489:1;3469:22;;;;;;;;;;;;;;:29;3465:1;:33;3445:148;;;3549:19;3569:1;3549:22;;;;;;;;;;;;;;3572:1;3549:25;;;;;;;;;;;;;;3527:9;3537:1;3527:12;;;;;;;;;;;;;;3544:1;3540;:5;3527:19;;;;;;;;-1:-1:-1;;;;;3527:47:3;;;:19;;;;;;;;;;;:47;3500:3;;3445:148;;;-1:-1:-1;;3145:3:3;;3093:514;;;-1:-1:-1;3074:3:3;;3035:582;;;;3626:16;;;;924:2725;;;;;;:::o;4347:1083::-;4509:24;4590:1;4570:9;:16;:21;;:64;;;;;4615:8;:15;4633:1;4615:19;4595:9;:16;:39;4570:64;4549:148;;;;-1:-1:-1;;;4549:148:3;;;;;;;:::i;:::-;4886:8;:15;4904:1;4886:19;4862:9;:16;4881:2;4862:21;:43;4852:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4852:54:3;-1:-1:-1;4838:68:3;-1:-1:-1;4968:2:3;4951:20;;4916:9;4982:442;5006:9;:16;5002:1;:20;4982:442;;;5047:5;;5043:211;;5072:14;5089:8;5102:1;5098;:5;5089:15;;;;;;;;;;;;;;-1:-1:-1;;;;;5089:19:3;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5173:3;5169:17;5159:28;;-1:-1:-1;5220:1:3;5213:9;;;;5137:103;5267:20;5290:9;5300:1;5290:12;;;;;;;;;;;;;;;;;;5357:2;5353:14;5343:25;;-1:-1:-1;5397:2:3;5390:10;;;;5024:3;;4982:442;;;;4347:1083;;;;;:::o;5436:624::-;5525:12;5678:17;;5726:13;5722:64;;5766:5;5759:12;;;;;5722:64;5436:624;5856:4;-1:-1:-1;;;;;5856:11:3;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5856:23:3;;5888:4;5856:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5852:86;;-1:-1:-1;5922:5:3;5915:12;;5852:86;5951:4;-1:-1:-1;;;;;5951:11:3;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5951:23:3;;5983:4;5951:38;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5947:86;;-1:-1:-1;6017:5:3;6010:12;;5947:86;-1:-1:-1;6049:4:3;5436:624;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;:::o;835:707::-;;952:3;945:4;937:6;933:17;929:27;919:2;;-1:-1;;960:12;919:2;1007:6;994:20;1029:80;1044:64;1101:6;1044:64;:::i;:::-;1029:80;:::i;:::-;1137:21;;;1020:89;-1:-1;1181:4;1194:14;;;;1169:17;;;1283;;;1274:27;;;;1271:36;-1:-1;1268:2;;;1320:1;;1310:12;1268:2;1345:1;1330:206;1355:6;1352:1;1349:13;1330:206;;;2679:20;;1423:50;;1487:14;;;;1515;;;;1377:1;1370:9;1330:206;;;1334:14;;;;;912:630;;;;:::o;2890:305::-;;3026:2;3014:9;3005:7;3001:23;2997:32;2994:2;;;-1:-1;;3032:12;2994:2;1834:6;1828:13;1846:54;1894:5;1846:54;:::i;3836:853::-;;;;4069:2;4057:9;4048:7;4044:23;4040:32;4037:2;;;-1:-1;;4075:12;4037:2;2392:6;2379:20;2404:57;2455:5;2404:57;:::i;:::-;4127:87;-1:-1;4279:2;4264:18;;;4251:32;4303:18;4292:30;;;4289:2;;;-1:-1;;4325:12;4289:2;4437:6;4426:9;4422:22;;;177:3;170:4;162:6;158:17;154:27;144:2;;-1:-1;;185:12;144:2;232:6;219:20;254:101;269:85;347:6;269:85;:::i;254:101::-;383:21;;;440:14;;;;415:17;;;529;;;520:27;;;;517:36;-1:-1;514:2;;;-1:-1;;556:12;514:2;-1:-1;582:10;;576:227;601:6;598:1;595:13;576:227;;;1651:6;1638:20;1663:54;1711:5;1663:54;:::i;:::-;669:71;;623:1;616:9;;;;;754:14;;;;782;;576:227;;;-1:-1;4345:109;-1:-1;;;4519:2;4504:18;;4491:32;;-1:-1;4532:30;;;4529:2;;;-1:-1;;4565:12;4529:2;;;4595:78;4665:7;4656:6;4645:9;4641:22;4595:78;:::i;:::-;4585:88;;;4031:658;;;;;:::o;4696:261::-;;4810:2;4798:9;4789:7;4785:23;4781:32;4778:2;;;-1:-1;;4816:12;4778:2;2556:6;2550:13;15651:8;17204:5;15640:20;17180:5;17177:34;17167:2;;-1:-1;;17215:12;4964:263;;5079:2;5067:9;5058:7;5054:23;5050:32;5047:2;;;-1:-1;;5085:12;5047:2;-1:-1;2827:13;;5041:186;-1:-1;5041:186::o;7418:323::-;;7550:5;13430:12;14122:6;14117:3;14110:19;-1:-1;16130:101;16144:6;16141:1;16138:13;16130:101;;;14159:4;16211:11;;;;;16205:18;16192:11;;;;;16185:39;16159:10;16130:101;;;16246:6;16243:1;16240:13;16237:2;;;-1:-1;14159:4;16302:6;14154:3;16293:16;;16286:27;16237:2;-1:-1;16418:7;16402:14;-1:-1;;16398:28;7697:39;;;;14159:4;7697:39;;7498:243;-1:-1;;7498:243::o;9385:222::-;-1:-1;;;;;15513:54;;;;5685:37;;9512:2;9497:18;;9483:124::o;9614:665::-;;9887:2;9876:9;9872:18;9887:2;9908:17;9901:47;9962:126;5981:5;13430:12;14122:6;14117:3;14110:19;14150:14;9876:9;14150:14;5993:102;;14159:4;;;14150:14;14159:4;6152:6;6148:17;9876:9;6139:27;;14159:4;6246:5;13117:14;-1:-1;6285:357;6310:6;6307:1;6304:13;6285:357;;;6362:20;;9876:9;6366:4;6362:20;;6357:3;6350:33;5354:64;5414:3;6417:6;6411:13;5354:64;:::i;:::-;6621:14;;;;6431:90;-1:-1;13841:14;;;;6332:1;6325:9;6285:357;;;-1:-1;;10126:20;;;10106:18;;;10099:48;13430:12;;14110:19;;;14150:14;;;;-1:-1;13430:12;-1:-1;13117:14;;;-1:-1;7128:260;7153:6;7150:1;7147:13;7128:260;;;7214:13;;9216:37;;5586:14;;;;13841;;;;6332:1;7168:9;7128:260;;;-1:-1;10153:116;;9858:421;-1:-1;;;;;;;9858:421::o;10286:417::-;;10459:2;10480:17;10473:47;10534:76;10459:2;10448:9;10444:18;10596:6;10534:76;:::i;:::-;10526:84;;9246:5;10689:2;10678:9;10674:18;9216:37;10430:273;;;;;:::o;10710:524::-;-1:-1;;;;;15513:54;;;8190:71;;15513:54;;;;11139:2;11124:18;;8190:71;15651:8;15640:20;;;11220:2;11205:18;;9107:36;10933:2;10918:18;;10904:330::o;11241:416::-;11441:2;11455:47;;;8498:2;11426:18;;;14110:19;8534:34;14150:14;;;8514:55;-1:-1;;;8589:12;;;8582:28;8629:12;;;11412:245::o;11664:416::-;11864:2;11878:47;;;8880:2;11849:18;;;14110:19;8916:34;14150:14;;;8896:55;-1:-1;;;8971:12;;;8964:29;9012:12;;;11835:245::o;12087:256::-;12149:2;12143:9;12175:17;;;12250:18;12235:34;;12271:22;;;12232:62;12229:2;;;12307:1;;12297:12;12229:2;12149;12316:22;12127:216;;-1:-1;12127:216::o;12350:325::-;;12530:18;12522:6;12519:30;12516:2;;;-1:-1;;12552:12;12516:2;-1:-1;12597:4;12585:17;;;12650:15;;12453:222::o;16439:159::-;-1:-1;;;;;15513:54;;16519:56;;16509:2;;16589:1;;16579:12;16509:2;16503:95;:::o"
            },
            "methodIdentifiers": {
                "sampleSells(address,address[],uint256[])": "4f52d0f8"
            }
        }
    },
    "sourceTreeHashHex": "0xd67855a4ae39c17ac9c8d827d5962b52e85f886f548e6ce4ebf08c445d809ff1",
    "sources": {
        "./UniswapV3SellSampler.sol": {
            "id": 4,
            "content": "// SPDX-License-Identifier: Apache-2.0\n/*\n\n  Copyright 2021 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.6;\npragma experimental ABIEncoderV2;\n\nimport \"./UniswapV3SamplerCommon.sol\";\n\ncontract UniswapV3SellSampler is UniswapV3SamplerCommon\n{\n    /// @dev Sample sell quotes from UniswapV3.\n    /// @param quoter UniswapV3 Quoter contract.\n    /// @param path Token route. Should be takerToken -> makerToken\n    /// @param takerTokenAmounts Taker token sell amount for each sample.\n    /// @return uniswapPaths The encoded uniswap path for each sample.\n    /// @return makerTokenAmounts Maker amounts bought at each taker token\n    ///         amount.\n    function sampleSells(\n        IUniswapV3Quoter quoter,\n        IERC20TokenV06[] memory path,\n        uint256[] memory takerTokenAmounts\n    )\n        public\n        returns (\n            bytes[] memory uniswapPaths,\n            uint256[] memory makerTokenAmounts\n        )\n    {\n        IUniswapV3Pool[][] memory poolPaths =\n            _getValidPoolPaths(quoter.factory(), path, 0);\n\n        makerTokenAmounts = new uint256[](takerTokenAmounts.length);\n        uniswapPaths = new bytes[](takerTokenAmounts.length);\n\n        for (uint256 i = 0; i < takerTokenAmounts.length; ++i) {\n            // Pick the best result from all the paths.\n            bytes memory topUniswapPath;\n            uint256 topBuyAmount = 0;\n            for (uint256 j = 0; j < poolPaths.length; ++j) {\n                bytes memory uniswapPath = _toUniswapPath(path, poolPaths[j]);\n                try\n                    quoter.quoteExactInput\n                        { gas: QUOTE_GAS }\n                        (uniswapPath, takerTokenAmounts[i])\n                        returns (uint256 buyAmount)\n                {\n                    if (topBuyAmount <= buyAmount) {\n                        topBuyAmount = buyAmount;\n                        topUniswapPath = uniswapPath;\n                    }\n                } catch { }\n            }\n            // Break early if we can't complete the buys.\n            if (topBuyAmount == 0) {\n                break;\n            }\n            makerTokenAmounts[i] = topBuyAmount;\n            uniswapPaths[i] = topUniswapPath;\n        }\n    }\n}\n"
        },
        "./UniswapV3SamplerCommon.sol": {
            "id": 3,
            "content": "// SPDX-License-Identifier: Apache-2.0\n/*\n\n  Copyright 2021 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.6;\npragma experimental ABIEncoderV2;\n\nimport \"@0x/contracts-erc20/contracts/src/v06/IERC20TokenV06.sol\";\nimport \"./UniswapV3.sol\";\n\ncontract UniswapV3SamplerCommon {\n    /// @dev Gas limit for UniswapV3 calls. This is 100% a guess.\n    uint256 constant internal QUOTE_GAS = 300e3;\n\n    function _getValidPoolPaths(\n        IUniswapV3Factory factory,\n        IERC20TokenV06[] memory tokenPath,\n        uint256 startIndex\n    )\n        internal\n        view\n        returns (IUniswapV3Pool[][] memory poolPaths)\n    {\n        require(\n            tokenPath.length - startIndex >= 2,\n            \"UniswapV3Sampler/tokenPath too short\"\n        );\n        uint24[3] memory validPoolFees = [\n            // The launch pool fees. Could get hairier if they add more.\n            uint24(0.0005e6),\n            uint24(0.003e6),\n            uint24(0.01e6)\n        ];\n        IUniswapV3Pool[] memory validPools =\n            new IUniswapV3Pool[](validPoolFees.length);\n        uint256 numValidPools = 0;\n        {\n            IERC20TokenV06 inputToken = tokenPath[startIndex];\n            IERC20TokenV06 outputToken = tokenPath[startIndex + 1];\n            for (uint256 i = 0; i < validPoolFees.length; ++i) {\n                IUniswapV3Pool pool =\n                factory.getPool(inputToken, outputToken, validPoolFees[i]);\n                if (_isValidPool(pool)) {\n                    validPools[numValidPools++] = pool;\n                }\n            }\n        }\n        if (numValidPools == 0) {\n            // No valid pools for this hop.\n            return poolPaths;\n        }\n        if (startIndex + 2 == tokenPath.length) {\n            // End of path.\n            poolPaths = new IUniswapV3Pool[][](numValidPools);\n            for (uint256 i = 0; i < numValidPools; ++i) {\n                poolPaths[i] = new IUniswapV3Pool[](1);\n                poolPaths[i][0] = validPools[i];\n            }\n            return poolPaths;\n        }\n        // Get paths for subsequent hops.\n        IUniswapV3Pool[][] memory subsequentPoolPaths =\n            _getValidPoolPaths(factory, tokenPath, startIndex + 1);\n        if (subsequentPoolPaths.length == 0) {\n            // Could not complete the path.\n            return poolPaths;\n        }\n        // Combine our pools with the next hop paths.\n        poolPaths = new IUniswapV3Pool[][](\n            numValidPools * subsequentPoolPaths.length\n        );\n        for (uint256 i = 0; i < numValidPools; ++i) {\n            for (uint256 j = 0; j < subsequentPoolPaths.length; ++j) {\n                uint256 o = i * subsequentPoolPaths.length + j;\n                // Prepend pool to the subsequent path.\n                poolPaths[o] =\n                    new IUniswapV3Pool[](1 + subsequentPoolPaths[j].length);\n                poolPaths[o][0] = validPools[i];\n                for (uint256 k = 0; k < subsequentPoolPaths[j].length; ++k) {\n                    poolPaths[o][1 + k] = subsequentPoolPaths[j][k];\n                }\n            }\n        }\n        return poolPaths;\n    }\n\n    function _reverseTokenPath(IERC20TokenV06[] memory tokenPath)\n        internal\n        pure\n        returns (IERC20TokenV06[] memory reversed)\n    {\n        reversed = new IERC20TokenV06[](tokenPath.length);\n        for (uint256 i = 0; i < tokenPath.length; ++i) {\n            reversed[i] = tokenPath[tokenPath.length - i - 1];\n        }\n    }\n\n    function _reversePoolPath(IUniswapV3Pool[] memory poolPath)\n        internal\n        pure\n        returns (IUniswapV3Pool[] memory reversed)\n    {\n        reversed = new IUniswapV3Pool[](poolPath.length);\n        for (uint256 i = 0; i < poolPath.length; ++i) {\n            reversed[i] = poolPath[poolPath.length - i - 1];\n        }\n    }\n\n    function _toUniswapPath(\n        IERC20TokenV06[] memory tokenPath,\n        IUniswapV3Pool[] memory poolPath\n    )\n        internal\n        view\n        returns (bytes memory uniswapPath)\n    {\n        require(\n            tokenPath.length >= 2 && tokenPath.length == poolPath.length + 1,\n            \"UniswapV3Sampler/invalid path lengths\"\n        );\n        // Uniswap paths are tightly packed as:\n        // [token0, token0token1PairFee, token1, token1Token2PairFee, token2, ...]\n        uniswapPath = new bytes(tokenPath.length * 20 + poolPath.length * 3);\n        uint256 o;\n        assembly { o := add(uniswapPath, 32) }\n        for (uint256 i = 0; i < tokenPath.length; ++i) {\n            if (i > 0) {\n                uint24 poolFee = poolPath[i - 1].fee();\n                assembly {\n                    mstore(o, shl(232, poolFee))\n                    o := add(o, 3)\n                }\n            }\n            IERC20TokenV06 token = tokenPath[i];\n            assembly {\n                mstore(o, shl(96, token))\n                o := add(o, 20)\n            }\n        }\n    }\n\n    function _isValidPool(IUniswapV3Pool pool)\n        private\n        view\n        returns (bool isValid)\n    {\n        // Check if it has been deployed.\n        {\n            uint256 codeSize;\n            assembly {\n                codeSize := extcodesize(pool)\n            }\n            if (codeSize == 0) {\n                return false;\n            }\n        }\n        // Must have a balance of both tokens.\n        if (pool.token0().balanceOf(address(pool)) == 0) {\n            return false;\n        }\n        if (pool.token1().balanceOf(address(pool)) == 0) {\n            return false;\n        }\n        return true;\n    }\n}\n"
        },
        "@0x/contracts-erc20/contracts/src/v06/IERC20TokenV06.sol": {
            "id": 0,
            "content": "// SPDX-License-Identifier: Apache-2.0\n/*\n\n  Copyright 2020 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.6.5;\n\n\ninterface IERC20TokenV06 {\n\n    // solhint-disable no-simple-event-func-name\n    event Transfer(\n        address indexed from,\n        address indexed to,\n        uint256 value\n    );\n\n    event Approval(\n        address indexed owner,\n        address indexed spender,\n        uint256 value\n    );\n\n    /// @dev send `value` token to `to` from `msg.sender`\n    /// @param to The address of the recipient\n    /// @param value The amount of token to be transferred\n    /// @return True if transfer was successful\n    function transfer(address to, uint256 value)\n        external\n        returns (bool);\n\n    /// @dev send `value` token to `to` from `from` on the condition it is approved by `from`\n    /// @param from The address of the sender\n    /// @param to The address of the recipient\n    /// @param value The amount of token to be transferred\n    /// @return True if transfer was successful\n    function transferFrom(\n        address from,\n        address to,\n        uint256 value\n    )\n        external\n        returns (bool);\n\n    /// @dev `msg.sender` approves `spender` to spend `value` tokens\n    /// @param spender The address of the account able to transfer the tokens\n    /// @param value The amount of wei to be approved for transfer\n    /// @return Always true if the call has enough gas to complete execution\n    function approve(address spender, uint256 value)\n        external\n        returns (bool);\n\n    /// @dev Query total supply of token\n    /// @return Total supply of token\n    function totalSupply()\n        external\n        view\n        returns (uint256);\n\n    /// @dev Get the balance of `owner`.\n    /// @param owner The address from which the balance will be retrieved\n    /// @return Balance of owner\n    function balanceOf(address owner)\n        external\n        view\n        returns (uint256);\n\n    /// @dev Get the allowance for `spender` to spend from `owner`.\n    /// @param owner The address of the account owning tokens\n    /// @param spender The address of the account able to transfer the tokens\n    /// @return Amount of remaining tokens allowed to spent\n    function allowance(address owner, address spender)\n        external\n        view\n        returns (uint256);\n\n    /// @dev Get the number of decimals this token has.\n    function decimals()\n        external\n        view\n        returns (uint8);\n}\n"
        },
        "./UniswapV3.sol": {
            "id": 1,
            "content": "// SPDX-License-Identifier: Apache-2.0\n/*\n\n  Copyright 2021 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.6;\npragma experimental ABIEncoderV2;\n\nimport \"@0x/contracts-erc20/contracts/src/v06/IERC20TokenV06.sol\";\n\ninterface IUniswapV3Quoter {\n    function factory()\n        external\n        view\n        returns (IUniswapV3Factory factory_);\n    function quoteExactInput(bytes memory path, uint256 amountIn)\n        external\n        returns (uint256 amountOut);\n    function quoteExactOutput(bytes memory path, uint256 amountOut)\n        external\n        returns (uint256 amountIn);\n}\n\ninterface IUniswapV3Factory {\n    function getPool(IERC20TokenV06 a, IERC20TokenV06 b, uint24 fee)\n        external\n        view\n        returns (IUniswapV3Pool pool);\n}\n\ninterface IUniswapV3Pool {\n    function token0() external view returns (IERC20TokenV06);\n    function token1() external view returns (IERC20TokenV06);\n    function fee() external view returns (uint24);\n}\n\n// HACK: Keep the compiler from complaining about filenames.\ncontract UniswapV3 {}\n"
        }
    },
    "sourceCodes": {
        "./UniswapV3SellSampler.sol": "// SPDX-License-Identifier: Apache-2.0\n/*\n\n  Copyright 2021 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.6;\npragma experimental ABIEncoderV2;\n\nimport \"./UniswapV3SamplerCommon.sol\";\n\ncontract UniswapV3SellSampler is UniswapV3SamplerCommon\n{\n    /// @dev Sample sell quotes from UniswapV3.\n    /// @param quoter UniswapV3 Quoter contract.\n    /// @param path Token route. Should be takerToken -> makerToken\n    /// @param takerTokenAmounts Taker token sell amount for each sample.\n    /// @return uniswapPaths The encoded uniswap path for each sample.\n    /// @return makerTokenAmounts Maker amounts bought at each taker token\n    ///         amount.\n    function sampleSells(\n        IUniswapV3Quoter quoter,\n        IERC20TokenV06[] memory path,\n        uint256[] memory takerTokenAmounts\n    )\n        public\n        returns (\n            bytes[] memory uniswapPaths,\n            uint256[] memory makerTokenAmounts\n        )\n    {\n        IUniswapV3Pool[][] memory poolPaths =\n            _getValidPoolPaths(quoter.factory(), path, 0);\n\n        makerTokenAmounts = new uint256[](takerTokenAmounts.length);\n        uniswapPaths = new bytes[](takerTokenAmounts.length);\n\n        for (uint256 i = 0; i < takerTokenAmounts.length; ++i) {\n            // Pick the best result from all the paths.\n            bytes memory topUniswapPath;\n            uint256 topBuyAmount = 0;\n            for (uint256 j = 0; j < poolPaths.length; ++j) {\n                bytes memory uniswapPath = _toUniswapPath(path, poolPaths[j]);\n                try\n                    quoter.quoteExactInput\n                        { gas: QUOTE_GAS }\n                        (uniswapPath, takerTokenAmounts[i])\n                        returns (uint256 buyAmount)\n                {\n                    if (topBuyAmount <= buyAmount) {\n                        topBuyAmount = buyAmount;\n                        topUniswapPath = uniswapPath;\n                    }\n                } catch { }\n            }\n            // Break early if we can't complete the buys.\n            if (topBuyAmount == 0) {\n                break;\n            }\n            makerTokenAmounts[i] = topBuyAmount;\n            uniswapPaths[i] = topUniswapPath;\n        }\n    }\n}\n",
        "./UniswapV3SamplerCommon.sol": "// SPDX-License-Identifier: Apache-2.0\n/*\n\n  Copyright 2021 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.6;\npragma experimental ABIEncoderV2;\n\nimport \"@0x/contracts-erc20/contracts/src/v06/IERC20TokenV06.sol\";\nimport \"./UniswapV3.sol\";\n\ncontract UniswapV3SamplerCommon {\n    /// @dev Gas limit for UniswapV3 calls. This is 100% a guess.\n    uint256 constant internal QUOTE_GAS = 300e3;\n\n    function _getValidPoolPaths(\n        IUniswapV3Factory factory,\n        IERC20TokenV06[] memory tokenPath,\n        uint256 startIndex\n    )\n        internal\n        view\n        returns (IUniswapV3Pool[][] memory poolPaths)\n    {\n        require(\n            tokenPath.length - startIndex >= 2,\n            \"UniswapV3Sampler/tokenPath too short\"\n        );\n        uint24[3] memory validPoolFees = [\n            // The launch pool fees. Could get hairier if they add more.\n            uint24(0.0005e6),\n            uint24(0.003e6),\n            uint24(0.01e6)\n        ];\n        IUniswapV3Pool[] memory validPools =\n            new IUniswapV3Pool[](validPoolFees.length);\n        uint256 numValidPools = 0;\n        {\n            IERC20TokenV06 inputToken = tokenPath[startIndex];\n            IERC20TokenV06 outputToken = tokenPath[startIndex + 1];\n            for (uint256 i = 0; i < validPoolFees.length; ++i) {\n                IUniswapV3Pool pool =\n                factory.getPool(inputToken, outputToken, validPoolFees[i]);\n                if (_isValidPool(pool)) {\n                    validPools[numValidPools++] = pool;\n                }\n            }\n        }\n        if (numValidPools == 0) {\n            // No valid pools for this hop.\n            return poolPaths;\n        }\n        if (startIndex + 2 == tokenPath.length) {\n            // End of path.\n            poolPaths = new IUniswapV3Pool[][](numValidPools);\n            for (uint256 i = 0; i < numValidPools; ++i) {\n                poolPaths[i] = new IUniswapV3Pool[](1);\n                poolPaths[i][0] = validPools[i];\n            }\n            return poolPaths;\n        }\n        // Get paths for subsequent hops.\n        IUniswapV3Pool[][] memory subsequentPoolPaths =\n            _getValidPoolPaths(factory, tokenPath, startIndex + 1);\n        if (subsequentPoolPaths.length == 0) {\n            // Could not complete the path.\n            return poolPaths;\n        }\n        // Combine our pools with the next hop paths.\n        poolPaths = new IUniswapV3Pool[][](\n            numValidPools * subsequentPoolPaths.length\n        );\n        for (uint256 i = 0; i < numValidPools; ++i) {\n            for (uint256 j = 0; j < subsequentPoolPaths.length; ++j) {\n                uint256 o = i * subsequentPoolPaths.length + j;\n                // Prepend pool to the subsequent path.\n                poolPaths[o] =\n                    new IUniswapV3Pool[](1 + subsequentPoolPaths[j].length);\n                poolPaths[o][0] = validPools[i];\n                for (uint256 k = 0; k < subsequentPoolPaths[j].length; ++k) {\n                    poolPaths[o][1 + k] = subsequentPoolPaths[j][k];\n                }\n            }\n        }\n        return poolPaths;\n    }\n\n    function _reverseTokenPath(IERC20TokenV06[] memory tokenPath)\n        internal\n        pure\n        returns (IERC20TokenV06[] memory reversed)\n    {\n        reversed = new IERC20TokenV06[](tokenPath.length);\n        for (uint256 i = 0; i < tokenPath.length; ++i) {\n            reversed[i] = tokenPath[tokenPath.length - i - 1];\n        }\n    }\n\n    function _reversePoolPath(IUniswapV3Pool[] memory poolPath)\n        internal\n        pure\n        returns (IUniswapV3Pool[] memory reversed)\n    {\n        reversed = new IUniswapV3Pool[](poolPath.length);\n        for (uint256 i = 0; i < poolPath.length; ++i) {\n            reversed[i] = poolPath[poolPath.length - i - 1];\n        }\n    }\n\n    function _toUniswapPath(\n        IERC20TokenV06[] memory tokenPath,\n        IUniswapV3Pool[] memory poolPath\n    )\n        internal\n        view\n        returns (bytes memory uniswapPath)\n    {\n        require(\n            tokenPath.length >= 2 && tokenPath.length == poolPath.length + 1,\n            \"UniswapV3Sampler/invalid path lengths\"\n        );\n        // Uniswap paths are tightly packed as:\n        // [token0, token0token1PairFee, token1, token1Token2PairFee, token2, ...]\n        uniswapPath = new bytes(tokenPath.length * 20 + poolPath.length * 3);\n        uint256 o;\n        assembly { o := add(uniswapPath, 32) }\n        for (uint256 i = 0; i < tokenPath.length; ++i) {\n            if (i > 0) {\n                uint24 poolFee = poolPath[i - 1].fee();\n                assembly {\n                    mstore(o, shl(232, poolFee))\n                    o := add(o, 3)\n                }\n            }\n            IERC20TokenV06 token = tokenPath[i];\n            assembly {\n                mstore(o, shl(96, token))\n                o := add(o, 20)\n            }\n        }\n    }\n\n    function _isValidPool(IUniswapV3Pool pool)\n        private\n        view\n        returns (bool isValid)\n    {\n        // Check if it has been deployed.\n        {\n            uint256 codeSize;\n            assembly {\n                codeSize := extcodesize(pool)\n            }\n            if (codeSize == 0) {\n                return false;\n            }\n        }\n        // Must have a balance of both tokens.\n        if (pool.token0().balanceOf(address(pool)) == 0) {\n            return false;\n        }\n        if (pool.token1().balanceOf(address(pool)) == 0) {\n            return false;\n        }\n        return true;\n    }\n}\n",
        "@0x/contracts-erc20/contracts/src/v06/IERC20TokenV06.sol": "// SPDX-License-Identifier: Apache-2.0\n/*\n\n  Copyright 2020 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.6.5;\n\n\ninterface IERC20TokenV06 {\n\n    // solhint-disable no-simple-event-func-name\n    event Transfer(\n        address indexed from,\n        address indexed to,\n        uint256 value\n    );\n\n    event Approval(\n        address indexed owner,\n        address indexed spender,\n        uint256 value\n    );\n\n    /// @dev send `value` token to `to` from `msg.sender`\n    /// @param to The address of the recipient\n    /// @param value The amount of token to be transferred\n    /// @return True if transfer was successful\n    function transfer(address to, uint256 value)\n        external\n        returns (bool);\n\n    /// @dev send `value` token to `to` from `from` on the condition it is approved by `from`\n    /// @param from The address of the sender\n    /// @param to The address of the recipient\n    /// @param value The amount of token to be transferred\n    /// @return True if transfer was successful\n    function transferFrom(\n        address from,\n        address to,\n        uint256 value\n    )\n        external\n        returns (bool);\n\n    /// @dev `msg.sender` approves `spender` to spend `value` tokens\n    /// @param spender The address of the account able to transfer the tokens\n    /// @param value The amount of wei to be approved for transfer\n    /// @return Always true if the call has enough gas to complete execution\n    function approve(address spender, uint256 value)\n        external\n        returns (bool);\n\n    /// @dev Query total supply of token\n    /// @return Total supply of token\n    function totalSupply()\n        external\n        view\n        returns (uint256);\n\n    /// @dev Get the balance of `owner`.\n    /// @param owner The address from which the balance will be retrieved\n    /// @return Balance of owner\n    function balanceOf(address owner)\n        external\n        view\n        returns (uint256);\n\n    /// @dev Get the allowance for `spender` to spend from `owner`.\n    /// @param owner The address of the account owning tokens\n    /// @param spender The address of the account able to transfer the tokens\n    /// @return Amount of remaining tokens allowed to spent\n    function allowance(address owner, address spender)\n        external\n        view\n        returns (uint256);\n\n    /// @dev Get the number of decimals this token has.\n    function decimals()\n        external\n        view\n        returns (uint8);\n}\n",
        "./UniswapV3.sol": "// SPDX-License-Identifier: Apache-2.0\n/*\n\n  Copyright 2021 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.6;\npragma experimental ABIEncoderV2;\n\nimport \"@0x/contracts-erc20/contracts/src/v06/IERC20TokenV06.sol\";\n\ninterface IUniswapV3Quoter {\n    function factory()\n        external\n        view\n        returns (IUniswapV3Factory factory_);\n    function quoteExactInput(bytes memory path, uint256 amountIn)\n        external\n        returns (uint256 amountOut);\n    function quoteExactOutput(bytes memory path, uint256 amountOut)\n        external\n        returns (uint256 amountIn);\n}\n\ninterface IUniswapV3Factory {\n    function getPool(IERC20TokenV06 a, IERC20TokenV06 b, uint24 fee)\n        external\n        view\n        returns (IUniswapV3Pool pool);\n}\n\ninterface IUniswapV3Pool {\n    function token0() external view returns (IERC20TokenV06);\n    function token1() external view returns (IERC20TokenV06);\n    function fee() external view returns (uint24);\n}\n\n// HACK: Keep the compiler from complaining about filenames.\ncontract UniswapV3 {}\n"
    },
    "compiler": {
        "name": "solc",
        "version": "0.6.12+commit.27d51765",
        "settings": {
            "remappings": [
                "@0x/contracts-erc20=/home/merklejerk/code/0x-protocol/node_modules/@0x/contracts-erc20"
            ],
            "optimizer": {
                "enabled": true,
                "runs": 200,
                "details": {
                    "yul": true,
                    "deduplicate": true
                }
            },
            "outputSelection": {
                "*": {
                    "*": [
                        "abi",
                        "devdoc",
                        "evm.bytecode.object",
                        "evm.bytecode.sourceMap",
                        "evm.deployedBytecode.object",
                        "evm.deployedBytecode.sourceMap",
                        "evm.methodIdentifiers"
                    ]
                }
            },
            "evmVersion": "istanbul"
        }
    },
    "chains": {}
}

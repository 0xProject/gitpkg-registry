{
    "schemaVersion": "2.0.0",
    "contractName": "MultiBridgeSampler",
    "compilerOutput": {
        "abi": [
            {
                "constant": true,
                "inputs": [
                    {
                        "internalType": "address",
                        "name": "multibridge",
                        "type": "address"
                    },
                    {
                        "internalType": "address",
                        "name": "takerToken",
                        "type": "address"
                    },
                    {
                        "internalType": "address",
                        "name": "intermediateToken",
                        "type": "address"
                    },
                    {
                        "internalType": "address",
                        "name": "makerToken",
                        "type": "address"
                    },
                    {
                        "internalType": "uint256[]",
                        "name": "takerTokenAmounts",
                        "type": "uint256[]"
                    }
                ],
                "name": "sampleSellsFromMultiBridge",
                "outputs": [
                    {
                        "internalType": "uint256[]",
                        "name": "makerTokenAmounts",
                        "type": "uint256[]"
                    }
                ],
                "payable": false,
                "stateMutability": "view",
                "type": "function"
            }
        ],
        "devdoc": {
            "methods": {
                "sampleSellsFromMultiBridge(address,address,address,address,uint256[])": {
                    "details": "Sample sell quotes from MultiBridge.",
                    "params": {
                        "intermediateToken": "The address of the intermediate token to        use in an indirect route.",
                        "makerToken": "Address of the maker token (what to buy).",
                        "multibridge": "Address of the MultiBridge contract.",
                        "takerToken": "Address of the taker token (what to sell).",
                        "takerTokenAmounts": "Taker token sell amount for each sample."
                    },
                    "return": "makerTokenAmounts Maker amounts bought at each taker token         amount."
                }
            }
        },
        "evm": {
            "bytecode": {
                "linkReferences": {},
                "object": "0x608060405234801561001057600080fd5b5061049a806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80632d753aa414610030575b600080fd5b61004361003e366004610279565b610059565b60405161005091906103ed565b60405180910390f35b60606000825190508060405190808252806020026020018201604052801561008b578160200160208202803883390190505b50915073ffffffffffffffffffffffffffffffffffffffff87166100af5750610246565b60005b8181101561024357600060608973ffffffffffffffffffffffffffffffffffffffff1662061a80600073ffffffffffffffffffffffffffffffffffffffff16636e79e133905060e01b8b8b8b8b898151811061010a57fe5b602002602001015160405160240161012594939291906103b6565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009094169390931790925290516101ae919061037d565b6000604051808303818686fa925050503d80600081146101ea576040519150601f19603f3d011682016040523d82523d6000602084013e6101ef565b606091505b5090925090506000821561021857818060200190516102119190810190610365565b9050610220565b505050610243565b8086858151811061022d57fe5b60209081029190910101525050506001016100b2565b50505b95945050505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461027357600080fd5b92915050565b600080600080600060a08688031215610290578081fd5b61029a878761024f565b945060206102aa8882890161024f565b94506102b9886040890161024f565b93506102c8886060890161024f565b9250608087013567ffffffffffffffff808211156102e4578384fd5b8189018a601f8201126102f5578485fd5b8035925081831115610305578485fd5b8383029150610315848301610430565b8381528481019082860184840187018e101561032f578788fd5b8794505b85851015610351578035835260019490940193918601918601610333565b508096505050505050509295509295909350565b600060208284031215610376578081fd5b5051919050565b60008251815b8181101561039d5760208186018101518583015201610383565b818111156103ab5782828501525b509190910192915050565b73ffffffffffffffffffffffffffffffffffffffff9485168152928416602084015292166040820152606081019190915260800190565b602080825282518282018190526000918401906040840190835b81811015610425578351835260209384019390920191600101610407565b509095945050505050565b60405181810167ffffffffffffffff8111828210171561044f57600080fd5b60405291905056fea365627a7a72315820813e5c05695725df28b85ded9446aa3ee080ca11a8cb5a9c6b6056c90a6bba236c6578706572696d656e74616cf564736f6c63430005110040",
                "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x49A DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2D753AA4 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x3E CALLDATASIZE PUSH1 0x4 PUSH2 0x279 JUMP JUMPDEST PUSH2 0x59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x3ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 MLOAD SWAP1 POP DUP1 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x8B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY ADD SWAP1 POP JUMPDEST POP SWAP2 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH2 0xAF JUMPI POP PUSH2 0x246 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x243 JUMPI PUSH1 0x0 PUSH1 0x60 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0x61A80 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6E79E133 SWAP1 POP PUSH1 0xE0 SHL DUP12 DUP12 DUP12 DUP12 DUP10 DUP2 MLOAD DUP2 LT PUSH2 0x10A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x125 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3B6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 MSTORE SWAP1 MLOAD PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0x37D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP7 STATICCALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1EA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1EF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x0 DUP3 ISZERO PUSH2 0x218 JUMPI DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH2 0x211 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x365 JUMP JUMPDEST SWAP1 POP PUSH2 0x220 JUMP JUMPDEST POP POP POP PUSH2 0x243 JUMP JUMPDEST DUP1 DUP7 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x22D JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE POP POP POP PUSH1 0x1 ADD PUSH2 0xB2 JUMP JUMPDEST POP POP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x273 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x290 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x29A DUP8 DUP8 PUSH2 0x24F JUMP JUMPDEST SWAP5 POP PUSH1 0x20 PUSH2 0x2AA DUP9 DUP3 DUP10 ADD PUSH2 0x24F JUMP JUMPDEST SWAP5 POP PUSH2 0x2B9 DUP9 PUSH1 0x40 DUP10 ADD PUSH2 0x24F JUMP JUMPDEST SWAP4 POP PUSH2 0x2C8 DUP9 PUSH1 0x60 DUP10 ADD PUSH2 0x24F JUMP JUMPDEST SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2E4 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP10 ADD DUP11 PUSH1 0x1F DUP3 ADD SLT PUSH2 0x2F5 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP3 POP DUP2 DUP4 GT ISZERO PUSH2 0x305 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP4 DUP4 MUL SWAP2 POP PUSH2 0x315 DUP5 DUP4 ADD PUSH2 0x430 JUMP JUMPDEST DUP4 DUP2 MSTORE DUP5 DUP2 ADD SWAP1 DUP3 DUP7 ADD DUP5 DUP5 ADD DUP8 ADD DUP15 LT ISZERO PUSH2 0x32F JUMPI DUP8 DUP9 REVERT JUMPDEST DUP8 SWAP5 POP JUMPDEST DUP6 DUP6 LT ISZERO PUSH2 0x351 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE PUSH1 0x1 SWAP5 SWAP1 SWAP5 ADD SWAP4 SWAP2 DUP7 ADD SWAP2 DUP7 ADD PUSH2 0x333 JUMP JUMPDEST POP DUP1 SWAP7 POP POP POP POP POP POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x376 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x39D JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0x383 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x3AB JUMPI DUP3 DUP3 DUP6 ADD MSTORE JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 DUP6 AND DUP2 MSTORE SWAP3 DUP5 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP3 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP5 ADD SWAP1 PUSH1 0x40 DUP5 ADD SWAP1 DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x425 JUMPI DUP4 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x407 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x44F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP INVALID LOG3 PUSH6 0x627A7A723158 KECCAK256 DUP2 RETURNDATACOPY 0x5C SDIV PUSH10 0x5725DF28B85DED9446AA RETURNDATACOPY 0xE0 DUP1 0xCA GT 0xA8 0xCB GAS SWAP13 PUSH12 0x6056C90A6BBA236C65787065 PUSH19 0x696D656E74616CF564736F6C63430005110040 ",
                "sourceMap": "670:2093:46:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;670:2093:46;;;;;;;"
            },
            "deployedBytecode": {
                "linkReferences": {},
                "object": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c80632d753aa414610030575b600080fd5b61004361003e366004610279565b610059565b60405161005091906103ed565b60405180910390f35b60606000825190508060405190808252806020026020018201604052801561008b578160200160208202803883390190505b50915073ffffffffffffffffffffffffffffffffffffffff87166100af5750610246565b60005b8181101561024357600060608973ffffffffffffffffffffffffffffffffffffffff1662061a80600073ffffffffffffffffffffffffffffffffffffffff16636e79e133905060e01b8b8b8b8b898151811061010a57fe5b602002602001015160405160240161012594939291906103b6565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009094169390931790925290516101ae919061037d565b6000604051808303818686fa925050503d80600081146101ea576040519150601f19603f3d011682016040523d82523d6000602084013e6101ef565b606091505b5090925090506000821561021857818060200190516102119190810190610365565b9050610220565b505050610243565b8086858151811061022d57fe5b60209081029190910101525050506001016100b2565b50505b95945050505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461027357600080fd5b92915050565b600080600080600060a08688031215610290578081fd5b61029a878761024f565b945060206102aa8882890161024f565b94506102b9886040890161024f565b93506102c8886060890161024f565b9250608087013567ffffffffffffffff808211156102e4578384fd5b8189018a601f8201126102f5578485fd5b8035925081831115610305578485fd5b8383029150610315848301610430565b8381528481019082860184840187018e101561032f578788fd5b8794505b85851015610351578035835260019490940193918601918601610333565b508096505050505050509295509295909350565b600060208284031215610376578081fd5b5051919050565b60008251815b8181101561039d5760208186018101518583015201610383565b818111156103ab5782828501525b509190910192915050565b73ffffffffffffffffffffffffffffffffffffffff9485168152928416602084015292166040820152606081019190915260800190565b602080825282518282018190526000918401906040840190835b81811015610425578351835260209384019390920191600101610407565b509095945050505050565b60405181810167ffffffffffffffff8111828210171561044f57600080fd5b60405291905056fea365627a7a72315820813e5c05695725df28b85ded9446aa3ee080ca11a8cb5a9c6b6056c90a6bba236c6578706572696d656e74616cf564736f6c63430005110040",
                "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2D753AA4 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x3E CALLDATASIZE PUSH1 0x4 PUSH2 0x279 JUMP JUMPDEST PUSH2 0x59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x3ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 MLOAD SWAP1 POP DUP1 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x8B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CODESIZE DUP4 CODECOPY ADD SWAP1 POP JUMPDEST POP SWAP2 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND PUSH2 0xAF JUMPI POP PUSH2 0x246 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x243 JUMPI PUSH1 0x0 PUSH1 0x60 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0x61A80 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6E79E133 SWAP1 POP PUSH1 0xE0 SHL DUP12 DUP12 DUP12 DUP12 DUP10 DUP2 MLOAD DUP2 LT PUSH2 0x10A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x125 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3B6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 MSTORE SWAP1 MLOAD PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0x37D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP7 STATICCALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1EA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1EF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x0 DUP3 ISZERO PUSH2 0x218 JUMPI DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH2 0x211 SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH2 0x365 JUMP JUMPDEST SWAP1 POP PUSH2 0x220 JUMP JUMPDEST POP POP POP PUSH2 0x243 JUMP JUMPDEST DUP1 DUP7 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x22D JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE POP POP POP PUSH1 0x1 ADD PUSH2 0xB2 JUMP JUMPDEST POP POP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x273 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x290 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x29A DUP8 DUP8 PUSH2 0x24F JUMP JUMPDEST SWAP5 POP PUSH1 0x20 PUSH2 0x2AA DUP9 DUP3 DUP10 ADD PUSH2 0x24F JUMP JUMPDEST SWAP5 POP PUSH2 0x2B9 DUP9 PUSH1 0x40 DUP10 ADD PUSH2 0x24F JUMP JUMPDEST SWAP4 POP PUSH2 0x2C8 DUP9 PUSH1 0x60 DUP10 ADD PUSH2 0x24F JUMP JUMPDEST SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2E4 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP10 ADD DUP11 PUSH1 0x1F DUP3 ADD SLT PUSH2 0x2F5 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP3 POP DUP2 DUP4 GT ISZERO PUSH2 0x305 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP4 DUP4 MUL SWAP2 POP PUSH2 0x315 DUP5 DUP4 ADD PUSH2 0x430 JUMP JUMPDEST DUP4 DUP2 MSTORE DUP5 DUP2 ADD SWAP1 DUP3 DUP7 ADD DUP5 DUP5 ADD DUP8 ADD DUP15 LT ISZERO PUSH2 0x32F JUMPI DUP8 DUP9 REVERT JUMPDEST DUP8 SWAP5 POP JUMPDEST DUP6 DUP6 LT ISZERO PUSH2 0x351 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE PUSH1 0x1 SWAP5 SWAP1 SWAP5 ADD SWAP4 SWAP2 DUP7 ADD SWAP2 DUP7 ADD PUSH2 0x333 JUMP JUMPDEST POP DUP1 SWAP7 POP POP POP POP POP POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x376 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x39D JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0x383 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x3AB JUMPI DUP3 DUP3 DUP6 ADD MSTORE JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 DUP6 AND DUP2 MSTORE SWAP3 DUP5 AND PUSH1 0x20 DUP5 ADD MSTORE SWAP3 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP5 ADD SWAP1 PUSH1 0x40 DUP5 ADD SWAP1 DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x425 JUMPI DUP4 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x407 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x44F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP INVALID LOG3 PUSH6 0x627A7A723158 KECCAK256 DUP2 RETURNDATACOPY 0x5C SDIV PUSH10 0x5725DF28B85DED9446AA RETURNDATACOPY 0xE0 DUP1 0xCA GT 0xA8 0xCB GAS SWAP13 PUSH12 0x6056C90A6BBA236C65787065 PUSH19 0x696D656E74616CF564736F6C63430005110040 ",
                "sourceMap": "670:2093:46:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;670:2093:46;;;;;;;;;;;;;;;;;;;1362:1399;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1613:34;1715:18;1736:17;:24;1715:45;;1804:10;1790:25;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;1790:25:46;-1:-1:-1;1770:45:46;-1:-1:-1;1883:25:46;;;1879:80;;-1:-1:-1;1924:24:46;;1879:80;1974:9;1969:786;1993:10;1989:1;:14;1969:786;;;2025:15;2042:23;2085:11;:22;;803:5;2212:1;2199:28;;;:37;;;;2262:10;2298:17;2341:10;2377:17;2395:1;2377:20;;;;;;;;;;;;;;2151:268;;;;;;;;;;;;;;;;22:32:-1;26:21;;;22:32;6:49;;2151:268:46;;;49:4:-1;25:18;;61:17;;2151:268:46;182:15:-1;2151:268:46;;;;179:29:-1;;;;160:49;;;2085:335:46;;;;2151:268;2085:335;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;-1:-1;2024:396:46;;-1:-1:-1;2024:396:46;-1:-1:-1;2434:17:46;2469:230;;;;2526:10;2515:33;;;;;;;;;;;;;;2503:45;;2469:230;;;2679:5;;;;;2469:230;2735:9;2712:17;2730:1;2712:20;;;;;;;;;;;;;;;;;:32;-1:-1:-1;;;2005:3:46;;1969:786;;;;1362:1399;;;;;;;;;:::o;5:130:-1:-;72:20;;6754:42;6743:54;;7224:35;;7214:2;;7273:1;;7263:12;7214:2;57:78;;;;;1153:879;;;;;;1350:3;1338:9;1329:7;1325:23;1321:33;1318:2;;;-1:-1;;1357:12;1318:2;1419:53;1464:7;1440:22;1419:53;;;1409:63;;1509:2;1527:53;1572:7;1509:2;1552:9;1548:22;1527:53;;;1517:63;;1635:53;1680:7;1617:2;1660:9;1656:22;1635:53;;;1625:63;;1743:53;1788:7;1725:2;1768:9;1764:22;1743:53;;;1733:63;;1861:3;1850:9;1846:19;1833:33;1886:18;;1878:6;1875:30;1872:2;;;-1:-1;;1908:12;1872:2;1999:6;1988:9;1984:22;277:3;270:4;262:6;258:17;254:27;244:2;;-1:-1;;285:12;244:2;332:6;319:20;305:34;;1886:18;5538:6;5535:30;5532:2;;;-1:-1;;5568:12;5532:2;1509;5605:6;5601:17;;;354:80;1509:2;5601:17;5666:15;354:80;;;462:21;;;519:14;;;;494:17;;;599:27;;;;;596:36;-1:-1;593:2;;;-1:-1;;635:12;593:2;-1:-1;661:10;;655:206;680:6;677:1;674:13;655:206;;;942:20;;748:50;;702:1;695:9;;;;;812:14;;;;840;;655:206;;;659:14;1928:88;;;;;;;;;1312:720;;;;;;;;;2039:263;;2154:2;2142:9;2133:7;2129:23;2125:32;2122:2;;;-1:-1;;2160:12;2122:2;-1:-1;1090:13;;2116:186;-1:-1;2116:186;3933:262;;3500:5;5959:12;-1:-1;6961:101;6975:6;6972:1;6969:13;6961:101;;;3644:4;7042:11;;;;;7036:18;7023:11;;;7016:39;6990:10;6961:101;;;7077:6;7074:1;7071:13;7068:2;;;-1:-1;7133:6;7128:3;7124:16;7117:27;7068:2;-1:-1;3675:16;;;;;4058:137;-1:-1;;4058:137;4202:547;6754:42;6743:54;;;2562:37;;6743:54;;;4569:2;4554:18;;2562:37;6743:54;;4652:2;4637:18;;2562:37;4735:2;4720:18;;3764:37;;;;4404:3;4389:19;;4375:374;4756:361;4924:2;4938:47;;;5959:12;;4909:18;;;6362:19;;;4756:361;;5813:14;;;6402;;;;4756:361;3050:260;3075:6;3072:1;3069:13;3050:260;;;3136:13;;3764:37;;4924:2;6217:14;;;;2463;;;;3097:1;3090:9;3050:260;;;-1:-1;4991:116;;4895:222;-1:-1;;;;;4895:222;5124:256;5186:2;5180:9;5212:17;;;5287:18;5272:34;;5308:22;;;5269:62;5266:2;;;5344:1;;5334:12;5266:2;5186;5353:22;5164:216;;-1:-1;5164:216"
            }
        }
    },
    "sourceTreeHashHex": "0x64e63845f5a993b022097b44e1e5faf112484c2c669e0fbce58a7aa937b804f5",
    "sources": {
        "./MultiBridgeSampler.sol": {
            "id": 46
        },
        "./IMultiBridge.sol": {
            "id": 40
        }
    },
    "sourceCodes": {
        "./MultiBridgeSampler.sol": "/*\n\n  Copyright 2019 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.5.9;\npragma experimental ABIEncoderV2;\n\nimport \"./IMultiBridge.sol\";\n\n\ncontract MultiBridgeSampler {\n\n    /// @dev Default gas limit for multibridge calls.\n    uint256 constant private DEFAULT_CALL_GAS = 400e3; // 400k\n\n    /// @dev Sample sell quotes from MultiBridge.\n    /// @param multibridge Address of the MultiBridge contract.\n    /// @param takerToken Address of the taker token (what to sell).\n    /// @param intermediateToken The address of the intermediate token to\n    ///        use in an indirect route.\n    /// @param makerToken Address of the maker token (what to buy).\n    /// @param takerTokenAmounts Taker token sell amount for each sample.\n    /// @return makerTokenAmounts Maker amounts bought at each taker token\n    ///         amount.\n    function sampleSellsFromMultiBridge(\n        address multibridge,\n        address takerToken,\n        address intermediateToken,\n        address makerToken,\n        uint256[] memory takerTokenAmounts\n    )\n        public\n        view\n        returns (uint256[] memory makerTokenAmounts)\n    {\n        // Initialize array of maker token amounts.\n        uint256 numSamples = takerTokenAmounts.length;\n        makerTokenAmounts = new uint256[](numSamples);\n\n        // If no address provided, return all zeros.\n        if (multibridge == address(0)) {\n            return makerTokenAmounts;\n        }\n\n        for (uint256 i = 0; i < numSamples; i++) {\n            (bool didSucceed, bytes memory resultData) =\n                multibridge.staticcall.gas(DEFAULT_CALL_GAS)(\n                    abi.encodeWithSelector(\n                        IMultiBridge(0).getSellQuote.selector,\n                        takerToken,\n                        intermediateToken,\n                        makerToken,\n                        takerTokenAmounts[i]\n                    ));\n            uint256 buyAmount = 0;\n            if (didSucceed) {\n                buyAmount = abi.decode(resultData, (uint256));\n            } else {\n                // Exit early if the amount is too high for the liquidity provider to serve\n                break;\n            }\n            makerTokenAmounts[i] = buyAmount;\n        }\n    }\n}\n",
        "./IMultiBridge.sol": "/*\n\n  Copyright 2020 ZeroEx Intl.\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n\n*/\n\npragma solidity ^0.5.9;\n\n\ninterface IMultiBridge {\n\n    /// @dev Transfers `amount` of the ERC20 `tokenAddress` from `from` to `to`.\n    /// @param tokenAddress The address of the ERC20 token to transfer.\n    /// @param from Address to transfer asset from.\n    /// @param to Address to transfer asset to.\n    /// @param amount Amount of asset to transfer.\n    /// @param bridgeData Arbitrary asset data needed by the bridge contract.\n    /// @return success The magic bytes `0xdc1600f3` if successful.\n    function bridgeTransferFrom(\n        address tokenAddress,\n        address from,\n        address to,\n        uint256 amount,\n        bytes calldata bridgeData\n    )\n        external\n        returns (bytes4 success);\n\n    /// @dev Quotes the amount of `makerToken` that would be obtained by\n    ///      selling `sellAmount` of `takerToken`.\n    /// @param takerToken Address of the taker token (what to sell).\n    /// @param intermediateToken The address of the intermediate token to\n    ///        use in an indirect route.\n    /// @param makerToken Address of the maker token (what to buy).\n    /// @param sellAmount Amount of `takerToken` to sell.\n    /// @return makerTokenAmount Amount of `makerToken` that would be obtained.\n    function getSellQuote(\n        address takerToken,\n        address intermediateToken,\n        address makerToken,\n        uint256 sellAmount\n    )\n        external\n        view\n        returns (uint256 makerTokenAmount);\n}\n"
    },
    "compiler": {
        "name": "solc",
        "version": "0.5.17+commit.d19bba13",
        "settings": {
            "remappings": [
                "@0x/contracts-exchange-libs=/Users/xianny/src/0x-monorepo/node_modules/@0x/contracts-exchange-libs",
                "@0x/contracts-utils=/Users/xianny/src/0x-monorepo/node_modules/@0x/contracts-utils",
                "@0x/contracts-erc20=/Users/xianny/src/0x-monorepo/node_modules/@0x/contracts-erc20",
                "@0x/contracts-exchange=/Users/xianny/src/0x-monorepo/node_modules/@0x/contracts-exchange",
                "@0x/contracts-asset-proxy=/Users/xianny/src/0x-monorepo/node_modules/@0x/contracts-asset-proxy"
            ],
            "optimizer": {
                "enabled": true,
                "runs": 1000000,
                "details": {
                    "yul": true,
                    "deduplicate": true,
                    "cse": true,
                    "constantOptimizer": true
                }
            },
            "outputSelection": {
                "*": {
                    "*": [
                        "abi",
                        "devdoc",
                        "evm.bytecode.object",
                        "evm.bytecode.sourceMap",
                        "evm.deployedBytecode.object",
                        "evm.deployedBytecode.sourceMap"
                    ]
                }
            },
            "evmVersion": "istanbul"
        }
    },
    "chains": {}
}
